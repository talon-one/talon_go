/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CampaignVersions struct for CampaignVersions
type CampaignVersions struct {
	// The campaign revision state displayed in the Campaign Manager.
	RevisionFrontendState *string `json:"revisionFrontendState,omitempty"`
	// ID of the revision that was last activated on this campaign.
	ActiveRevisionId *int32 `json:"activeRevisionId,omitempty"`
	// ID of the revision version that is active on the campaign.
	ActiveRevisionVersionId *int32 `json:"activeRevisionVersionId,omitempty"`
	// Incrementing number representing how many revisions have been activated on this campaign, starts from 0 for a new campaign.
	Version *int32 `json:"version,omitempty"`
	// ID of the revision currently being modified for the campaign.
	CurrentRevisionId *int32 `json:"currentRevisionId,omitempty"`
	// ID of the latest version applied on the current revision.
	CurrentRevisionVersionId *int32 `json:"currentRevisionVersionId,omitempty"`
	// Flag for determining whether we use current revision when sending requests with staging API key.
	StageRevision *bool `json:"stageRevision,omitempty"`
}

// GetRevisionFrontendState returns the RevisionFrontendState field value if set, zero value otherwise.
func (o *CampaignVersions) GetRevisionFrontendState() string {
	if o == nil || o.RevisionFrontendState == nil {
		var ret string
		return ret
	}
	return *o.RevisionFrontendState
}

// GetRevisionFrontendStateOk returns a tuple with the RevisionFrontendState field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignVersions) GetRevisionFrontendStateOk() (string, bool) {
	if o == nil || o.RevisionFrontendState == nil {
		var ret string
		return ret, false
	}
	return *o.RevisionFrontendState, true
}

// HasRevisionFrontendState returns a boolean if a field has been set.
func (o *CampaignVersions) HasRevisionFrontendState() bool {
	if o != nil && o.RevisionFrontendState != nil {
		return true
	}

	return false
}

// SetRevisionFrontendState gets a reference to the given string and assigns it to the RevisionFrontendState field.
func (o *CampaignVersions) SetRevisionFrontendState(v string) {
	o.RevisionFrontendState = &v
}

// GetActiveRevisionId returns the ActiveRevisionId field value if set, zero value otherwise.
func (o *CampaignVersions) GetActiveRevisionId() int32 {
	if o == nil || o.ActiveRevisionId == nil {
		var ret int32
		return ret
	}
	return *o.ActiveRevisionId
}

// GetActiveRevisionIdOk returns a tuple with the ActiveRevisionId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignVersions) GetActiveRevisionIdOk() (int32, bool) {
	if o == nil || o.ActiveRevisionId == nil {
		var ret int32
		return ret, false
	}
	return *o.ActiveRevisionId, true
}

// HasActiveRevisionId returns a boolean if a field has been set.
func (o *CampaignVersions) HasActiveRevisionId() bool {
	if o != nil && o.ActiveRevisionId != nil {
		return true
	}

	return false
}

// SetActiveRevisionId gets a reference to the given int32 and assigns it to the ActiveRevisionId field.
func (o *CampaignVersions) SetActiveRevisionId(v int32) {
	o.ActiveRevisionId = &v
}

// GetActiveRevisionVersionId returns the ActiveRevisionVersionId field value if set, zero value otherwise.
func (o *CampaignVersions) GetActiveRevisionVersionId() int32 {
	if o == nil || o.ActiveRevisionVersionId == nil {
		var ret int32
		return ret
	}
	return *o.ActiveRevisionVersionId
}

// GetActiveRevisionVersionIdOk returns a tuple with the ActiveRevisionVersionId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignVersions) GetActiveRevisionVersionIdOk() (int32, bool) {
	if o == nil || o.ActiveRevisionVersionId == nil {
		var ret int32
		return ret, false
	}
	return *o.ActiveRevisionVersionId, true
}

// HasActiveRevisionVersionId returns a boolean if a field has been set.
func (o *CampaignVersions) HasActiveRevisionVersionId() bool {
	if o != nil && o.ActiveRevisionVersionId != nil {
		return true
	}

	return false
}

// SetActiveRevisionVersionId gets a reference to the given int32 and assigns it to the ActiveRevisionVersionId field.
func (o *CampaignVersions) SetActiveRevisionVersionId(v int32) {
	o.ActiveRevisionVersionId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CampaignVersions) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignVersions) GetVersionOk() (int32, bool) {
	if o == nil || o.Version == nil {
		var ret int32
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CampaignVersions) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *CampaignVersions) SetVersion(v int32) {
	o.Version = &v
}

// GetCurrentRevisionId returns the CurrentRevisionId field value if set, zero value otherwise.
func (o *CampaignVersions) GetCurrentRevisionId() int32 {
	if o == nil || o.CurrentRevisionId == nil {
		var ret int32
		return ret
	}
	return *o.CurrentRevisionId
}

// GetCurrentRevisionIdOk returns a tuple with the CurrentRevisionId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignVersions) GetCurrentRevisionIdOk() (int32, bool) {
	if o == nil || o.CurrentRevisionId == nil {
		var ret int32
		return ret, false
	}
	return *o.CurrentRevisionId, true
}

// HasCurrentRevisionId returns a boolean if a field has been set.
func (o *CampaignVersions) HasCurrentRevisionId() bool {
	if o != nil && o.CurrentRevisionId != nil {
		return true
	}

	return false
}

// SetCurrentRevisionId gets a reference to the given int32 and assigns it to the CurrentRevisionId field.
func (o *CampaignVersions) SetCurrentRevisionId(v int32) {
	o.CurrentRevisionId = &v
}

// GetCurrentRevisionVersionId returns the CurrentRevisionVersionId field value if set, zero value otherwise.
func (o *CampaignVersions) GetCurrentRevisionVersionId() int32 {
	if o == nil || o.CurrentRevisionVersionId == nil {
		var ret int32
		return ret
	}
	return *o.CurrentRevisionVersionId
}

// GetCurrentRevisionVersionIdOk returns a tuple with the CurrentRevisionVersionId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignVersions) GetCurrentRevisionVersionIdOk() (int32, bool) {
	if o == nil || o.CurrentRevisionVersionId == nil {
		var ret int32
		return ret, false
	}
	return *o.CurrentRevisionVersionId, true
}

// HasCurrentRevisionVersionId returns a boolean if a field has been set.
func (o *CampaignVersions) HasCurrentRevisionVersionId() bool {
	if o != nil && o.CurrentRevisionVersionId != nil {
		return true
	}

	return false
}

// SetCurrentRevisionVersionId gets a reference to the given int32 and assigns it to the CurrentRevisionVersionId field.
func (o *CampaignVersions) SetCurrentRevisionVersionId(v int32) {
	o.CurrentRevisionVersionId = &v
}

// GetStageRevision returns the StageRevision field value if set, zero value otherwise.
func (o *CampaignVersions) GetStageRevision() bool {
	if o == nil || o.StageRevision == nil {
		var ret bool
		return ret
	}
	return *o.StageRevision
}

// GetStageRevisionOk returns a tuple with the StageRevision field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignVersions) GetStageRevisionOk() (bool, bool) {
	if o == nil || o.StageRevision == nil {
		var ret bool
		return ret, false
	}
	return *o.StageRevision, true
}

// HasStageRevision returns a boolean if a field has been set.
func (o *CampaignVersions) HasStageRevision() bool {
	if o != nil && o.StageRevision != nil {
		return true
	}

	return false
}

// SetStageRevision gets a reference to the given bool and assigns it to the StageRevision field.
func (o *CampaignVersions) SetStageRevision(v bool) {
	o.StageRevision = &v
}

type NullableCampaignVersions struct {
	Value        CampaignVersions
	ExplicitNull bool
}

func (v NullableCampaignVersions) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCampaignVersions) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
