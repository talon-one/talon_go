/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// ApplicationSessionAllOf struct for ApplicationSessionAllOf
type ApplicationSessionAllOf struct {
	// Integration ID of the customer for the session.
	Profileintegrationid *string `json:"profileintegrationid,omitempty"`
	// Any coupon code entered.
	Coupon string `json:"coupon"`
	// Any referral code entered.
	Referral string `json:"referral"`
	// Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:  1. `open` → `closed` 2. `open` → `cancelled` 3. `closed` → `cancelled` or `partially_returned` 4. `partially_returned` → `cancelled`  For more information, see [Customer session states](https://docs.talon.one/docs/dev/concepts/entities/customer-sessions). 
	State string `json:"state"`
	// Serialized JSON representation.
	CartItems []CartItem `json:"cartItems"`
	// **API V1 only.** A map of labeled discount values, in the same currency as the session.  If you are using the V2 endpoints, refer to the `totalDiscounts` property instead. 
	Discounts map[string]float32 `json:"discounts"`
	// The total sum of the discounts applied to this session.
	TotalDiscounts float32 `json:"totalDiscounts"`
	// The total sum of the session before any discounts applied.
	Total float32 `json:"total"`
	// Arbitrary properties associated with this item.
	Attributes *map[string]map[string]interface{} `json:"attributes,omitempty"`
}

// GetProfileintegrationid returns the Profileintegrationid field value if set, zero value otherwise.
func (o *ApplicationSessionAllOf) GetProfileintegrationid() string {
	if o == nil || o.Profileintegrationid == nil {
		var ret string
		return ret
	}
	return *o.Profileintegrationid
}

// GetProfileintegrationidOk returns a tuple with the Profileintegrationid field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSessionAllOf) GetProfileintegrationidOk() (string, bool) {
	if o == nil || o.Profileintegrationid == nil {
		var ret string
		return ret, false
	}
	return *o.Profileintegrationid, true
}

// HasProfileintegrationid returns a boolean if a field has been set.
func (o *ApplicationSessionAllOf) HasProfileintegrationid() bool {
	if o != nil && o.Profileintegrationid != nil {
		return true
	}

	return false
}

// SetProfileintegrationid gets a reference to the given string and assigns it to the Profileintegrationid field.
func (o *ApplicationSessionAllOf) SetProfileintegrationid(v string) {
	o.Profileintegrationid = &v
}

// GetCoupon returns the Coupon field value
func (o *ApplicationSessionAllOf) GetCoupon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Coupon
}

// SetCoupon sets field value
func (o *ApplicationSessionAllOf) SetCoupon(v string) {
	o.Coupon = v
}

// GetReferral returns the Referral field value
func (o *ApplicationSessionAllOf) GetReferral() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Referral
}

// SetReferral sets field value
func (o *ApplicationSessionAllOf) SetReferral(v string) {
	o.Referral = v
}

// GetState returns the State field value
func (o *ApplicationSessionAllOf) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// SetState sets field value
func (o *ApplicationSessionAllOf) SetState(v string) {
	o.State = v
}

// GetCartItems returns the CartItems field value
func (o *ApplicationSessionAllOf) GetCartItems() []CartItem {
	if o == nil {
		var ret []CartItem
		return ret
	}

	return o.CartItems
}

// SetCartItems sets field value
func (o *ApplicationSessionAllOf) SetCartItems(v []CartItem) {
	o.CartItems = v
}

// GetDiscounts returns the Discounts field value
func (o *ApplicationSessionAllOf) GetDiscounts() map[string]float32 {
	if o == nil {
		var ret map[string]float32
		return ret
	}

	return o.Discounts
}

// SetDiscounts sets field value
func (o *ApplicationSessionAllOf) SetDiscounts(v map[string]float32) {
	o.Discounts = v
}

// GetTotalDiscounts returns the TotalDiscounts field value
func (o *ApplicationSessionAllOf) GetTotalDiscounts() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalDiscounts
}

// SetTotalDiscounts sets field value
func (o *ApplicationSessionAllOf) SetTotalDiscounts(v float32) {
	o.TotalDiscounts = v
}

// GetTotal returns the Total field value
func (o *ApplicationSessionAllOf) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// SetTotal sets field value
func (o *ApplicationSessionAllOf) SetTotal(v float32) {
	o.Total = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ApplicationSessionAllOf) GetAttributes() map[string]map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSessionAllOf) GetAttributesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ApplicationSessionAllOf) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the Attributes field.
func (o *ApplicationSessionAllOf) SetAttributes(v map[string]map[string]interface{}) {
	o.Attributes = &v
}

type NullableApplicationSessionAllOf struct {
	Value ApplicationSessionAllOf
	ExplicitNull bool
}

func (v NullableApplicationSessionAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableApplicationSessionAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
