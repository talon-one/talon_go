/*
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// CustomerProfile
type CustomerProfile struct {
	// The integration ID for this entity sent to and used in the Talon.One system.
	IntegrationId string `json:"integrationId"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// Arbitrary properties associated with this item
	Attributes map[string]interface{} `json:"attributes"`
	// The ID of the Talon.One account that owns this profile.
	AccountId int32 `json:"accountId"`
	// The total amount of closed sessions by a customer. A closed session is a successful purchase.
	ClosedSessions int32 `json:"closedSessions"`
	// Sum of all purchases made by this customer
	TotalSales float32 `json:"totalSales"`
	// A list of loyalty programs joined by the customer
	LoyaltyMemberships *[]LoyaltyMembership `json:"loyaltyMemberships,omitempty"`
	// A list of audiences the customer belongs to
	AudienceMemberships *[]AudienceMembership `json:"audienceMemberships,omitempty"`
	// Timestamp of the most recent event received from this customer
	LastActivity time.Time `json:"lastActivity"`
}

// GetIntegrationId returns the IntegrationId field value
func (o *CustomerProfile) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// SetIntegrationId sets field value
func (o *CustomerProfile) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetCreated returns the Created field value
func (o *CustomerProfile) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *CustomerProfile) SetCreated(v time.Time) {
	o.Created = v
}

// GetAttributes returns the Attributes field value
func (o *CustomerProfile) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// SetAttributes sets field value
func (o *CustomerProfile) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetAccountId returns the AccountId field value
func (o *CustomerProfile) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// SetAccountId sets field value
func (o *CustomerProfile) SetAccountId(v int32) {
	o.AccountId = v
}

// GetClosedSessions returns the ClosedSessions field value
func (o *CustomerProfile) GetClosedSessions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClosedSessions
}

// SetClosedSessions sets field value
func (o *CustomerProfile) SetClosedSessions(v int32) {
	o.ClosedSessions = v
}

// GetTotalSales returns the TotalSales field value
func (o *CustomerProfile) GetTotalSales() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalSales
}

// SetTotalSales sets field value
func (o *CustomerProfile) SetTotalSales(v float32) {
	o.TotalSales = v
}

// GetLoyaltyMemberships returns the LoyaltyMemberships field value if set, zero value otherwise.
func (o *CustomerProfile) GetLoyaltyMemberships() []LoyaltyMembership {
	if o == nil || o.LoyaltyMemberships == nil {
		var ret []LoyaltyMembership
		return ret
	}
	return *o.LoyaltyMemberships
}

// GetLoyaltyMembershipsOk returns a tuple with the LoyaltyMemberships field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetLoyaltyMembershipsOk() ([]LoyaltyMembership, bool) {
	if o == nil || o.LoyaltyMemberships == nil {
		var ret []LoyaltyMembership
		return ret, false
	}
	return *o.LoyaltyMemberships, true
}

// HasLoyaltyMemberships returns a boolean if a field has been set.
func (o *CustomerProfile) HasLoyaltyMemberships() bool {
	if o != nil && o.LoyaltyMemberships != nil {
		return true
	}

	return false
}

// SetLoyaltyMemberships gets a reference to the given []LoyaltyMembership and assigns it to the LoyaltyMemberships field.
func (o *CustomerProfile) SetLoyaltyMemberships(v []LoyaltyMembership) {
	o.LoyaltyMemberships = &v
}

// GetAudienceMemberships returns the AudienceMemberships field value if set, zero value otherwise.
func (o *CustomerProfile) GetAudienceMemberships() []AudienceMembership {
	if o == nil || o.AudienceMemberships == nil {
		var ret []AudienceMembership
		return ret
	}
	return *o.AudienceMemberships
}

// GetAudienceMembershipsOk returns a tuple with the AudienceMemberships field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerProfile) GetAudienceMembershipsOk() ([]AudienceMembership, bool) {
	if o == nil || o.AudienceMemberships == nil {
		var ret []AudienceMembership
		return ret, false
	}
	return *o.AudienceMemberships, true
}

// HasAudienceMemberships returns a boolean if a field has been set.
func (o *CustomerProfile) HasAudienceMemberships() bool {
	if o != nil && o.AudienceMemberships != nil {
		return true
	}

	return false
}

// SetAudienceMemberships gets a reference to the given []AudienceMembership and assigns it to the AudienceMemberships field.
func (o *CustomerProfile) SetAudienceMemberships(v []AudienceMembership) {
	o.AudienceMemberships = &v
}

// GetLastActivity returns the LastActivity field value
func (o *CustomerProfile) GetLastActivity() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastActivity
}

// SetLastActivity sets field value
func (o *CustomerProfile) SetLastActivity(v time.Time) {
	o.LastActivity = v
}

type NullableCustomerProfile struct {
	Value        CustomerProfile
	ExplicitNull bool
}

func (v NullableCustomerProfile) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCustomerProfile) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
