/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CampaignPrioritiesChangedNotification Notification about an Application whose campaigns' priorities changed.
type CampaignPrioritiesChangedNotification struct {
	Application Application `json:"application"`
	// Campaign IDs for each priority. The priority can be one of: ['universal', 'stackable', 'exclusive']
	OldPriorities *map[string][]int32 `json:"oldPriorities,omitempty"`
	// Campaign IDs for each priority. The priority can be one of: ['universal', 'stackable', 'exclusive']
	Priorities map[string][]int32 `json:"priorities"`
}

// GetApplication returns the Application field value
func (o *CampaignPrioritiesChangedNotification) GetApplication() Application {
	if o == nil {
		var ret Application
		return ret
	}

	return o.Application
}

// SetApplication sets field value
func (o *CampaignPrioritiesChangedNotification) SetApplication(v Application) {
	o.Application = v
}

// GetOldPriorities returns the OldPriorities field value if set, zero value otherwise.
func (o *CampaignPrioritiesChangedNotification) GetOldPriorities() map[string][]int32 {
	if o == nil || o.OldPriorities == nil {
		var ret map[string][]int32
		return ret
	}
	return *o.OldPriorities
}

// GetOldPrioritiesOk returns a tuple with the OldPriorities field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignPrioritiesChangedNotification) GetOldPrioritiesOk() (map[string][]int32, bool) {
	if o == nil || o.OldPriorities == nil {
		var ret map[string][]int32
		return ret, false
	}
	return *o.OldPriorities, true
}

// HasOldPriorities returns a boolean if a field has been set.
func (o *CampaignPrioritiesChangedNotification) HasOldPriorities() bool {
	if o != nil && o.OldPriorities != nil {
		return true
	}

	return false
}

// SetOldPriorities gets a reference to the given map[string][]int32 and assigns it to the OldPriorities field.
func (o *CampaignPrioritiesChangedNotification) SetOldPriorities(v map[string][]int32) {
	o.OldPriorities = &v
}

// GetPriorities returns the Priorities field value
func (o *CampaignPrioritiesChangedNotification) GetPriorities() map[string][]int32 {
	if o == nil {
		var ret map[string][]int32
		return ret
	}

	return o.Priorities
}

// SetPriorities sets field value
func (o *CampaignPrioritiesChangedNotification) SetPriorities(v map[string][]int32) {
	o.Priorities = v
}

type NullableCampaignPrioritiesChangedNotification struct {
	Value        CampaignPrioritiesChangedNotification
	ExplicitNull bool
}

func (v NullableCampaignPrioritiesChangedNotification) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCampaignPrioritiesChangedNotification) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
