/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// UpdateCouponBatchAllOf struct for UpdateCouponBatchAllOf
type UpdateCouponBatchAllOf struct {
	// Optional property to set the value of custom coupon attributes. They are defined in the Campaign Manager, see [Managing attributes](https://docs.talon.one/docs/product/account/dev-tools/managing-attributes).  Coupon attributes can also be set to _mandatory_ in your Application [settings](https://docs.talon.one/docs/product/applications/using-attributes#making-attributes-mandatory). If your Application uses mandatory attributes, you must use this property to set their value. 
	Attributes *map[string]map[string]interface{} `json:"attributes,omitempty"`
	// The ID of the batch the coupon(s) belong to.
	BatchID *string `json:"batchID,omitempty"`
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *UpdateCouponBatchAllOf) GetAttributes() map[string]map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponBatchAllOf) GetAttributesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *UpdateCouponBatchAllOf) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the Attributes field.
func (o *UpdateCouponBatchAllOf) SetAttributes(v map[string]map[string]interface{}) {
	o.Attributes = &v
}

// GetBatchID returns the BatchID field value if set, zero value otherwise.
func (o *UpdateCouponBatchAllOf) GetBatchID() string {
	if o == nil || o.BatchID == nil {
		var ret string
		return ret
	}
	return *o.BatchID
}

// GetBatchIDOk returns a tuple with the BatchID field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCouponBatchAllOf) GetBatchIDOk() (string, bool) {
	if o == nil || o.BatchID == nil {
		var ret string
		return ret, false
	}
	return *o.BatchID, true
}

// HasBatchID returns a boolean if a field has been set.
func (o *UpdateCouponBatchAllOf) HasBatchID() bool {
	if o != nil && o.BatchID != nil {
		return true
	}

	return false
}

// SetBatchID gets a reference to the given string and assigns it to the BatchID field.
func (o *UpdateCouponBatchAllOf) SetBatchID(v string) {
	o.BatchID = &v
}

type NullableUpdateCouponBatchAllOf struct {
	Value UpdateCouponBatchAllOf
	ExplicitNull bool
}

func (v NullableUpdateCouponBatchAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableUpdateCouponBatchAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
