/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// AnalyticsDataPointWithTrendAndUplift struct for AnalyticsDataPointWithTrendAndUplift
type AnalyticsDataPointWithTrendAndUplift struct {
	Value float32 `json:"value"`
	Uplift float32 `json:"uplift"`
	Trend float32 `json:"trend"`
}

// GetValue returns the Value field value
func (o *AnalyticsDataPointWithTrendAndUplift) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// SetValue sets field value
func (o *AnalyticsDataPointWithTrendAndUplift) SetValue(v float32) {
	o.Value = v
}

// GetUplift returns the Uplift field value
func (o *AnalyticsDataPointWithTrendAndUplift) GetUplift() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Uplift
}

// SetUplift sets field value
func (o *AnalyticsDataPointWithTrendAndUplift) SetUplift(v float32) {
	o.Uplift = v
}

// GetTrend returns the Trend field value
func (o *AnalyticsDataPointWithTrendAndUplift) GetTrend() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Trend
}

// SetTrend sets field value
func (o *AnalyticsDataPointWithTrendAndUplift) SetTrend(v float32) {
	o.Trend = v
}

type NullableAnalyticsDataPointWithTrendAndUplift struct {
	Value AnalyticsDataPointWithTrendAndUplift
	ExplicitNull bool
}

func (v NullableAnalyticsDataPointWithTrendAndUplift) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableAnalyticsDataPointWithTrendAndUplift) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
