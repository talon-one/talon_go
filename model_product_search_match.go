/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// ProductSearchMatch struct for ProductSearchMatch
type ProductSearchMatch struct {
	// The ID of the product.
	ProductId int32 `json:"productId"`
	// The string matching the given value. Either a product name or SKU.
	Value string `json:"value"`
	// The ID of the SKU linked to a product. If empty, this is an analytics-level product.
	ProductSkuId *int32 `json:"productSkuId,omitempty"`
}

// GetProductId returns the ProductId field value
func (o *ProductSearchMatch) GetProductId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProductId
}

// SetProductId sets field value
func (o *ProductSearchMatch) SetProductId(v int32) {
	o.ProductId = v
}

// GetValue returns the Value field value
func (o *ProductSearchMatch) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// SetValue sets field value
func (o *ProductSearchMatch) SetValue(v string) {
	o.Value = v
}

// GetProductSkuId returns the ProductSkuId field value if set, zero value otherwise.
func (o *ProductSearchMatch) GetProductSkuId() int32 {
	if o == nil || o.ProductSkuId == nil {
		var ret int32
		return ret
	}
	return *o.ProductSkuId
}

// GetProductSkuIdOk returns a tuple with the ProductSkuId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchMatch) GetProductSkuIdOk() (int32, bool) {
	if o == nil || o.ProductSkuId == nil {
		var ret int32
		return ret, false
	}
	return *o.ProductSkuId, true
}

// HasProductSkuId returns a boolean if a field has been set.
func (o *ProductSearchMatch) HasProductSkuId() bool {
	if o != nil && o.ProductSkuId != nil {
		return true
	}

	return false
}

// SetProductSkuId gets a reference to the given int32 and assigns it to the ProductSkuId field.
func (o *ProductSearchMatch) SetProductSkuId(v int32) {
	o.ProductSkuId = &v
}

type NullableProductSearchMatch struct {
	Value        ProductSearchMatch
	ExplicitNull bool
}

func (v NullableProductSearchMatch) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableProductSearchMatch) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
