/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// UpdateApplication struct for UpdateApplication
type UpdateApplication struct {
	// The name of this application.
	Name string `json:"name"`
	// A longer description of the application.
	Description *string `json:"description,omitempty"`
	// A string containing an IANA timezone descriptor.
	Timezone string `json:"timezone"`
	// The default currency for new customer sessions.
	Currency string `json:"currency"`
	// The case sensitivity behavior to check coupon codes in the campaigns of this Application.
	CaseSensitivity *string `json:"caseSensitivity,omitempty"`
	// Arbitrary properties associated with this campaign.
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	// Default limits for campaigns created in this application.
	Limits *[]LimitConfig `json:"limits,omitempty"`
	// Default [priority](https://docs.talon.one/docs/product/applications/setting-up-campaign-priorities) for campaigns created in this Application.
	CampaignPriority *string `json:"campaignPriority,omitempty"`
	// The strategy used when choosing exclusive campaigns for evaluation.
	ExclusiveCampaignsStrategy *string `json:"exclusiveCampaignsStrategy,omitempty"`
	// The default scope to apply `setDiscount` effects on if no scope was provided with the effect.
	DefaultDiscountScope *string `json:"defaultDiscountScope,omitempty"`
	// Indicates if discounts should cascade for this Application.
	EnableCascadingDiscounts *bool `json:"enableCascadingDiscounts,omitempty"`
	// Indicates if cart items of quantity larger than one should be separated into different items of quantity one. See the [docs](https://docs.talon.one/docs/product/campaigns/campaign-evaluation#flattening).
	EnableFlattenedCartItems *bool               `json:"enableFlattenedCartItems,omitempty"`
	AttributesSettings       *AttributesSettings `json:"attributesSettings,omitempty"`
	// Indicates if this is a live or sandbox Application.
	Sandbox *bool `json:"sandbox,omitempty"`
	// Indicates if this Application supports partial discounts.
	EnablePartialDiscounts *bool `json:"enablePartialDiscounts,omitempty"`
	// The default scope to apply `setDiscountPerItem` effects on if no scope was provided with the effect.
	DefaultDiscountAdditionalCostPerItemScope *string `json:"defaultDiscountAdditionalCostPerItemScope,omitempty"`
}

// GetName returns the Name field value
func (o *UpdateApplication) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *UpdateApplication) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateApplication) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateApplication) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateApplication) SetDescription(v string) {
	o.Description = &v
}

// GetTimezone returns the Timezone field value
func (o *UpdateApplication) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// SetTimezone sets field value
func (o *UpdateApplication) SetTimezone(v string) {
	o.Timezone = v
}

// GetCurrency returns the Currency field value
func (o *UpdateApplication) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// SetCurrency sets field value
func (o *UpdateApplication) SetCurrency(v string) {
	o.Currency = v
}

// GetCaseSensitivity returns the CaseSensitivity field value if set, zero value otherwise.
func (o *UpdateApplication) GetCaseSensitivity() string {
	if o == nil || o.CaseSensitivity == nil {
		var ret string
		return ret
	}
	return *o.CaseSensitivity
}

// GetCaseSensitivityOk returns a tuple with the CaseSensitivity field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetCaseSensitivityOk() (string, bool) {
	if o == nil || o.CaseSensitivity == nil {
		var ret string
		return ret, false
	}
	return *o.CaseSensitivity, true
}

// HasCaseSensitivity returns a boolean if a field has been set.
func (o *UpdateApplication) HasCaseSensitivity() bool {
	if o != nil && o.CaseSensitivity != nil {
		return true
	}

	return false
}

// SetCaseSensitivity gets a reference to the given string and assigns it to the CaseSensitivity field.
func (o *UpdateApplication) SetCaseSensitivity(v string) {
	o.CaseSensitivity = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *UpdateApplication) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *UpdateApplication) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *UpdateApplication) SetAttributes(v map[string]interface{}) {
	o.Attributes = &v
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *UpdateApplication) GetLimits() []LimitConfig {
	if o == nil || o.Limits == nil {
		var ret []LimitConfig
		return ret
	}
	return *o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetLimitsOk() ([]LimitConfig, bool) {
	if o == nil || o.Limits == nil {
		var ret []LimitConfig
		return ret, false
	}
	return *o.Limits, true
}

// HasLimits returns a boolean if a field has been set.
func (o *UpdateApplication) HasLimits() bool {
	if o != nil && o.Limits != nil {
		return true
	}

	return false
}

// SetLimits gets a reference to the given []LimitConfig and assigns it to the Limits field.
func (o *UpdateApplication) SetLimits(v []LimitConfig) {
	o.Limits = &v
}

// GetCampaignPriority returns the CampaignPriority field value if set, zero value otherwise.
func (o *UpdateApplication) GetCampaignPriority() string {
	if o == nil || o.CampaignPriority == nil {
		var ret string
		return ret
	}
	return *o.CampaignPriority
}

// GetCampaignPriorityOk returns a tuple with the CampaignPriority field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetCampaignPriorityOk() (string, bool) {
	if o == nil || o.CampaignPriority == nil {
		var ret string
		return ret, false
	}
	return *o.CampaignPriority, true
}

// HasCampaignPriority returns a boolean if a field has been set.
func (o *UpdateApplication) HasCampaignPriority() bool {
	if o != nil && o.CampaignPriority != nil {
		return true
	}

	return false
}

// SetCampaignPriority gets a reference to the given string and assigns it to the CampaignPriority field.
func (o *UpdateApplication) SetCampaignPriority(v string) {
	o.CampaignPriority = &v
}

// GetExclusiveCampaignsStrategy returns the ExclusiveCampaignsStrategy field value if set, zero value otherwise.
func (o *UpdateApplication) GetExclusiveCampaignsStrategy() string {
	if o == nil || o.ExclusiveCampaignsStrategy == nil {
		var ret string
		return ret
	}
	return *o.ExclusiveCampaignsStrategy
}

// GetExclusiveCampaignsStrategyOk returns a tuple with the ExclusiveCampaignsStrategy field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetExclusiveCampaignsStrategyOk() (string, bool) {
	if o == nil || o.ExclusiveCampaignsStrategy == nil {
		var ret string
		return ret, false
	}
	return *o.ExclusiveCampaignsStrategy, true
}

// HasExclusiveCampaignsStrategy returns a boolean if a field has been set.
func (o *UpdateApplication) HasExclusiveCampaignsStrategy() bool {
	if o != nil && o.ExclusiveCampaignsStrategy != nil {
		return true
	}

	return false
}

// SetExclusiveCampaignsStrategy gets a reference to the given string and assigns it to the ExclusiveCampaignsStrategy field.
func (o *UpdateApplication) SetExclusiveCampaignsStrategy(v string) {
	o.ExclusiveCampaignsStrategy = &v
}

// GetDefaultDiscountScope returns the DefaultDiscountScope field value if set, zero value otherwise.
func (o *UpdateApplication) GetDefaultDiscountScope() string {
	if o == nil || o.DefaultDiscountScope == nil {
		var ret string
		return ret
	}
	return *o.DefaultDiscountScope
}

// GetDefaultDiscountScopeOk returns a tuple with the DefaultDiscountScope field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetDefaultDiscountScopeOk() (string, bool) {
	if o == nil || o.DefaultDiscountScope == nil {
		var ret string
		return ret, false
	}
	return *o.DefaultDiscountScope, true
}

// HasDefaultDiscountScope returns a boolean if a field has been set.
func (o *UpdateApplication) HasDefaultDiscountScope() bool {
	if o != nil && o.DefaultDiscountScope != nil {
		return true
	}

	return false
}

// SetDefaultDiscountScope gets a reference to the given string and assigns it to the DefaultDiscountScope field.
func (o *UpdateApplication) SetDefaultDiscountScope(v string) {
	o.DefaultDiscountScope = &v
}

// GetEnableCascadingDiscounts returns the EnableCascadingDiscounts field value if set, zero value otherwise.
func (o *UpdateApplication) GetEnableCascadingDiscounts() bool {
	if o == nil || o.EnableCascadingDiscounts == nil {
		var ret bool
		return ret
	}
	return *o.EnableCascadingDiscounts
}

// GetEnableCascadingDiscountsOk returns a tuple with the EnableCascadingDiscounts field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetEnableCascadingDiscountsOk() (bool, bool) {
	if o == nil || o.EnableCascadingDiscounts == nil {
		var ret bool
		return ret, false
	}
	return *o.EnableCascadingDiscounts, true
}

// HasEnableCascadingDiscounts returns a boolean if a field has been set.
func (o *UpdateApplication) HasEnableCascadingDiscounts() bool {
	if o != nil && o.EnableCascadingDiscounts != nil {
		return true
	}

	return false
}

// SetEnableCascadingDiscounts gets a reference to the given bool and assigns it to the EnableCascadingDiscounts field.
func (o *UpdateApplication) SetEnableCascadingDiscounts(v bool) {
	o.EnableCascadingDiscounts = &v
}

// GetEnableFlattenedCartItems returns the EnableFlattenedCartItems field value if set, zero value otherwise.
func (o *UpdateApplication) GetEnableFlattenedCartItems() bool {
	if o == nil || o.EnableFlattenedCartItems == nil {
		var ret bool
		return ret
	}
	return *o.EnableFlattenedCartItems
}

// GetEnableFlattenedCartItemsOk returns a tuple with the EnableFlattenedCartItems field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetEnableFlattenedCartItemsOk() (bool, bool) {
	if o == nil || o.EnableFlattenedCartItems == nil {
		var ret bool
		return ret, false
	}
	return *o.EnableFlattenedCartItems, true
}

// HasEnableFlattenedCartItems returns a boolean if a field has been set.
func (o *UpdateApplication) HasEnableFlattenedCartItems() bool {
	if o != nil && o.EnableFlattenedCartItems != nil {
		return true
	}

	return false
}

// SetEnableFlattenedCartItems gets a reference to the given bool and assigns it to the EnableFlattenedCartItems field.
func (o *UpdateApplication) SetEnableFlattenedCartItems(v bool) {
	o.EnableFlattenedCartItems = &v
}

// GetAttributesSettings returns the AttributesSettings field value if set, zero value otherwise.
func (o *UpdateApplication) GetAttributesSettings() AttributesSettings {
	if o == nil || o.AttributesSettings == nil {
		var ret AttributesSettings
		return ret
	}
	return *o.AttributesSettings
}

// GetAttributesSettingsOk returns a tuple with the AttributesSettings field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetAttributesSettingsOk() (AttributesSettings, bool) {
	if o == nil || o.AttributesSettings == nil {
		var ret AttributesSettings
		return ret, false
	}
	return *o.AttributesSettings, true
}

// HasAttributesSettings returns a boolean if a field has been set.
func (o *UpdateApplication) HasAttributesSettings() bool {
	if o != nil && o.AttributesSettings != nil {
		return true
	}

	return false
}

// SetAttributesSettings gets a reference to the given AttributesSettings and assigns it to the AttributesSettings field.
func (o *UpdateApplication) SetAttributesSettings(v AttributesSettings) {
	o.AttributesSettings = &v
}

// GetSandbox returns the Sandbox field value if set, zero value otherwise.
func (o *UpdateApplication) GetSandbox() bool {
	if o == nil || o.Sandbox == nil {
		var ret bool
		return ret
	}
	return *o.Sandbox
}

// GetSandboxOk returns a tuple with the Sandbox field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetSandboxOk() (bool, bool) {
	if o == nil || o.Sandbox == nil {
		var ret bool
		return ret, false
	}
	return *o.Sandbox, true
}

// HasSandbox returns a boolean if a field has been set.
func (o *UpdateApplication) HasSandbox() bool {
	if o != nil && o.Sandbox != nil {
		return true
	}

	return false
}

// SetSandbox gets a reference to the given bool and assigns it to the Sandbox field.
func (o *UpdateApplication) SetSandbox(v bool) {
	o.Sandbox = &v
}

// GetEnablePartialDiscounts returns the EnablePartialDiscounts field value if set, zero value otherwise.
func (o *UpdateApplication) GetEnablePartialDiscounts() bool {
	if o == nil || o.EnablePartialDiscounts == nil {
		var ret bool
		return ret
	}
	return *o.EnablePartialDiscounts
}

// GetEnablePartialDiscountsOk returns a tuple with the EnablePartialDiscounts field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetEnablePartialDiscountsOk() (bool, bool) {
	if o == nil || o.EnablePartialDiscounts == nil {
		var ret bool
		return ret, false
	}
	return *o.EnablePartialDiscounts, true
}

// HasEnablePartialDiscounts returns a boolean if a field has been set.
func (o *UpdateApplication) HasEnablePartialDiscounts() bool {
	if o != nil && o.EnablePartialDiscounts != nil {
		return true
	}

	return false
}

// SetEnablePartialDiscounts gets a reference to the given bool and assigns it to the EnablePartialDiscounts field.
func (o *UpdateApplication) SetEnablePartialDiscounts(v bool) {
	o.EnablePartialDiscounts = &v
}

// GetDefaultDiscountAdditionalCostPerItemScope returns the DefaultDiscountAdditionalCostPerItemScope field value if set, zero value otherwise.
func (o *UpdateApplication) GetDefaultDiscountAdditionalCostPerItemScope() string {
	if o == nil || o.DefaultDiscountAdditionalCostPerItemScope == nil {
		var ret string
		return ret
	}
	return *o.DefaultDiscountAdditionalCostPerItemScope
}

// GetDefaultDiscountAdditionalCostPerItemScopeOk returns a tuple with the DefaultDiscountAdditionalCostPerItemScope field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetDefaultDiscountAdditionalCostPerItemScopeOk() (string, bool) {
	if o == nil || o.DefaultDiscountAdditionalCostPerItemScope == nil {
		var ret string
		return ret, false
	}
	return *o.DefaultDiscountAdditionalCostPerItemScope, true
}

// HasDefaultDiscountAdditionalCostPerItemScope returns a boolean if a field has been set.
func (o *UpdateApplication) HasDefaultDiscountAdditionalCostPerItemScope() bool {
	if o != nil && o.DefaultDiscountAdditionalCostPerItemScope != nil {
		return true
	}

	return false
}

// SetDefaultDiscountAdditionalCostPerItemScope gets a reference to the given string and assigns it to the DefaultDiscountAdditionalCostPerItemScope field.
func (o *UpdateApplication) SetDefaultDiscountAdditionalCostPerItemScope(v string) {
	o.DefaultDiscountAdditionalCostPerItemScope = &v
}

type NullableUpdateApplication struct {
	Value        UpdateApplication
	ExplicitNull bool
}

func (v NullableUpdateApplication) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableUpdateApplication) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
