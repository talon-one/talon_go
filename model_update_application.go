/*
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// UpdateApplication struct for UpdateApplication
type UpdateApplication struct {
	// The name of this application.
	Name string `json:"name"`
	// A longer description of the application.
	Description *string `json:"description,omitempty"`
	// A string containing an IANA timezone descriptor.
	Timezone string `json:"timezone"`
	// A string describing a default currency for new customer sessions.
	Currency string `json:"currency"`
	// A string indicating how should campaigns in this application deal with case sensitivity on coupon codes.
	CaseSensitivity *string `json:"caseSensitivity,omitempty"`
	// Arbitrary properties associated with this campaign
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	// Default limits for campaigns created in this application
	Limits *[]LimitConfig `json:"limits,omitempty"`
	// Default priority for campaigns created in this application, can be one of (universal, stackable, exclusive)
	CampaignPriority   *string             `json:"campaignPriority,omitempty"`
	AttributesSettings *AttributesSettings `json:"attributesSettings,omitempty"`
}

// GetName returns the Name field value
func (o *UpdateApplication) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *UpdateApplication) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateApplication) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateApplication) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateApplication) SetDescription(v string) {
	o.Description = &v
}

// GetTimezone returns the Timezone field value
func (o *UpdateApplication) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// SetTimezone sets field value
func (o *UpdateApplication) SetTimezone(v string) {
	o.Timezone = v
}

// GetCurrency returns the Currency field value
func (o *UpdateApplication) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// SetCurrency sets field value
func (o *UpdateApplication) SetCurrency(v string) {
	o.Currency = v
}

// GetCaseSensitivity returns the CaseSensitivity field value if set, zero value otherwise.
func (o *UpdateApplication) GetCaseSensitivity() string {
	if o == nil || o.CaseSensitivity == nil {
		var ret string
		return ret
	}
	return *o.CaseSensitivity
}

// GetCaseSensitivityOk returns a tuple with the CaseSensitivity field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetCaseSensitivityOk() (string, bool) {
	if o == nil || o.CaseSensitivity == nil {
		var ret string
		return ret, false
	}
	return *o.CaseSensitivity, true
}

// HasCaseSensitivity returns a boolean if a field has been set.
func (o *UpdateApplication) HasCaseSensitivity() bool {
	if o != nil && o.CaseSensitivity != nil {
		return true
	}

	return false
}

// SetCaseSensitivity gets a reference to the given string and assigns it to the CaseSensitivity field.
func (o *UpdateApplication) SetCaseSensitivity(v string) {
	o.CaseSensitivity = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *UpdateApplication) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *UpdateApplication) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *UpdateApplication) SetAttributes(v map[string]interface{}) {
	o.Attributes = &v
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *UpdateApplication) GetLimits() []LimitConfig {
	if o == nil || o.Limits == nil {
		var ret []LimitConfig
		return ret
	}
	return *o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetLimitsOk() ([]LimitConfig, bool) {
	if o == nil || o.Limits == nil {
		var ret []LimitConfig
		return ret, false
	}
	return *o.Limits, true
}

// HasLimits returns a boolean if a field has been set.
func (o *UpdateApplication) HasLimits() bool {
	if o != nil && o.Limits != nil {
		return true
	}

	return false
}

// SetLimits gets a reference to the given []LimitConfig and assigns it to the Limits field.
func (o *UpdateApplication) SetLimits(v []LimitConfig) {
	o.Limits = &v
}

// GetCampaignPriority returns the CampaignPriority field value if set, zero value otherwise.
func (o *UpdateApplication) GetCampaignPriority() string {
	if o == nil || o.CampaignPriority == nil {
		var ret string
		return ret
	}
	return *o.CampaignPriority
}

// GetCampaignPriorityOk returns a tuple with the CampaignPriority field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetCampaignPriorityOk() (string, bool) {
	if o == nil || o.CampaignPriority == nil {
		var ret string
		return ret, false
	}
	return *o.CampaignPriority, true
}

// HasCampaignPriority returns a boolean if a field has been set.
func (o *UpdateApplication) HasCampaignPriority() bool {
	if o != nil && o.CampaignPriority != nil {
		return true
	}

	return false
}

// SetCampaignPriority gets a reference to the given string and assigns it to the CampaignPriority field.
func (o *UpdateApplication) SetCampaignPriority(v string) {
	o.CampaignPriority = &v
}

// GetAttributesSettings returns the AttributesSettings field value if set, zero value otherwise.
func (o *UpdateApplication) GetAttributesSettings() AttributesSettings {
	if o == nil || o.AttributesSettings == nil {
		var ret AttributesSettings
		return ret
	}
	return *o.AttributesSettings
}

// GetAttributesSettingsOk returns a tuple with the AttributesSettings field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplication) GetAttributesSettingsOk() (AttributesSettings, bool) {
	if o == nil || o.AttributesSettings == nil {
		var ret AttributesSettings
		return ret, false
	}
	return *o.AttributesSettings, true
}

// HasAttributesSettings returns a boolean if a field has been set.
func (o *UpdateApplication) HasAttributesSettings() bool {
	if o != nil && o.AttributesSettings != nil {
		return true
	}

	return false
}

// SetAttributesSettings gets a reference to the given AttributesSettings and assigns it to the AttributesSettings field.
func (o *UpdateApplication) SetAttributesSettings(v AttributesSettings) {
	o.AttributesSettings = &v
}

type NullableUpdateApplication struct {
	Value        UpdateApplication
	ExplicitNull bool
}

func (v NullableUpdateApplication) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableUpdateApplication) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
