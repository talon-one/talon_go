/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// IntegrationStateV2 Contains all entities that might interest Talon.One integrations.
type IntegrationStateV2 struct {
	CustomerSession    *CustomerSessionV2   `json:"customerSession,omitempty"`
	CustomerProfile    *CustomerProfile     `json:"customerProfile,omitempty"`
	Event              *Event               `json:"event,omitempty"`
	Loyalty            *Loyalty             `json:"loyalty,omitempty"`
	Referral           *InventoryReferral   `json:"referral,omitempty"`
	Coupons            *[]IntegrationCoupon `json:"coupons,omitempty"`
	TriggeredCampaigns *[]Campaign          `json:"triggeredCampaigns,omitempty"`
	// The effects generated by the rules in your running campaigns. See [API effects](https://docs.talon.one/docs/dev/integration-api/api-effects).
	Effects            []Effect             `json:"effects"`
	RuleFailureReasons *[]RuleFailureReason `json:"ruleFailureReasons,omitempty"`
	CreatedCoupons     []Coupon             `json:"createdCoupons"`
	CreatedReferrals   []Referral           `json:"createdReferrals"`
	AwardedGiveaways   *[]Giveaway          `json:"awardedGiveaways,omitempty"`
	Return             *Return              `json:"return,omitempty"`
	PreviousReturns    *[]Return            `json:"previousReturns,omitempty"`
}

// GetCustomerSession returns the CustomerSession field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetCustomerSession() CustomerSessionV2 {
	if o == nil || o.CustomerSession == nil {
		var ret CustomerSessionV2
		return ret
	}
	return *o.CustomerSession
}

// GetCustomerSessionOk returns a tuple with the CustomerSession field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetCustomerSessionOk() (CustomerSessionV2, bool) {
	if o == nil || o.CustomerSession == nil {
		var ret CustomerSessionV2
		return ret, false
	}
	return *o.CustomerSession, true
}

// HasCustomerSession returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasCustomerSession() bool {
	if o != nil && o.CustomerSession != nil {
		return true
	}

	return false
}

// SetCustomerSession gets a reference to the given CustomerSessionV2 and assigns it to the CustomerSession field.
func (o *IntegrationStateV2) SetCustomerSession(v CustomerSessionV2) {
	o.CustomerSession = &v
}

// GetCustomerProfile returns the CustomerProfile field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetCustomerProfile() CustomerProfile {
	if o == nil || o.CustomerProfile == nil {
		var ret CustomerProfile
		return ret
	}
	return *o.CustomerProfile
}

// GetCustomerProfileOk returns a tuple with the CustomerProfile field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetCustomerProfileOk() (CustomerProfile, bool) {
	if o == nil || o.CustomerProfile == nil {
		var ret CustomerProfile
		return ret, false
	}
	return *o.CustomerProfile, true
}

// HasCustomerProfile returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasCustomerProfile() bool {
	if o != nil && o.CustomerProfile != nil {
		return true
	}

	return false
}

// SetCustomerProfile gets a reference to the given CustomerProfile and assigns it to the CustomerProfile field.
func (o *IntegrationStateV2) SetCustomerProfile(v CustomerProfile) {
	o.CustomerProfile = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetEvent() Event {
	if o == nil || o.Event == nil {
		var ret Event
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetEventOk() (Event, bool) {
	if o == nil || o.Event == nil {
		var ret Event
		return ret, false
	}
	return *o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given Event and assigns it to the Event field.
func (o *IntegrationStateV2) SetEvent(v Event) {
	o.Event = &v
}

// GetLoyalty returns the Loyalty field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetLoyalty() Loyalty {
	if o == nil || o.Loyalty == nil {
		var ret Loyalty
		return ret
	}
	return *o.Loyalty
}

// GetLoyaltyOk returns a tuple with the Loyalty field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetLoyaltyOk() (Loyalty, bool) {
	if o == nil || o.Loyalty == nil {
		var ret Loyalty
		return ret, false
	}
	return *o.Loyalty, true
}

// HasLoyalty returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasLoyalty() bool {
	if o != nil && o.Loyalty != nil {
		return true
	}

	return false
}

// SetLoyalty gets a reference to the given Loyalty and assigns it to the Loyalty field.
func (o *IntegrationStateV2) SetLoyalty(v Loyalty) {
	o.Loyalty = &v
}

// GetReferral returns the Referral field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetReferral() InventoryReferral {
	if o == nil || o.Referral == nil {
		var ret InventoryReferral
		return ret
	}
	return *o.Referral
}

// GetReferralOk returns a tuple with the Referral field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetReferralOk() (InventoryReferral, bool) {
	if o == nil || o.Referral == nil {
		var ret InventoryReferral
		return ret, false
	}
	return *o.Referral, true
}

// HasReferral returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasReferral() bool {
	if o != nil && o.Referral != nil {
		return true
	}

	return false
}

// SetReferral gets a reference to the given InventoryReferral and assigns it to the Referral field.
func (o *IntegrationStateV2) SetReferral(v InventoryReferral) {
	o.Referral = &v
}

// GetCoupons returns the Coupons field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetCoupons() []IntegrationCoupon {
	if o == nil || o.Coupons == nil {
		var ret []IntegrationCoupon
		return ret
	}
	return *o.Coupons
}

// GetCouponsOk returns a tuple with the Coupons field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetCouponsOk() ([]IntegrationCoupon, bool) {
	if o == nil || o.Coupons == nil {
		var ret []IntegrationCoupon
		return ret, false
	}
	return *o.Coupons, true
}

// HasCoupons returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasCoupons() bool {
	if o != nil && o.Coupons != nil {
		return true
	}

	return false
}

// SetCoupons gets a reference to the given []IntegrationCoupon and assigns it to the Coupons field.
func (o *IntegrationStateV2) SetCoupons(v []IntegrationCoupon) {
	o.Coupons = &v
}

// GetTriggeredCampaigns returns the TriggeredCampaigns field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetTriggeredCampaigns() []Campaign {
	if o == nil || o.TriggeredCampaigns == nil {
		var ret []Campaign
		return ret
	}
	return *o.TriggeredCampaigns
}

// GetTriggeredCampaignsOk returns a tuple with the TriggeredCampaigns field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetTriggeredCampaignsOk() ([]Campaign, bool) {
	if o == nil || o.TriggeredCampaigns == nil {
		var ret []Campaign
		return ret, false
	}
	return *o.TriggeredCampaigns, true
}

// HasTriggeredCampaigns returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasTriggeredCampaigns() bool {
	if o != nil && o.TriggeredCampaigns != nil {
		return true
	}

	return false
}

// SetTriggeredCampaigns gets a reference to the given []Campaign and assigns it to the TriggeredCampaigns field.
func (o *IntegrationStateV2) SetTriggeredCampaigns(v []Campaign) {
	o.TriggeredCampaigns = &v
}

// GetEffects returns the Effects field value
func (o *IntegrationStateV2) GetEffects() []Effect {
	if o == nil {
		var ret []Effect
		return ret
	}

	return o.Effects
}

// SetEffects sets field value
func (o *IntegrationStateV2) SetEffects(v []Effect) {
	o.Effects = v
}

// GetRuleFailureReasons returns the RuleFailureReasons field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetRuleFailureReasons() []RuleFailureReason {
	if o == nil || o.RuleFailureReasons == nil {
		var ret []RuleFailureReason
		return ret
	}
	return *o.RuleFailureReasons
}

// GetRuleFailureReasonsOk returns a tuple with the RuleFailureReasons field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetRuleFailureReasonsOk() ([]RuleFailureReason, bool) {
	if o == nil || o.RuleFailureReasons == nil {
		var ret []RuleFailureReason
		return ret, false
	}
	return *o.RuleFailureReasons, true
}

// HasRuleFailureReasons returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasRuleFailureReasons() bool {
	if o != nil && o.RuleFailureReasons != nil {
		return true
	}

	return false
}

// SetRuleFailureReasons gets a reference to the given []RuleFailureReason and assigns it to the RuleFailureReasons field.
func (o *IntegrationStateV2) SetRuleFailureReasons(v []RuleFailureReason) {
	o.RuleFailureReasons = &v
}

// GetCreatedCoupons returns the CreatedCoupons field value
func (o *IntegrationStateV2) GetCreatedCoupons() []Coupon {
	if o == nil {
		var ret []Coupon
		return ret
	}

	return o.CreatedCoupons
}

// SetCreatedCoupons sets field value
func (o *IntegrationStateV2) SetCreatedCoupons(v []Coupon) {
	o.CreatedCoupons = v
}

// GetCreatedReferrals returns the CreatedReferrals field value
func (o *IntegrationStateV2) GetCreatedReferrals() []Referral {
	if o == nil {
		var ret []Referral
		return ret
	}

	return o.CreatedReferrals
}

// SetCreatedReferrals sets field value
func (o *IntegrationStateV2) SetCreatedReferrals(v []Referral) {
	o.CreatedReferrals = v
}

// GetAwardedGiveaways returns the AwardedGiveaways field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetAwardedGiveaways() []Giveaway {
	if o == nil || o.AwardedGiveaways == nil {
		var ret []Giveaway
		return ret
	}
	return *o.AwardedGiveaways
}

// GetAwardedGiveawaysOk returns a tuple with the AwardedGiveaways field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetAwardedGiveawaysOk() ([]Giveaway, bool) {
	if o == nil || o.AwardedGiveaways == nil {
		var ret []Giveaway
		return ret, false
	}
	return *o.AwardedGiveaways, true
}

// HasAwardedGiveaways returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasAwardedGiveaways() bool {
	if o != nil && o.AwardedGiveaways != nil {
		return true
	}

	return false
}

// SetAwardedGiveaways gets a reference to the given []Giveaway and assigns it to the AwardedGiveaways field.
func (o *IntegrationStateV2) SetAwardedGiveaways(v []Giveaway) {
	o.AwardedGiveaways = &v
}

// GetReturn returns the Return field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetReturn() Return {
	if o == nil || o.Return == nil {
		var ret Return
		return ret
	}
	return *o.Return
}

// GetReturnOk returns a tuple with the Return field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetReturnOk() (Return, bool) {
	if o == nil || o.Return == nil {
		var ret Return
		return ret, false
	}
	return *o.Return, true
}

// HasReturn returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasReturn() bool {
	if o != nil && o.Return != nil {
		return true
	}

	return false
}

// SetReturn gets a reference to the given Return and assigns it to the Return field.
func (o *IntegrationStateV2) SetReturn(v Return) {
	o.Return = &v
}

// GetPreviousReturns returns the PreviousReturns field value if set, zero value otherwise.
func (o *IntegrationStateV2) GetPreviousReturns() []Return {
	if o == nil || o.PreviousReturns == nil {
		var ret []Return
		return ret
	}
	return *o.PreviousReturns
}

// GetPreviousReturnsOk returns a tuple with the PreviousReturns field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationStateV2) GetPreviousReturnsOk() ([]Return, bool) {
	if o == nil || o.PreviousReturns == nil {
		var ret []Return
		return ret, false
	}
	return *o.PreviousReturns, true
}

// HasPreviousReturns returns a boolean if a field has been set.
func (o *IntegrationStateV2) HasPreviousReturns() bool {
	if o != nil && o.PreviousReturns != nil {
		return true
	}

	return false
}

// SetPreviousReturns gets a reference to the given []Return and assigns it to the PreviousReturns field.
func (o *IntegrationStateV2) SetPreviousReturns(v []Return) {
	o.PreviousReturns = &v
}

type NullableIntegrationStateV2 struct {
	Value        IntegrationStateV2
	ExplicitNull bool
}

func (v NullableIntegrationStateV2) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableIntegrationStateV2) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
