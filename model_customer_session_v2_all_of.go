/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// CustomerSessionV2AllOf struct for CustomerSessionV2AllOf
type CustomerSessionV2AllOf struct {
	// Indicates whether this is the first session for the customer's profile. Will always be true for anonymous sessions.
	FirstSession bool `json:"firstSession"`
	// The total value of cart items and additional costs in the session, before any discounts are applied.
	Total float32 `json:"total"`
	// The total value of cart items, before any discounts are applied.
	CartItemTotal float32 `json:"cartItemTotal"`
	// The total value of additional costs, before any discounts are applied.
	AdditionalCostTotal float32 `json:"additionalCostTotal"`
	// Timestamp of the most recent event received on this session.
	Updated time.Time `json:"updated"`
}

// GetFirstSession returns the FirstSession field value
func (o *CustomerSessionV2AllOf) GetFirstSession() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FirstSession
}

// SetFirstSession sets field value
func (o *CustomerSessionV2AllOf) SetFirstSession(v bool) {
	o.FirstSession = v
}

// GetTotal returns the Total field value
func (o *CustomerSessionV2AllOf) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// SetTotal sets field value
func (o *CustomerSessionV2AllOf) SetTotal(v float32) {
	o.Total = v
}

// GetCartItemTotal returns the CartItemTotal field value
func (o *CustomerSessionV2AllOf) GetCartItemTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CartItemTotal
}

// SetCartItemTotal sets field value
func (o *CustomerSessionV2AllOf) SetCartItemTotal(v float32) {
	o.CartItemTotal = v
}

// GetAdditionalCostTotal returns the AdditionalCostTotal field value
func (o *CustomerSessionV2AllOf) GetAdditionalCostTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AdditionalCostTotal
}

// SetAdditionalCostTotal sets field value
func (o *CustomerSessionV2AllOf) SetAdditionalCostTotal(v float32) {
	o.AdditionalCostTotal = v
}

// GetUpdated returns the Updated field value
func (o *CustomerSessionV2AllOf) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// SetUpdated sets field value
func (o *CustomerSessionV2AllOf) SetUpdated(v time.Time) {
	o.Updated = v
}

type NullableCustomerSessionV2AllOf struct {
	Value CustomerSessionV2AllOf
	ExplicitNull bool
}

func (v NullableCustomerSessionV2AllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCustomerSessionV2AllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
