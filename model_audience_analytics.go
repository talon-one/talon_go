/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// AudienceAnalytics The audiences and their members count.
type AudienceAnalytics struct {
	// The ID of the audience.
	AudienceId *int32 `json:"audienceId,omitempty"`
	// The count of members under a single audience.
	MembersCount *int32 `json:"membersCount,omitempty"`
}

// GetAudienceId returns the AudienceId field value if set, zero value otherwise.
func (o *AudienceAnalytics) GetAudienceId() int32 {
	if o == nil || o.AudienceId == nil {
		var ret int32
		return ret
	}
	return *o.AudienceId
}

// GetAudienceIdOk returns a tuple with the AudienceId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AudienceAnalytics) GetAudienceIdOk() (int32, bool) {
	if o == nil || o.AudienceId == nil {
		var ret int32
		return ret, false
	}
	return *o.AudienceId, true
}

// HasAudienceId returns a boolean if a field has been set.
func (o *AudienceAnalytics) HasAudienceId() bool {
	if o != nil && o.AudienceId != nil {
		return true
	}

	return false
}

// SetAudienceId gets a reference to the given int32 and assigns it to the AudienceId field.
func (o *AudienceAnalytics) SetAudienceId(v int32) {
	o.AudienceId = &v
}

// GetMembersCount returns the MembersCount field value if set, zero value otherwise.
func (o *AudienceAnalytics) GetMembersCount() int32 {
	if o == nil || o.MembersCount == nil {
		var ret int32
		return ret
	}
	return *o.MembersCount
}

// GetMembersCountOk returns a tuple with the MembersCount field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AudienceAnalytics) GetMembersCountOk() (int32, bool) {
	if o == nil || o.MembersCount == nil {
		var ret int32
		return ret, false
	}
	return *o.MembersCount, true
}

// HasMembersCount returns a boolean if a field has been set.
func (o *AudienceAnalytics) HasMembersCount() bool {
	if o != nil && o.MembersCount != nil {
		return true
	}

	return false
}

// SetMembersCount gets a reference to the given int32 and assigns it to the MembersCount field.
func (o *AudienceAnalytics) SetMembersCount(v int32) {
	o.MembersCount = &v
}

type NullableAudienceAnalytics struct {
	Value        AudienceAnalytics
	ExplicitNull bool
}

func (v NullableAudienceAnalytics) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableAudienceAnalytics) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
