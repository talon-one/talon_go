/*
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// LoyaltyProgram A Loyalty Program
type LoyaltyProgram struct {
	// The ID of loyalty program.
	Id int32 `json:"id"`
	// The ID of the Talon.One account that owns this program.
	AccountID int32 `json:"accountID"`
	// The internal name for the Loyalty Program.
	Name string `json:"name"`
	// The display title for the Loyalty Program.
	Title string `json:"title"`
	// Description of our Loyalty Program.
	Description string `json:"description"`
	// A list containing the IDs of all applications that are subscribed to this Loyalty Program.
	SubscribedApplications []int32 `json:"subscribedApplications"`
	// Indicates the default duration after which new loyalty points should expire. The format is a number, followed by one letter indicating the unit; like '1h' or '40m'.
	DefaultValidity string `json:"defaultValidity"`
	// Indicates the default duration for the pending time, after which points will be valid. The format is a number followed by a duration unit, like '1h' or '40m'.
	DefaultPending string `json:"defaultPending"`
	// Indicates if this program supports subledgers inside the program
	AllowSubledger bool `json:"allowSubledger"`
	// The tiers in this loyalty program
	Tiers *[]LoyaltyTier `json:"tiers,omitempty"`
}

// GetId returns the Id field value
func (o *LoyaltyProgram) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *LoyaltyProgram) SetId(v int32) {
	o.Id = v
}

// GetAccountID returns the AccountID field value
func (o *LoyaltyProgram) GetAccountID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountID
}

// SetAccountID sets field value
func (o *LoyaltyProgram) SetAccountID(v int32) {
	o.AccountID = v
}

// GetName returns the Name field value
func (o *LoyaltyProgram) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *LoyaltyProgram) SetName(v string) {
	o.Name = v
}

// GetTitle returns the Title field value
func (o *LoyaltyProgram) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// SetTitle sets field value
func (o *LoyaltyProgram) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *LoyaltyProgram) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// SetDescription sets field value
func (o *LoyaltyProgram) SetDescription(v string) {
	o.Description = v
}

// GetSubscribedApplications returns the SubscribedApplications field value
func (o *LoyaltyProgram) GetSubscribedApplications() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.SubscribedApplications
}

// SetSubscribedApplications sets field value
func (o *LoyaltyProgram) SetSubscribedApplications(v []int32) {
	o.SubscribedApplications = v
}

// GetDefaultValidity returns the DefaultValidity field value
func (o *LoyaltyProgram) GetDefaultValidity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultValidity
}

// SetDefaultValidity sets field value
func (o *LoyaltyProgram) SetDefaultValidity(v string) {
	o.DefaultValidity = v
}

// GetDefaultPending returns the DefaultPending field value
func (o *LoyaltyProgram) GetDefaultPending() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultPending
}

// SetDefaultPending sets field value
func (o *LoyaltyProgram) SetDefaultPending(v string) {
	o.DefaultPending = v
}

// GetAllowSubledger returns the AllowSubledger field value
func (o *LoyaltyProgram) GetAllowSubledger() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowSubledger
}

// SetAllowSubledger sets field value
func (o *LoyaltyProgram) SetAllowSubledger(v bool) {
	o.AllowSubledger = v
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *LoyaltyProgram) GetTiers() []LoyaltyTier {
	if o == nil || o.Tiers == nil {
		var ret []LoyaltyTier
		return ret
	}
	return *o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LoyaltyProgram) GetTiersOk() ([]LoyaltyTier, bool) {
	if o == nil || o.Tiers == nil {
		var ret []LoyaltyTier
		return ret, false
	}
	return *o.Tiers, true
}

// HasTiers returns a boolean if a field has been set.
func (o *LoyaltyProgram) HasTiers() bool {
	if o != nil && o.Tiers != nil {
		return true
	}

	return false
}

// SetTiers gets a reference to the given []LoyaltyTier and assigns it to the Tiers field.
func (o *LoyaltyProgram) SetTiers(v []LoyaltyTier) {
	o.Tiers = &v
}

type NullableLoyaltyProgram struct {
	Value        LoyaltyProgram
	ExplicitNull bool
}

func (v NullableLoyaltyProgram) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLoyaltyProgram) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
