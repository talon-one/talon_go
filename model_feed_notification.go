/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// FeedNotification A feed notification for CAMA users.
type FeedNotification struct {
	// Title of the feed notification.
	Title string `json:"title"`
	// Timestamp of the moment this feed notification was created.
	Created time.Time `json:"created"`
	// Timestamp of the moment this feed notification was last updated.
	Updated time.Time `json:"updated"`
	// URL to the feed notification in the help center.
	ArticleUrl string `json:"articleUrl"`
	// The type of the feed notification.
	Type string `json:"type"`
	// Body of the feed notification.
	Body string `json:"body"`
}

// GetTitle returns the Title field value
func (o *FeedNotification) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// SetTitle sets field value
func (o *FeedNotification) SetTitle(v string) {
	o.Title = v
}

// GetCreated returns the Created field value
func (o *FeedNotification) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *FeedNotification) SetCreated(v time.Time) {
	o.Created = v
}

// GetUpdated returns the Updated field value
func (o *FeedNotification) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// SetUpdated sets field value
func (o *FeedNotification) SetUpdated(v time.Time) {
	o.Updated = v
}

// GetArticleUrl returns the ArticleUrl field value
func (o *FeedNotification) GetArticleUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ArticleUrl
}

// SetArticleUrl sets field value
func (o *FeedNotification) SetArticleUrl(v string) {
	o.ArticleUrl = v
}

// GetType returns the Type field value
func (o *FeedNotification) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// SetType sets field value
func (o *FeedNotification) SetType(v string) {
	o.Type = v
}

// GetBody returns the Body field value
func (o *FeedNotification) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// SetBody sets field value
func (o *FeedNotification) SetBody(v string) {
	o.Body = v
}

type NullableFeedNotification struct {
	Value        FeedNotification
	ExplicitNull bool
}

func (v NullableFeedNotification) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableFeedNotification) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
