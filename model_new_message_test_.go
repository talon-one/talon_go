/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// NewMessageTest struct for NewMessageTest
type NewMessageTest struct {
	// The message type.
	Type string `json:"type"`
	// Array of query parameters.
	QueryParams *map[string]string `json:"queryParams,omitempty"`
	// List of API HTTP headers for the given message.
	Headers *map[string]string `json:"headers,omitempty"`
	// API method for this message.
	Verb string `json:"verb"`
	// API URL for the given message.
	Url string `json:"url"`
	// API payload of this message.
	Payload *string `json:"payload,omitempty"`
}

// GetType returns the Type field value
func (o *NewMessageTest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// SetType sets field value
func (o *NewMessageTest) SetType(v string) {
	o.Type = v
}

// GetQueryParams returns the QueryParams field value if set, zero value otherwise.
func (o *NewMessageTest) GetQueryParams() map[string]string {
	if o == nil || o.QueryParams == nil {
		var ret map[string]string
		return ret
	}
	return *o.QueryParams
}

// GetQueryParamsOk returns a tuple with the QueryParams field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewMessageTest) GetQueryParamsOk() (map[string]string, bool) {
	if o == nil || o.QueryParams == nil {
		var ret map[string]string
		return ret, false
	}
	return *o.QueryParams, true
}

// HasQueryParams returns a boolean if a field has been set.
func (o *NewMessageTest) HasQueryParams() bool {
	if o != nil && o.QueryParams != nil {
		return true
	}

	return false
}

// SetQueryParams gets a reference to the given map[string]string and assigns it to the QueryParams field.
func (o *NewMessageTest) SetQueryParams(v map[string]string) {
	o.QueryParams = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *NewMessageTest) GetHeaders() map[string]string {
	if o == nil || o.Headers == nil {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewMessageTest) GetHeadersOk() (map[string]string, bool) {
	if o == nil || o.Headers == nil {
		var ret map[string]string
		return ret, false
	}
	return *o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *NewMessageTest) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *NewMessageTest) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetVerb returns the Verb field value
func (o *NewMessageTest) GetVerb() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Verb
}

// SetVerb sets field value
func (o *NewMessageTest) SetVerb(v string) {
	o.Verb = v
}

// GetUrl returns the Url field value
func (o *NewMessageTest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// SetUrl sets field value
func (o *NewMessageTest) SetUrl(v string) {
	o.Url = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *NewMessageTest) GetPayload() string {
	if o == nil || o.Payload == nil {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewMessageTest) GetPayloadOk() (string, bool) {
	if o == nil || o.Payload == nil {
		var ret string
		return ret, false
	}
	return *o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *NewMessageTest) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *NewMessageTest) SetPayload(v string) {
	o.Payload = &v
}

type NullableNewMessageTest struct {
	Value        NewMessageTest
	ExplicitNull bool
}

func (v NullableNewMessageTest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableNewMessageTest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
