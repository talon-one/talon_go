/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// ScimUsersListResponse List of users that have been provisioned using the SCIM protocol with an identity provider, for example, Microsoft Entra ID.
type ScimUsersListResponse struct {
	Resources []ScimUser `json:"Resources"`
	Schemas *[]string `json:"schemas,omitempty"`
	// Number of total results in the response.
	TotalResults *int32 `json:"totalResults,omitempty"`
}

// GetResources returns the Resources field value
func (o *ScimUsersListResponse) GetResources() []ScimUser {
	if o == nil {
		var ret []ScimUser
		return ret
	}

	return o.Resources
}

// SetResources sets field value
func (o *ScimUsersListResponse) SetResources(v []ScimUser) {
	o.Resources = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ScimUsersListResponse) GetSchemas() []string {
	if o == nil || o.Schemas == nil {
		var ret []string
		return ret
	}
	return *o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ScimUsersListResponse) GetSchemasOk() ([]string, bool) {
	if o == nil || o.Schemas == nil {
		var ret []string
		return ret, false
	}
	return *o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ScimUsersListResponse) HasSchemas() bool {
	if o != nil && o.Schemas != nil {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []string and assigns it to the Schemas field.
func (o *ScimUsersListResponse) SetSchemas(v []string) {
	o.Schemas = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *ScimUsersListResponse) GetTotalResults() int32 {
	if o == nil || o.TotalResults == nil {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ScimUsersListResponse) GetTotalResultsOk() (int32, bool) {
	if o == nil || o.TotalResults == nil {
		var ret int32
		return ret, false
	}
	return *o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *ScimUsersListResponse) HasTotalResults() bool {
	if o != nil && o.TotalResults != nil {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *ScimUsersListResponse) SetTotalResults(v int32) {
	o.TotalResults = &v
}

type NullableScimUsersListResponse struct {
	Value ScimUsersListResponse
	ExplicitNull bool
}

func (v NullableScimUsersListResponse) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableScimUsersListResponse) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
