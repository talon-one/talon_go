/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// TimePoint The absolute duration after which the achievement ends and resets for a particular customer profile.  **Note**: The duration follows the time zone of the Application this achievement belongs to. 
type TimePoint struct {
	// The achievement ends and resets on this day of the month.  **Note**: Only applicable if the period is set to `Y` or `M`. 
	DayOfMonth *int32 `json:"dayOfMonth,omitempty"`
	// The achievement ends and resets on this day of the week. `1` represents `Monday` and `7` represents `Sunday`.  **Note**: Only applicable if the period is set to `W`. 
	DayOfWeek *int32 `json:"dayOfWeek,omitempty"`
	// The achievement ends and resets at this hour.
	Hour int32 `json:"hour"`
	// The achievement ends and resets at this minute.
	Minute int32 `json:"minute"`
	// The achievement ends and resets in this month.  **Note**: Only applicable if the period is set to `Y`. 
	Month *int32 `json:"month,omitempty"`
	// The achievement ends and resets at this second.
	Second int32 `json:"second"`
}

// GetDayOfMonth returns the DayOfMonth field value if set, zero value otherwise.
func (o *TimePoint) GetDayOfMonth() int32 {
	if o == nil || o.DayOfMonth == nil {
		var ret int32
		return ret
	}
	return *o.DayOfMonth
}

// GetDayOfMonthOk returns a tuple with the DayOfMonth field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TimePoint) GetDayOfMonthOk() (int32, bool) {
	if o == nil || o.DayOfMonth == nil {
		var ret int32
		return ret, false
	}
	return *o.DayOfMonth, true
}

// HasDayOfMonth returns a boolean if a field has been set.
func (o *TimePoint) HasDayOfMonth() bool {
	if o != nil && o.DayOfMonth != nil {
		return true
	}

	return false
}

// SetDayOfMonth gets a reference to the given int32 and assigns it to the DayOfMonth field.
func (o *TimePoint) SetDayOfMonth(v int32) {
	o.DayOfMonth = &v
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *TimePoint) GetDayOfWeek() int32 {
	if o == nil || o.DayOfWeek == nil {
		var ret int32
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TimePoint) GetDayOfWeekOk() (int32, bool) {
	if o == nil || o.DayOfWeek == nil {
		var ret int32
		return ret, false
	}
	return *o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *TimePoint) HasDayOfWeek() bool {
	if o != nil && o.DayOfWeek != nil {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given int32 and assigns it to the DayOfWeek field.
func (o *TimePoint) SetDayOfWeek(v int32) {
	o.DayOfWeek = &v
}

// GetHour returns the Hour field value
func (o *TimePoint) GetHour() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Hour
}

// SetHour sets field value
func (o *TimePoint) SetHour(v int32) {
	o.Hour = v
}

// GetMinute returns the Minute field value
func (o *TimePoint) GetMinute() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Minute
}

// SetMinute sets field value
func (o *TimePoint) SetMinute(v int32) {
	o.Minute = v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *TimePoint) GetMonth() int32 {
	if o == nil || o.Month == nil {
		var ret int32
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *TimePoint) GetMonthOk() (int32, bool) {
	if o == nil || o.Month == nil {
		var ret int32
		return ret, false
	}
	return *o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *TimePoint) HasMonth() bool {
	if o != nil && o.Month != nil {
		return true
	}

	return false
}

// SetMonth gets a reference to the given int32 and assigns it to the Month field.
func (o *TimePoint) SetMonth(v int32) {
	o.Month = &v
}

// GetSecond returns the Second field value
func (o *TimePoint) GetSecond() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Second
}

// SetSecond sets field value
func (o *TimePoint) SetSecond(v int32) {
	o.Second = v
}

type NullableTimePoint struct {
	Value TimePoint
	ExplicitNull bool
}

func (v NullableTimePoint) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableTimePoint) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
