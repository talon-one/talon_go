/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// UpdateLoyaltyProgramTier Update a tier in a specified loyalty program.
type UpdateLoyaltyProgramTier struct {
	// The internal ID of the tier.
	Id int32 `json:"id"`
	// The name of the tier.
	Name *string `json:"name,omitempty"`
	// The minimum amount of points required to enter the tier.
	MinPoints *float32 `json:"minPoints,omitempty"`
}

// GetId returns the Id field value
func (o *UpdateLoyaltyProgramTier) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *UpdateLoyaltyProgramTier) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateLoyaltyProgramTier) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoyaltyProgramTier) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateLoyaltyProgramTier) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateLoyaltyProgramTier) SetName(v string) {
	o.Name = &v
}

// GetMinPoints returns the MinPoints field value if set, zero value otherwise.
func (o *UpdateLoyaltyProgramTier) GetMinPoints() float32 {
	if o == nil || o.MinPoints == nil {
		var ret float32
		return ret
	}
	return *o.MinPoints
}

// GetMinPointsOk returns a tuple with the MinPoints field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLoyaltyProgramTier) GetMinPointsOk() (float32, bool) {
	if o == nil || o.MinPoints == nil {
		var ret float32
		return ret, false
	}
	return *o.MinPoints, true
}

// HasMinPoints returns a boolean if a field has been set.
func (o *UpdateLoyaltyProgramTier) HasMinPoints() bool {
	if o != nil && o.MinPoints != nil {
		return true
	}

	return false
}

// SetMinPoints gets a reference to the given float32 and assigns it to the MinPoints field.
func (o *UpdateLoyaltyProgramTier) SetMinPoints(v float32) {
	o.MinPoints = &v
}

type NullableUpdateLoyaltyProgramTier struct {
	Value        UpdateLoyaltyProgramTier
	ExplicitNull bool
}

func (v NullableUpdateLoyaltyProgramTier) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableUpdateLoyaltyProgramTier) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
