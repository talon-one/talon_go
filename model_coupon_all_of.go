/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CouponAllOf struct for CouponAllOf
type CouponAllOf struct {
	// The number of times the coupon has been successfully redeemed.
	UsageCounter int32 `json:"usageCounter"`
	// The amount of discounts given on rules redeeming this coupon. Only usable if a coupon discount budget was set for this coupon.
	DiscountCounter *float32 `json:"discountCounter,omitempty"`
	// The remaining discount this coupon can give.
	DiscountRemainder *float32 `json:"discountRemainder,omitempty"`
	// The number of times this coupon has been reserved.
	ReservationCounter *float32 `json:"reservationCounter,omitempty"`
	// Custom attributes associated with this coupon.
	Attributes *map[string]map[string]interface{} `json:"attributes,omitempty"`
	// The integration ID of the referring customer (if any) for whom this coupon was created as an effect.
	ReferralId *int32 `json:"referralId,omitempty"`
	// The Integration ID of the customer that is allowed to redeem this coupon.
	RecipientIntegrationId *string `json:"recipientIntegrationId,omitempty"`
	// The ID of the Import which created this coupon.
	ImportId *int32 `json:"importId,omitempty"`
	// Defines the reservation type: - `true`: The coupon can be reserved for multiple customers. - `false`: The coupon can be reserved only for one customer. It is a personal code. 
	Reservation *bool `json:"reservation,omitempty"`
	// The id of the batch the coupon belongs to.
	BatchId *string `json:"batchId,omitempty"`
	// An indication of whether the code can be redeemed only if it has been reserved first.
	IsReservationMandatory *bool `json:"isReservationMandatory,omitempty"`
	// An indication of whether the coupon is implicitly reserved for all customers.
	ImplicitlyReserved *bool `json:"implicitlyReserved,omitempty"`
}

// GetUsageCounter returns the UsageCounter field value
func (o *CouponAllOf) GetUsageCounter() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UsageCounter
}

// SetUsageCounter sets field value
func (o *CouponAllOf) SetUsageCounter(v int32) {
	o.UsageCounter = v
}

// GetDiscountCounter returns the DiscountCounter field value if set, zero value otherwise.
func (o *CouponAllOf) GetDiscountCounter() float32 {
	if o == nil || o.DiscountCounter == nil {
		var ret float32
		return ret
	}
	return *o.DiscountCounter
}

// GetDiscountCounterOk returns a tuple with the DiscountCounter field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetDiscountCounterOk() (float32, bool) {
	if o == nil || o.DiscountCounter == nil {
		var ret float32
		return ret, false
	}
	return *o.DiscountCounter, true
}

// HasDiscountCounter returns a boolean if a field has been set.
func (o *CouponAllOf) HasDiscountCounter() bool {
	if o != nil && o.DiscountCounter != nil {
		return true
	}

	return false
}

// SetDiscountCounter gets a reference to the given float32 and assigns it to the DiscountCounter field.
func (o *CouponAllOf) SetDiscountCounter(v float32) {
	o.DiscountCounter = &v
}

// GetDiscountRemainder returns the DiscountRemainder field value if set, zero value otherwise.
func (o *CouponAllOf) GetDiscountRemainder() float32 {
	if o == nil || o.DiscountRemainder == nil {
		var ret float32
		return ret
	}
	return *o.DiscountRemainder
}

// GetDiscountRemainderOk returns a tuple with the DiscountRemainder field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetDiscountRemainderOk() (float32, bool) {
	if o == nil || o.DiscountRemainder == nil {
		var ret float32
		return ret, false
	}
	return *o.DiscountRemainder, true
}

// HasDiscountRemainder returns a boolean if a field has been set.
func (o *CouponAllOf) HasDiscountRemainder() bool {
	if o != nil && o.DiscountRemainder != nil {
		return true
	}

	return false
}

// SetDiscountRemainder gets a reference to the given float32 and assigns it to the DiscountRemainder field.
func (o *CouponAllOf) SetDiscountRemainder(v float32) {
	o.DiscountRemainder = &v
}

// GetReservationCounter returns the ReservationCounter field value if set, zero value otherwise.
func (o *CouponAllOf) GetReservationCounter() float32 {
	if o == nil || o.ReservationCounter == nil {
		var ret float32
		return ret
	}
	return *o.ReservationCounter
}

// GetReservationCounterOk returns a tuple with the ReservationCounter field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetReservationCounterOk() (float32, bool) {
	if o == nil || o.ReservationCounter == nil {
		var ret float32
		return ret, false
	}
	return *o.ReservationCounter, true
}

// HasReservationCounter returns a boolean if a field has been set.
func (o *CouponAllOf) HasReservationCounter() bool {
	if o != nil && o.ReservationCounter != nil {
		return true
	}

	return false
}

// SetReservationCounter gets a reference to the given float32 and assigns it to the ReservationCounter field.
func (o *CouponAllOf) SetReservationCounter(v float32) {
	o.ReservationCounter = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *CouponAllOf) GetAttributes() map[string]map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetAttributesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *CouponAllOf) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the Attributes field.
func (o *CouponAllOf) SetAttributes(v map[string]map[string]interface{}) {
	o.Attributes = &v
}

// GetReferralId returns the ReferralId field value if set, zero value otherwise.
func (o *CouponAllOf) GetReferralId() int32 {
	if o == nil || o.ReferralId == nil {
		var ret int32
		return ret
	}
	return *o.ReferralId
}

// GetReferralIdOk returns a tuple with the ReferralId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetReferralIdOk() (int32, bool) {
	if o == nil || o.ReferralId == nil {
		var ret int32
		return ret, false
	}
	return *o.ReferralId, true
}

// HasReferralId returns a boolean if a field has been set.
func (o *CouponAllOf) HasReferralId() bool {
	if o != nil && o.ReferralId != nil {
		return true
	}

	return false
}

// SetReferralId gets a reference to the given int32 and assigns it to the ReferralId field.
func (o *CouponAllOf) SetReferralId(v int32) {
	o.ReferralId = &v
}

// GetRecipientIntegrationId returns the RecipientIntegrationId field value if set, zero value otherwise.
func (o *CouponAllOf) GetRecipientIntegrationId() string {
	if o == nil || o.RecipientIntegrationId == nil {
		var ret string
		return ret
	}
	return *o.RecipientIntegrationId
}

// GetRecipientIntegrationIdOk returns a tuple with the RecipientIntegrationId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetRecipientIntegrationIdOk() (string, bool) {
	if o == nil || o.RecipientIntegrationId == nil {
		var ret string
		return ret, false
	}
	return *o.RecipientIntegrationId, true
}

// HasRecipientIntegrationId returns a boolean if a field has been set.
func (o *CouponAllOf) HasRecipientIntegrationId() bool {
	if o != nil && o.RecipientIntegrationId != nil {
		return true
	}

	return false
}

// SetRecipientIntegrationId gets a reference to the given string and assigns it to the RecipientIntegrationId field.
func (o *CouponAllOf) SetRecipientIntegrationId(v string) {
	o.RecipientIntegrationId = &v
}

// GetImportId returns the ImportId field value if set, zero value otherwise.
func (o *CouponAllOf) GetImportId() int32 {
	if o == nil || o.ImportId == nil {
		var ret int32
		return ret
	}
	return *o.ImportId
}

// GetImportIdOk returns a tuple with the ImportId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetImportIdOk() (int32, bool) {
	if o == nil || o.ImportId == nil {
		var ret int32
		return ret, false
	}
	return *o.ImportId, true
}

// HasImportId returns a boolean if a field has been set.
func (o *CouponAllOf) HasImportId() bool {
	if o != nil && o.ImportId != nil {
		return true
	}

	return false
}

// SetImportId gets a reference to the given int32 and assigns it to the ImportId field.
func (o *CouponAllOf) SetImportId(v int32) {
	o.ImportId = &v
}

// GetReservation returns the Reservation field value if set, zero value otherwise.
func (o *CouponAllOf) GetReservation() bool {
	if o == nil || o.Reservation == nil {
		var ret bool
		return ret
	}
	return *o.Reservation
}

// GetReservationOk returns a tuple with the Reservation field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetReservationOk() (bool, bool) {
	if o == nil || o.Reservation == nil {
		var ret bool
		return ret, false
	}
	return *o.Reservation, true
}

// HasReservation returns a boolean if a field has been set.
func (o *CouponAllOf) HasReservation() bool {
	if o != nil && o.Reservation != nil {
		return true
	}

	return false
}

// SetReservation gets a reference to the given bool and assigns it to the Reservation field.
func (o *CouponAllOf) SetReservation(v bool) {
	o.Reservation = &v
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *CouponAllOf) GetBatchId() string {
	if o == nil || o.BatchId == nil {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetBatchIdOk() (string, bool) {
	if o == nil || o.BatchId == nil {
		var ret string
		return ret, false
	}
	return *o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *CouponAllOf) HasBatchId() bool {
	if o != nil && o.BatchId != nil {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *CouponAllOf) SetBatchId(v string) {
	o.BatchId = &v
}

// GetIsReservationMandatory returns the IsReservationMandatory field value if set, zero value otherwise.
func (o *CouponAllOf) GetIsReservationMandatory() bool {
	if o == nil || o.IsReservationMandatory == nil {
		var ret bool
		return ret
	}
	return *o.IsReservationMandatory
}

// GetIsReservationMandatoryOk returns a tuple with the IsReservationMandatory field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetIsReservationMandatoryOk() (bool, bool) {
	if o == nil || o.IsReservationMandatory == nil {
		var ret bool
		return ret, false
	}
	return *o.IsReservationMandatory, true
}

// HasIsReservationMandatory returns a boolean if a field has been set.
func (o *CouponAllOf) HasIsReservationMandatory() bool {
	if o != nil && o.IsReservationMandatory != nil {
		return true
	}

	return false
}

// SetIsReservationMandatory gets a reference to the given bool and assigns it to the IsReservationMandatory field.
func (o *CouponAllOf) SetIsReservationMandatory(v bool) {
	o.IsReservationMandatory = &v
}

// GetImplicitlyReserved returns the ImplicitlyReserved field value if set, zero value otherwise.
func (o *CouponAllOf) GetImplicitlyReserved() bool {
	if o == nil || o.ImplicitlyReserved == nil {
		var ret bool
		return ret
	}
	return *o.ImplicitlyReserved
}

// GetImplicitlyReservedOk returns a tuple with the ImplicitlyReserved field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponAllOf) GetImplicitlyReservedOk() (bool, bool) {
	if o == nil || o.ImplicitlyReserved == nil {
		var ret bool
		return ret, false
	}
	return *o.ImplicitlyReserved, true
}

// HasImplicitlyReserved returns a boolean if a field has been set.
func (o *CouponAllOf) HasImplicitlyReserved() bool {
	if o != nil && o.ImplicitlyReserved != nil {
		return true
	}

	return false
}

// SetImplicitlyReserved gets a reference to the given bool and assigns it to the ImplicitlyReserved field.
func (o *CouponAllOf) SetImplicitlyReserved(v bool) {
	o.ImplicitlyReserved = &v
}

type NullableCouponAllOf struct {
	Value CouponAllOf
	ExplicitNull bool
}

func (v NullableCouponAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCouponAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
