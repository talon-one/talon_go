/*
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// Meta struct for Meta
type Meta struct {
	// Maps each evaluated campaign ID to a key-value list of that campaigns attributes. Campaigns without attributes will be omitted.
	Campaigns *map[string]interface{} `json:"campaigns,omitempty"`
	// Maps the coupon value to a key-value list of that coupons attributes.
	Coupons                 *map[string]interface{}  `json:"coupons,omitempty"`
	CouponRejectionReason   *CouponRejectionReason   `json:"couponRejectionReason,omitempty"`
	ReferralRejectionReason *ReferralRejectionReason `json:"referralRejectionReason,omitempty"`
	Warnings                *map[string]interface{}  `json:"warnings,omitempty"`
}

// GetCampaigns returns the Campaigns field value if set, zero value otherwise.
func (o *Meta) GetCampaigns() map[string]interface{} {
	if o == nil || o.Campaigns == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Campaigns
}

// GetCampaignsOk returns a tuple with the Campaigns field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Meta) GetCampaignsOk() (map[string]interface{}, bool) {
	if o == nil || o.Campaigns == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Campaigns, true
}

// HasCampaigns returns a boolean if a field has been set.
func (o *Meta) HasCampaigns() bool {
	if o != nil && o.Campaigns != nil {
		return true
	}

	return false
}

// SetCampaigns gets a reference to the given map[string]interface{} and assigns it to the Campaigns field.
func (o *Meta) SetCampaigns(v map[string]interface{}) {
	o.Campaigns = &v
}

// GetCoupons returns the Coupons field value if set, zero value otherwise.
func (o *Meta) GetCoupons() map[string]interface{} {
	if o == nil || o.Coupons == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Coupons
}

// GetCouponsOk returns a tuple with the Coupons field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Meta) GetCouponsOk() (map[string]interface{}, bool) {
	if o == nil || o.Coupons == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Coupons, true
}

// HasCoupons returns a boolean if a field has been set.
func (o *Meta) HasCoupons() bool {
	if o != nil && o.Coupons != nil {
		return true
	}

	return false
}

// SetCoupons gets a reference to the given map[string]interface{} and assigns it to the Coupons field.
func (o *Meta) SetCoupons(v map[string]interface{}) {
	o.Coupons = &v
}

// GetCouponRejectionReason returns the CouponRejectionReason field value if set, zero value otherwise.
func (o *Meta) GetCouponRejectionReason() CouponRejectionReason {
	if o == nil || o.CouponRejectionReason == nil {
		var ret CouponRejectionReason
		return ret
	}
	return *o.CouponRejectionReason
}

// GetCouponRejectionReasonOk returns a tuple with the CouponRejectionReason field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Meta) GetCouponRejectionReasonOk() (CouponRejectionReason, bool) {
	if o == nil || o.CouponRejectionReason == nil {
		var ret CouponRejectionReason
		return ret, false
	}
	return *o.CouponRejectionReason, true
}

// HasCouponRejectionReason returns a boolean if a field has been set.
func (o *Meta) HasCouponRejectionReason() bool {
	if o != nil && o.CouponRejectionReason != nil {
		return true
	}

	return false
}

// SetCouponRejectionReason gets a reference to the given CouponRejectionReason and assigns it to the CouponRejectionReason field.
func (o *Meta) SetCouponRejectionReason(v CouponRejectionReason) {
	o.CouponRejectionReason = &v
}

// GetReferralRejectionReason returns the ReferralRejectionReason field value if set, zero value otherwise.
func (o *Meta) GetReferralRejectionReason() ReferralRejectionReason {
	if o == nil || o.ReferralRejectionReason == nil {
		var ret ReferralRejectionReason
		return ret
	}
	return *o.ReferralRejectionReason
}

// GetReferralRejectionReasonOk returns a tuple with the ReferralRejectionReason field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Meta) GetReferralRejectionReasonOk() (ReferralRejectionReason, bool) {
	if o == nil || o.ReferralRejectionReason == nil {
		var ret ReferralRejectionReason
		return ret, false
	}
	return *o.ReferralRejectionReason, true
}

// HasReferralRejectionReason returns a boolean if a field has been set.
func (o *Meta) HasReferralRejectionReason() bool {
	if o != nil && o.ReferralRejectionReason != nil {
		return true
	}

	return false
}

// SetReferralRejectionReason gets a reference to the given ReferralRejectionReason and assigns it to the ReferralRejectionReason field.
func (o *Meta) SetReferralRejectionReason(v ReferralRejectionReason) {
	o.ReferralRejectionReason = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *Meta) GetWarnings() map[string]interface{} {
	if o == nil || o.Warnings == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Meta) GetWarningsOk() (map[string]interface{}, bool) {
	if o == nil || o.Warnings == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *Meta) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given map[string]interface{} and assigns it to the Warnings field.
func (o *Meta) SetWarnings(v map[string]interface{}) {
	o.Warnings = &v
}

type NullableMeta struct {
	Value        Meta
	ExplicitNull bool
}

func (v NullableMeta) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableMeta) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
