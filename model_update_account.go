/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// UpdateAccount struct for UpdateAccount
type UpdateAccount struct {
	// Arbitrary properties associated with this campaign.
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	// Name of your company.
	CompanyName string `json:"companyName"`
	// The billing email address associated with your company account.
	BillingEmail string `json:"billingEmail"`
	// State of the account (active, deactivated).
	State *string `json:"state,omitempty"`
	// The point in time at which your current plan expires.
	PlanExpires *time.Time `json:"planExpires,omitempty"`
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *UpdateAccount) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccount) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *UpdateAccount) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *UpdateAccount) SetAttributes(v map[string]interface{}) {
	o.Attributes = &v
}

// GetCompanyName returns the CompanyName field value
func (o *UpdateAccount) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// SetCompanyName sets field value
func (o *UpdateAccount) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetBillingEmail returns the BillingEmail field value
func (o *UpdateAccount) GetBillingEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingEmail
}

// SetBillingEmail sets field value
func (o *UpdateAccount) SetBillingEmail(v string) {
	o.BillingEmail = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *UpdateAccount) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccount) GetStateOk() (string, bool) {
	if o == nil || o.State == nil {
		var ret string
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *UpdateAccount) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *UpdateAccount) SetState(v string) {
	o.State = &v
}

// GetPlanExpires returns the PlanExpires field value if set, zero value otherwise.
func (o *UpdateAccount) GetPlanExpires() time.Time {
	if o == nil || o.PlanExpires == nil {
		var ret time.Time
		return ret
	}
	return *o.PlanExpires
}

// GetPlanExpiresOk returns a tuple with the PlanExpires field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccount) GetPlanExpiresOk() (time.Time, bool) {
	if o == nil || o.PlanExpires == nil {
		var ret time.Time
		return ret, false
	}
	return *o.PlanExpires, true
}

// HasPlanExpires returns a boolean if a field has been set.
func (o *UpdateAccount) HasPlanExpires() bool {
	if o != nil && o.PlanExpires != nil {
		return true
	}

	return false
}

// SetPlanExpires gets a reference to the given time.Time and assigns it to the PlanExpires field.
func (o *UpdateAccount) SetPlanExpires(v time.Time) {
	o.PlanExpires = &v
}

type NullableUpdateAccount struct {
	Value        UpdateAccount
	ExplicitNull bool
}

func (v NullableUpdateAccount) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableUpdateAccount) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
