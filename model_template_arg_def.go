/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// TemplateArgDef
type TemplateArgDef struct {
	// The type of value this argument expects.
	Type string `json:"type"`
	// A campaigner-friendly description of the argument, this will also be shown in the rule editor.
	Description string `json:"description"`
	// A campaigner friendly name for the argument, this will be shown in the rule editor.
	Title string `json:"title"`
	// Arbitrary metadata that may be used to render an input for this argument.
	Ui map[string]interface{} `json:"ui"`
}

// GetType returns the Type field value
func (o *TemplateArgDef) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// SetType sets field value
func (o *TemplateArgDef) SetType(v string) {
	o.Type = v
}

// GetDescription returns the Description field value
func (o *TemplateArgDef) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// SetDescription sets field value
func (o *TemplateArgDef) SetDescription(v string) {
	o.Description = v
}

// GetTitle returns the Title field value
func (o *TemplateArgDef) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// SetTitle sets field value
func (o *TemplateArgDef) SetTitle(v string) {
	o.Title = v
}

// GetUi returns the Ui field value
func (o *TemplateArgDef) GetUi() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Ui
}

// SetUi sets field value
func (o *TemplateArgDef) SetUi(v map[string]interface{}) {
	o.Ui = v
}

type NullableTemplateArgDef struct {
	Value        TemplateArgDef
	ExplicitNull bool
}

func (v NullableTemplateArgDef) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableTemplateArgDef) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
