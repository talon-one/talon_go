/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// WebhookLogEntry Log of webhook API calls.
type WebhookLogEntry struct {
	// UUID reference of the webhook request.
	Id string `json:"id"`
	// UUID reference of the integration request linked to this webhook request.
	IntegrationRequestUuid string `json:"integrationRequestUuid"`
	// ID of the webhook that triggered the request.
	WebhookId int32 `json:"webhookId"`
	// ID of the application that triggered the webhook.
	ApplicationId *int32 `json:"applicationId,omitempty"`
	// Target url of request
	Url string `json:"url"`
	// Request message
	Request string `json:"request"`
	// Response message
	Response *string `json:"response,omitempty"`
	// HTTP status code of response.
	Status *int32 `json:"status,omitempty"`
	// Timestamp of request
	RequestTime time.Time `json:"requestTime"`
	// Timestamp of response
	ResponseTime *time.Time `json:"responseTime,omitempty"`
}

// GetId returns the Id field value
func (o *WebhookLogEntry) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *WebhookLogEntry) SetId(v string) {
	o.Id = v
}

// GetIntegrationRequestUuid returns the IntegrationRequestUuid field value
func (o *WebhookLogEntry) GetIntegrationRequestUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationRequestUuid
}

// SetIntegrationRequestUuid sets field value
func (o *WebhookLogEntry) SetIntegrationRequestUuid(v string) {
	o.IntegrationRequestUuid = v
}

// GetWebhookId returns the WebhookId field value
func (o *WebhookLogEntry) GetWebhookId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WebhookId
}

// SetWebhookId sets field value
func (o *WebhookLogEntry) SetWebhookId(v int32) {
	o.WebhookId = v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *WebhookLogEntry) GetApplicationId() int32 {
	if o == nil || o.ApplicationId == nil {
		var ret int32
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLogEntry) GetApplicationIdOk() (int32, bool) {
	if o == nil || o.ApplicationId == nil {
		var ret int32
		return ret, false
	}
	return *o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *WebhookLogEntry) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given int32 and assigns it to the ApplicationId field.
func (o *WebhookLogEntry) SetApplicationId(v int32) {
	o.ApplicationId = &v
}

// GetUrl returns the Url field value
func (o *WebhookLogEntry) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// SetUrl sets field value
func (o *WebhookLogEntry) SetUrl(v string) {
	o.Url = v
}

// GetRequest returns the Request field value
func (o *WebhookLogEntry) GetRequest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Request
}

// SetRequest sets field value
func (o *WebhookLogEntry) SetRequest(v string) {
	o.Request = v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *WebhookLogEntry) GetResponse() string {
	if o == nil || o.Response == nil {
		var ret string
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLogEntry) GetResponseOk() (string, bool) {
	if o == nil || o.Response == nil {
		var ret string
		return ret, false
	}
	return *o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *WebhookLogEntry) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given string and assigns it to the Response field.
func (o *WebhookLogEntry) SetResponse(v string) {
	o.Response = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WebhookLogEntry) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLogEntry) GetStatusOk() (int32, bool) {
	if o == nil || o.Status == nil {
		var ret int32
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WebhookLogEntry) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *WebhookLogEntry) SetStatus(v int32) {
	o.Status = &v
}

// GetRequestTime returns the RequestTime field value
func (o *WebhookLogEntry) GetRequestTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.RequestTime
}

// SetRequestTime sets field value
func (o *WebhookLogEntry) SetRequestTime(v time.Time) {
	o.RequestTime = v
}

// GetResponseTime returns the ResponseTime field value if set, zero value otherwise.
func (o *WebhookLogEntry) GetResponseTime() time.Time {
	if o == nil || o.ResponseTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ResponseTime
}

// GetResponseTimeOk returns a tuple with the ResponseTime field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLogEntry) GetResponseTimeOk() (time.Time, bool) {
	if o == nil || o.ResponseTime == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ResponseTime, true
}

// HasResponseTime returns a boolean if a field has been set.
func (o *WebhookLogEntry) HasResponseTime() bool {
	if o != nil && o.ResponseTime != nil {
		return true
	}

	return false
}

// SetResponseTime gets a reference to the given time.Time and assigns it to the ResponseTime field.
func (o *WebhookLogEntry) SetResponseTime(v time.Time) {
	o.ResponseTime = &v
}

type NullableWebhookLogEntry struct {
	Value        WebhookLogEntry
	ExplicitNull bool
}

func (v NullableWebhookLogEntry) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableWebhookLogEntry) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
