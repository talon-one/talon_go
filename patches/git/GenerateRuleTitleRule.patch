diff --git a/docs/GenerateRuleTitleRule.md b/docs/GenerateRuleTitleRule.md
--- a/docs/GenerateRuleTitleRule.md
+++ b/docs/GenerateRuleTitleRule.md
@@ -4,8 +4,8 @@
 
 Name | Type | Description | Notes
 ------------ | ------------- | ------------- | -------------
-**Effects** | Pointer to **[]map[string]interface{}** | An array of effectful Talang expressions in arrays that will be evaluated when a rule matches. | [optional] 
-**Condition** | Pointer to **[]map[string]interface{}** | A Talang expression that will be evaluated in the context of the given event. | [optional] 
+**Effects** | Pointer to **[][]interface{}** | An array of effectful Talang expressions in arrays that will be evaluated when a rule matches. | [optional] 
+**Condition** | Pointer to **[]interface{}** | A Talang expression that will be evaluated in the context of the given event. | [optional] 
 
 ## Methods
 
@@ -28,20 +28,20 @@ but it doesn't guarantee that properties required by API are set
 
 ### GetEffects
 
-`func (o *GenerateRuleTitleRule) GetEffects() []map[string]interface{}`
+`func (o *GenerateRuleTitleRule) GetEffects() [][]interface{}`
 
 GetEffects returns the Effects field if non-nil, zero value otherwise.
 
 ### GetEffectsOk
 
-`func (o *GenerateRuleTitleRule) GetEffectsOk() (*[]map[string]interface{}, bool)`
+`func (o *GenerateRuleTitleRule) GetEffectsOk() (*[][]interface{}, bool)`
 
 GetEffectsOk returns a tuple with the Effects field if it's non-nil, zero value otherwise
 and a boolean to check if the value has been set.
 
 ### SetEffects
 
-`func (o *GenerateRuleTitleRule) SetEffects(v []map[string]interface{})`
+`func (o *GenerateRuleTitleRule) SetEffects(v [][]interface{})`
 
 SetEffects sets Effects field to given value.
 
@@ -53,20 +53,20 @@ HasEffects returns a boolean if a field has been set.
 
 ### GetCondition
 
-`func (o *GenerateRuleTitleRule) GetCondition() []map[string]interface{}`
+`func (o *GenerateRuleTitleRule) GetCondition() []interface{}`
 
 GetCondition returns the Condition field if non-nil, zero value otherwise.
 
 ### GetConditionOk
 
-`func (o *GenerateRuleTitleRule) GetConditionOk() (*[]map[string]interface{}, bool)`
+`func (o *GenerateRuleTitleRule) GetConditionOk() (*[]interface{}, bool)`
 
 GetConditionOk returns a tuple with the Condition field if it's non-nil, zero value otherwise
 and a boolean to check if the value has been set.
 
 ### SetCondition
 
-`func (o *GenerateRuleTitleRule) SetCondition(v []map[string]interface{})`
+`func (o *GenerateRuleTitleRule) SetCondition(v []interface{})`
 
 SetCondition sets Condition field to given value.
 
