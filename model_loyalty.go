/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// Loyalty Customer specific information about loyalty points.
type Loyalty struct {
	// Displays information about the balances of the loyalty cards.
	Cards *[]LoyaltyCard `json:"cards,omitempty"`
	// Displays information about point balances in profile-based programs.
	Programs map[string]LoyaltyProgramLedgers `json:"programs"`
}

// GetCards returns the Cards field value if set, zero value otherwise.
func (o *Loyalty) GetCards() []LoyaltyCard {
	if o == nil || o.Cards == nil {
		var ret []LoyaltyCard
		return ret
	}
	return *o.Cards
}

// GetCardsOk returns a tuple with the Cards field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Loyalty) GetCardsOk() ([]LoyaltyCard, bool) {
	if o == nil || o.Cards == nil {
		var ret []LoyaltyCard
		return ret, false
	}
	return *o.Cards, true
}

// HasCards returns a boolean if a field has been set.
func (o *Loyalty) HasCards() bool {
	if o != nil && o.Cards != nil {
		return true
	}

	return false
}

// SetCards gets a reference to the given []LoyaltyCard and assigns it to the Cards field.
func (o *Loyalty) SetCards(v []LoyaltyCard) {
	o.Cards = &v
}

// GetPrograms returns the Programs field value
func (o *Loyalty) GetPrograms() map[string]LoyaltyProgramLedgers {
	if o == nil {
		var ret map[string]LoyaltyProgramLedgers
		return ret
	}

	return o.Programs
}

// SetPrograms sets field value
func (o *Loyalty) SetPrograms(v map[string]LoyaltyProgramLedgers) {
	o.Programs = v
}

type NullableLoyalty struct {
	Value        Loyalty
	ExplicitNull bool
}

func (v NullableLoyalty) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLoyalty) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
