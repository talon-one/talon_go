/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// AccountLimits struct for AccountLimits
type AccountLimits struct {
	// Total number of allowed live applications in the account.
	LiveApplications int32 `json:"liveApplications"`
	// Total number of allowed sandbox applications in the account.
	SandboxApplications int32 `json:"sandboxApplications"`
	// Total number of allowed active campaigns in live applications in the account.
	ActiveCampaigns int32 `json:"activeCampaigns"`
	// Total number of allowed coupons in the account.
	Coupons int32 `json:"coupons"`
	// Total number of allowed referral codes in the account.
	ReferralCodes int32 `json:"referralCodes"`
	// Total number of allowed active rulesets in the account.
	ActiveRules int32 `json:"activeRules"`
	// Total number of allowed live loyalty programs in the account.
	LiveLoyaltyPrograms int32 `json:"liveLoyaltyPrograms"`
	// Total number of allowed sandbox loyalty programs in the account.
	SandboxLoyaltyPrograms int32 `json:"sandboxLoyaltyPrograms"`
	// Total number of allowed webhooks in the account.
	Webhooks int32 `json:"webhooks"`
	// Total number of allowed users in the account.
	Users int32 `json:"users"`
	// Allowed volume of API requests to the account.
	ApiVolume int32 `json:"apiVolume"`
	// Array of promotion types that are employed in the account.
	PromotionTypes []string `json:"promotionTypes"`
}

// GetLiveApplications returns the LiveApplications field value
func (o *AccountLimits) GetLiveApplications() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LiveApplications
}

// SetLiveApplications sets field value
func (o *AccountLimits) SetLiveApplications(v int32) {
	o.LiveApplications = v
}

// GetSandboxApplications returns the SandboxApplications field value
func (o *AccountLimits) GetSandboxApplications() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SandboxApplications
}

// SetSandboxApplications sets field value
func (o *AccountLimits) SetSandboxApplications(v int32) {
	o.SandboxApplications = v
}

// GetActiveCampaigns returns the ActiveCampaigns field value
func (o *AccountLimits) GetActiveCampaigns() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ActiveCampaigns
}

// SetActiveCampaigns sets field value
func (o *AccountLimits) SetActiveCampaigns(v int32) {
	o.ActiveCampaigns = v
}

// GetCoupons returns the Coupons field value
func (o *AccountLimits) GetCoupons() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Coupons
}

// SetCoupons sets field value
func (o *AccountLimits) SetCoupons(v int32) {
	o.Coupons = v
}

// GetReferralCodes returns the ReferralCodes field value
func (o *AccountLimits) GetReferralCodes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReferralCodes
}

// SetReferralCodes sets field value
func (o *AccountLimits) SetReferralCodes(v int32) {
	o.ReferralCodes = v
}

// GetActiveRules returns the ActiveRules field value
func (o *AccountLimits) GetActiveRules() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ActiveRules
}

// SetActiveRules sets field value
func (o *AccountLimits) SetActiveRules(v int32) {
	o.ActiveRules = v
}

// GetLiveLoyaltyPrograms returns the LiveLoyaltyPrograms field value
func (o *AccountLimits) GetLiveLoyaltyPrograms() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LiveLoyaltyPrograms
}

// SetLiveLoyaltyPrograms sets field value
func (o *AccountLimits) SetLiveLoyaltyPrograms(v int32) {
	o.LiveLoyaltyPrograms = v
}

// GetSandboxLoyaltyPrograms returns the SandboxLoyaltyPrograms field value
func (o *AccountLimits) GetSandboxLoyaltyPrograms() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SandboxLoyaltyPrograms
}

// SetSandboxLoyaltyPrograms sets field value
func (o *AccountLimits) SetSandboxLoyaltyPrograms(v int32) {
	o.SandboxLoyaltyPrograms = v
}

// GetWebhooks returns the Webhooks field value
func (o *AccountLimits) GetWebhooks() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Webhooks
}

// SetWebhooks sets field value
func (o *AccountLimits) SetWebhooks(v int32) {
	o.Webhooks = v
}

// GetUsers returns the Users field value
func (o *AccountLimits) GetUsers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Users
}

// SetUsers sets field value
func (o *AccountLimits) SetUsers(v int32) {
	o.Users = v
}

// GetApiVolume returns the ApiVolume field value
func (o *AccountLimits) GetApiVolume() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApiVolume
}

// SetApiVolume sets field value
func (o *AccountLimits) SetApiVolume(v int32) {
	o.ApiVolume = v
}

// GetPromotionTypes returns the PromotionTypes field value
func (o *AccountLimits) GetPromotionTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PromotionTypes
}

// SetPromotionTypes sets field value
func (o *AccountLimits) SetPromotionTypes(v []string) {
	o.PromotionTypes = v
}

type NullableAccountLimits struct {
	Value        AccountLimits
	ExplicitNull bool
}

func (v NullableAccountLimits) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableAccountLimits) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
