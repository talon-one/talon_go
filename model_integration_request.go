/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// IntegrationRequest The body of a V2 integration API request (customer session update). Next to the customer session details, this contains an optional listing of extra properties that should be returned in the response.
type IntegrationRequest struct {
	CustomerSession NewCustomerSessionV2 `json:"customerSession"`
	// Extends the response with the chosen data entities. Use this property to get as much data as you need in one _Update customer session_ request instead of sending extra requests to other endpoints.
	ResponseContent *[]string `json:"responseContent,omitempty"`
}

// GetCustomerSession returns the CustomerSession field value
func (o *IntegrationRequest) GetCustomerSession() NewCustomerSessionV2 {
	if o == nil {
		var ret NewCustomerSessionV2
		return ret
	}

	return o.CustomerSession
}

// SetCustomerSession sets field value
func (o *IntegrationRequest) SetCustomerSession(v NewCustomerSessionV2) {
	o.CustomerSession = v
}

// GetResponseContent returns the ResponseContent field value if set, zero value otherwise.
func (o *IntegrationRequest) GetResponseContent() []string {
	if o == nil || o.ResponseContent == nil {
		var ret []string
		return ret
	}
	return *o.ResponseContent
}

// GetResponseContentOk returns a tuple with the ResponseContent field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRequest) GetResponseContentOk() ([]string, bool) {
	if o == nil || o.ResponseContent == nil {
		var ret []string
		return ret, false
	}
	return *o.ResponseContent, true
}

// HasResponseContent returns a boolean if a field has been set.
func (o *IntegrationRequest) HasResponseContent() bool {
	if o != nil && o.ResponseContent != nil {
		return true
	}

	return false
}

// SetResponseContent gets a reference to the given []string and assigns it to the ResponseContent field.
func (o *IntegrationRequest) SetResponseContent(v []string) {
	o.ResponseContent = &v
}

type NullableIntegrationRequest struct {
	Value        IntegrationRequest
	ExplicitNull bool
}

func (v NullableIntegrationRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableIntegrationRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
