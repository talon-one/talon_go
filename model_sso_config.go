/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// SsoConfig struct for SsoConfig
type SsoConfig struct {
	// An indication of whether single sign-on is enforced for the account. When enforced, users cannot use their email and password to sign in to Talon.One. It is not possible to change this to `false` after it is set to `true`. 
	Enforced bool `json:"enforced"`
	// Assertion Consumer Service (ACS) URL for setting up a new SAML connection with an identity provider like Okta or Microsoft Entra ID. 
	NewAcsUrl *string `json:"newAcsUrl,omitempty"`
}

// GetEnforced returns the Enforced field value
func (o *SsoConfig) GetEnforced() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enforced
}

// SetEnforced sets field value
func (o *SsoConfig) SetEnforced(v bool) {
	o.Enforced = v
}

// GetNewAcsUrl returns the NewAcsUrl field value if set, zero value otherwise.
func (o *SsoConfig) GetNewAcsUrl() string {
	if o == nil || o.NewAcsUrl == nil {
		var ret string
		return ret
	}
	return *o.NewAcsUrl
}

// GetNewAcsUrlOk returns a tuple with the NewAcsUrl field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *SsoConfig) GetNewAcsUrlOk() (string, bool) {
	if o == nil || o.NewAcsUrl == nil {
		var ret string
		return ret, false
	}
	return *o.NewAcsUrl, true
}

// HasNewAcsUrl returns a boolean if a field has been set.
func (o *SsoConfig) HasNewAcsUrl() bool {
	if o != nil && o.NewAcsUrl != nil {
		return true
	}

	return false
}

// SetNewAcsUrl gets a reference to the given string and assigns it to the NewAcsUrl field.
func (o *SsoConfig) SetNewAcsUrl(v string) {
	o.NewAcsUrl = &v
}

type NullableSsoConfig struct {
	Value SsoConfig
	ExplicitNull bool
}

func (v NullableSsoConfig) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableSsoConfig) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
