/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// RoleAllOf struct for RoleAllOf
type RoleAllOf struct {
	// The ID of the [Campaign Group](https://docs.talon.one/docs/product/account/account-settings/managing-campaign-groups) this role was created for. 
	CampaignGroupID *int32 `json:"campaignGroupID,omitempty"`
	// Name of the role.
	Name string `json:"name"`
	// Description of the role.
	Description *string `json:"description,omitempty"`
	// A list of user identifiers assigned to this role.
	Members *[]int32 `json:"members,omitempty"`
	// The `Access Control List` json defining the role of the user. This represents the access control on the user level.
	Acl map[string]interface{} `json:"acl"`
}

// GetCampaignGroupID returns the CampaignGroupID field value if set, zero value otherwise.
func (o *RoleAllOf) GetCampaignGroupID() int32 {
	if o == nil || o.CampaignGroupID == nil {
		var ret int32
		return ret
	}
	return *o.CampaignGroupID
}

// GetCampaignGroupIDOk returns a tuple with the CampaignGroupID field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RoleAllOf) GetCampaignGroupIDOk() (int32, bool) {
	if o == nil || o.CampaignGroupID == nil {
		var ret int32
		return ret, false
	}
	return *o.CampaignGroupID, true
}

// HasCampaignGroupID returns a boolean if a field has been set.
func (o *RoleAllOf) HasCampaignGroupID() bool {
	if o != nil && o.CampaignGroupID != nil {
		return true
	}

	return false
}

// SetCampaignGroupID gets a reference to the given int32 and assigns it to the CampaignGroupID field.
func (o *RoleAllOf) SetCampaignGroupID(v int32) {
	o.CampaignGroupID = &v
}

// GetName returns the Name field value
func (o *RoleAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *RoleAllOf) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoleAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RoleAllOf) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoleAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoleAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *RoleAllOf) GetMembers() []int32 {
	if o == nil || o.Members == nil {
		var ret []int32
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RoleAllOf) GetMembersOk() ([]int32, bool) {
	if o == nil || o.Members == nil {
		var ret []int32
		return ret, false
	}
	return *o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *RoleAllOf) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []int32 and assigns it to the Members field.
func (o *RoleAllOf) SetMembers(v []int32) {
	o.Members = &v
}

// GetAcl returns the Acl field value
func (o *RoleAllOf) GetAcl() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Acl
}

// SetAcl sets field value
func (o *RoleAllOf) SetAcl(v map[string]interface{}) {
	o.Acl = v
}

type NullableRoleAllOf struct {
	Value RoleAllOf
	ExplicitNull bool
}

func (v NullableRoleAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableRoleAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
