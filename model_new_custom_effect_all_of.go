/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// NewCustomEffectAllOf struct for NewCustomEffectAllOf
type NewCustomEffectAllOf struct {
	// Indicates if this effect is per item or not.
	IsPerItem *bool `json:"isPerItem,omitempty"`
	// The name of this effect.
	Name string `json:"name"`
	// The title of this effect.
	Title string `json:"title"`
	// The JSON payload of this effect.
	Payload string `json:"payload"`
	// The description of this effect.
	Description *string `json:"description,omitempty"`
	// Determines if this effect is active.
	Enabled bool `json:"enabled"`
	// Array of template argument definitions.
	Params *[]TemplateArgDef `json:"params,omitempty"`
}

// GetIsPerItem returns the IsPerItem field value if set, zero value otherwise.
func (o *NewCustomEffectAllOf) GetIsPerItem() bool {
	if o == nil || o.IsPerItem == nil {
		var ret bool
		return ret
	}
	return *o.IsPerItem
}

// GetIsPerItemOk returns a tuple with the IsPerItem field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomEffectAllOf) GetIsPerItemOk() (bool, bool) {
	if o == nil || o.IsPerItem == nil {
		var ret bool
		return ret, false
	}
	return *o.IsPerItem, true
}

// HasIsPerItem returns a boolean if a field has been set.
func (o *NewCustomEffectAllOf) HasIsPerItem() bool {
	if o != nil && o.IsPerItem != nil {
		return true
	}

	return false
}

// SetIsPerItem gets a reference to the given bool and assigns it to the IsPerItem field.
func (o *NewCustomEffectAllOf) SetIsPerItem(v bool) {
	o.IsPerItem = &v
}

// GetName returns the Name field value
func (o *NewCustomEffectAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *NewCustomEffectAllOf) SetName(v string) {
	o.Name = v
}

// GetTitle returns the Title field value
func (o *NewCustomEffectAllOf) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// SetTitle sets field value
func (o *NewCustomEffectAllOf) SetTitle(v string) {
	o.Title = v
}

// GetPayload returns the Payload field value
func (o *NewCustomEffectAllOf) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// SetPayload sets field value
func (o *NewCustomEffectAllOf) SetPayload(v string) {
	o.Payload = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NewCustomEffectAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomEffectAllOf) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NewCustomEffectAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NewCustomEffectAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *NewCustomEffectAllOf) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// SetEnabled sets field value
func (o *NewCustomEffectAllOf) SetEnabled(v bool) {
	o.Enabled = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *NewCustomEffectAllOf) GetParams() []TemplateArgDef {
	if o == nil || o.Params == nil {
		var ret []TemplateArgDef
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomEffectAllOf) GetParamsOk() ([]TemplateArgDef, bool) {
	if o == nil || o.Params == nil {
		var ret []TemplateArgDef
		return ret, false
	}
	return *o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *NewCustomEffectAllOf) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given []TemplateArgDef and assigns it to the Params field.
func (o *NewCustomEffectAllOf) SetParams(v []TemplateArgDef) {
	o.Params = &v
}

type NullableNewCustomEffectAllOf struct {
	Value NewCustomEffectAllOf
	ExplicitNull bool
}

func (v NullableNewCustomEffectAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableNewCustomEffectAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
