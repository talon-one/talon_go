/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CustomerInventory struct for CustomerInventory
type CustomerInventory struct {
	Profile   *CustomerProfile     `json:"profile,omitempty"`
	Loyalty   *Loyalty             `json:"loyalty,omitempty"`
	Referrals *[]InventoryReferral `json:"referrals,omitempty"`
	// The coupons reserved by this profile. This array includes hard and soft reservations. See each coupon's `reservation` property.
	Coupons   *[]InventoryCoupon `json:"coupons,omitempty"`
	Giveaways *[]Giveaway        `json:"giveaways,omitempty"`
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *CustomerInventory) GetProfile() CustomerProfile {
	if o == nil || o.Profile == nil {
		var ret CustomerProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerInventory) GetProfileOk() (CustomerProfile, bool) {
	if o == nil || o.Profile == nil {
		var ret CustomerProfile
		return ret, false
	}
	return *o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *CustomerInventory) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given CustomerProfile and assigns it to the Profile field.
func (o *CustomerInventory) SetProfile(v CustomerProfile) {
	o.Profile = &v
}

// GetLoyalty returns the Loyalty field value if set, zero value otherwise.
func (o *CustomerInventory) GetLoyalty() Loyalty {
	if o == nil || o.Loyalty == nil {
		var ret Loyalty
		return ret
	}
	return *o.Loyalty
}

// GetLoyaltyOk returns a tuple with the Loyalty field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerInventory) GetLoyaltyOk() (Loyalty, bool) {
	if o == nil || o.Loyalty == nil {
		var ret Loyalty
		return ret, false
	}
	return *o.Loyalty, true
}

// HasLoyalty returns a boolean if a field has been set.
func (o *CustomerInventory) HasLoyalty() bool {
	if o != nil && o.Loyalty != nil {
		return true
	}

	return false
}

// SetLoyalty gets a reference to the given Loyalty and assigns it to the Loyalty field.
func (o *CustomerInventory) SetLoyalty(v Loyalty) {
	o.Loyalty = &v
}

// GetReferrals returns the Referrals field value if set, zero value otherwise.
func (o *CustomerInventory) GetReferrals() []InventoryReferral {
	if o == nil || o.Referrals == nil {
		var ret []InventoryReferral
		return ret
	}
	return *o.Referrals
}

// GetReferralsOk returns a tuple with the Referrals field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerInventory) GetReferralsOk() ([]InventoryReferral, bool) {
	if o == nil || o.Referrals == nil {
		var ret []InventoryReferral
		return ret, false
	}
	return *o.Referrals, true
}

// HasReferrals returns a boolean if a field has been set.
func (o *CustomerInventory) HasReferrals() bool {
	if o != nil && o.Referrals != nil {
		return true
	}

	return false
}

// SetReferrals gets a reference to the given []InventoryReferral and assigns it to the Referrals field.
func (o *CustomerInventory) SetReferrals(v []InventoryReferral) {
	o.Referrals = &v
}

// GetCoupons returns the Coupons field value if set, zero value otherwise.
func (o *CustomerInventory) GetCoupons() []InventoryCoupon {
	if o == nil || o.Coupons == nil {
		var ret []InventoryCoupon
		return ret
	}
	return *o.Coupons
}

// GetCouponsOk returns a tuple with the Coupons field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerInventory) GetCouponsOk() ([]InventoryCoupon, bool) {
	if o == nil || o.Coupons == nil {
		var ret []InventoryCoupon
		return ret, false
	}
	return *o.Coupons, true
}

// HasCoupons returns a boolean if a field has been set.
func (o *CustomerInventory) HasCoupons() bool {
	if o != nil && o.Coupons != nil {
		return true
	}

	return false
}

// SetCoupons gets a reference to the given []InventoryCoupon and assigns it to the Coupons field.
func (o *CustomerInventory) SetCoupons(v []InventoryCoupon) {
	o.Coupons = &v
}

// GetGiveaways returns the Giveaways field value if set, zero value otherwise.
func (o *CustomerInventory) GetGiveaways() []Giveaway {
	if o == nil || o.Giveaways == nil {
		var ret []Giveaway
		return ret
	}
	return *o.Giveaways
}

// GetGiveawaysOk returns a tuple with the Giveaways field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerInventory) GetGiveawaysOk() ([]Giveaway, bool) {
	if o == nil || o.Giveaways == nil {
		var ret []Giveaway
		return ret, false
	}
	return *o.Giveaways, true
}

// HasGiveaways returns a boolean if a field has been set.
func (o *CustomerInventory) HasGiveaways() bool {
	if o != nil && o.Giveaways != nil {
		return true
	}

	return false
}

// SetGiveaways gets a reference to the given []Giveaway and assigns it to the Giveaways field.
func (o *CustomerInventory) SetGiveaways(v []Giveaway) {
	o.Giveaways = &v
}

type NullableCustomerInventory struct {
	Value        CustomerInventory
	ExplicitNull bool
}

func (v NullableCustomerInventory) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCustomerInventory) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
