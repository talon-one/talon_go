/*
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CustomerInventory struct for CustomerInventory
type CustomerInventory struct {
	Profile   *CustomerProfile `json:"profile,omitempty"`
	Referrals *[]Referral      `json:"referrals,omitempty"`
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *CustomerInventory) GetProfile() CustomerProfile {
	if o == nil || o.Profile == nil {
		var ret CustomerProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerInventory) GetProfileOk() (CustomerProfile, bool) {
	if o == nil || o.Profile == nil {
		var ret CustomerProfile
		return ret, false
	}
	return *o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *CustomerInventory) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given CustomerProfile and assigns it to the Profile field.
func (o *CustomerInventory) SetProfile(v CustomerProfile) {
	o.Profile = &v
}

// GetReferrals returns the Referrals field value if set, zero value otherwise.
func (o *CustomerInventory) GetReferrals() []Referral {
	if o == nil || o.Referrals == nil {
		var ret []Referral
		return ret
	}
	return *o.Referrals
}

// GetReferralsOk returns a tuple with the Referrals field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerInventory) GetReferralsOk() ([]Referral, bool) {
	if o == nil || o.Referrals == nil {
		var ret []Referral
		return ret, false
	}
	return *o.Referrals, true
}

// HasReferrals returns a boolean if a field has been set.
func (o *CustomerInventory) HasReferrals() bool {
	if o != nil && o.Referrals != nil {
		return true
	}

	return false
}

// SetReferrals gets a reference to the given []Referral and assigns it to the Referrals field.
func (o *CustomerInventory) SetReferrals(v []Referral) {
	o.Referrals = &v
}

type NullableCustomerInventory struct {
	Value        CustomerInventory
	ExplicitNull bool
}

func (v NullableCustomerInventory) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCustomerInventory) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
