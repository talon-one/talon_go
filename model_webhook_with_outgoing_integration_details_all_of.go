/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// WebhookWithOutgoingIntegrationDetailsAllOf struct for WebhookWithOutgoingIntegrationDetailsAllOf
type WebhookWithOutgoingIntegrationDetailsAllOf struct {
	// Identifier of the outgoing integration template.
	OutgoingIntegrationTemplateId *int32 `json:"outgoingIntegrationTemplateId,omitempty"`
	// Identifier of the outgoing integration type.
	OutgoingIntegrationTypeId *int32 `json:"outgoingIntegrationTypeId,omitempty"`
	// Name of the outgoing integration.
	OutgoingIntegrationTypeName *string `json:"outgoingIntegrationTypeName,omitempty"`
}

// GetOutgoingIntegrationTemplateId returns the OutgoingIntegrationTemplateId field value if set, zero value otherwise.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) GetOutgoingIntegrationTemplateId() int32 {
	if o == nil || o.OutgoingIntegrationTemplateId == nil {
		var ret int32
		return ret
	}
	return *o.OutgoingIntegrationTemplateId
}

// GetOutgoingIntegrationTemplateIdOk returns a tuple with the OutgoingIntegrationTemplateId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) GetOutgoingIntegrationTemplateIdOk() (int32, bool) {
	if o == nil || o.OutgoingIntegrationTemplateId == nil {
		var ret int32
		return ret, false
	}
	return *o.OutgoingIntegrationTemplateId, true
}

// HasOutgoingIntegrationTemplateId returns a boolean if a field has been set.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) HasOutgoingIntegrationTemplateId() bool {
	if o != nil && o.OutgoingIntegrationTemplateId != nil {
		return true
	}

	return false
}

// SetOutgoingIntegrationTemplateId gets a reference to the given int32 and assigns it to the OutgoingIntegrationTemplateId field.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) SetOutgoingIntegrationTemplateId(v int32) {
	o.OutgoingIntegrationTemplateId = &v
}

// GetOutgoingIntegrationTypeId returns the OutgoingIntegrationTypeId field value if set, zero value otherwise.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) GetOutgoingIntegrationTypeId() int32 {
	if o == nil || o.OutgoingIntegrationTypeId == nil {
		var ret int32
		return ret
	}
	return *o.OutgoingIntegrationTypeId
}

// GetOutgoingIntegrationTypeIdOk returns a tuple with the OutgoingIntegrationTypeId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) GetOutgoingIntegrationTypeIdOk() (int32, bool) {
	if o == nil || o.OutgoingIntegrationTypeId == nil {
		var ret int32
		return ret, false
	}
	return *o.OutgoingIntegrationTypeId, true
}

// HasOutgoingIntegrationTypeId returns a boolean if a field has been set.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) HasOutgoingIntegrationTypeId() bool {
	if o != nil && o.OutgoingIntegrationTypeId != nil {
		return true
	}

	return false
}

// SetOutgoingIntegrationTypeId gets a reference to the given int32 and assigns it to the OutgoingIntegrationTypeId field.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) SetOutgoingIntegrationTypeId(v int32) {
	o.OutgoingIntegrationTypeId = &v
}

// GetOutgoingIntegrationTypeName returns the OutgoingIntegrationTypeName field value if set, zero value otherwise.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) GetOutgoingIntegrationTypeName() string {
	if o == nil || o.OutgoingIntegrationTypeName == nil {
		var ret string
		return ret
	}
	return *o.OutgoingIntegrationTypeName
}

// GetOutgoingIntegrationTypeNameOk returns a tuple with the OutgoingIntegrationTypeName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) GetOutgoingIntegrationTypeNameOk() (string, bool) {
	if o == nil || o.OutgoingIntegrationTypeName == nil {
		var ret string
		return ret, false
	}
	return *o.OutgoingIntegrationTypeName, true
}

// HasOutgoingIntegrationTypeName returns a boolean if a field has been set.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) HasOutgoingIntegrationTypeName() bool {
	if o != nil && o.OutgoingIntegrationTypeName != nil {
		return true
	}

	return false
}

// SetOutgoingIntegrationTypeName gets a reference to the given string and assigns it to the OutgoingIntegrationTypeName field.
func (o *WebhookWithOutgoingIntegrationDetailsAllOf) SetOutgoingIntegrationTypeName(v string) {
	o.OutgoingIntegrationTypeName = &v
}

type NullableWebhookWithOutgoingIntegrationDetailsAllOf struct {
	Value WebhookWithOutgoingIntegrationDetailsAllOf
	ExplicitNull bool
}

func (v NullableWebhookWithOutgoingIntegrationDetailsAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableWebhookWithOutgoingIntegrationDetailsAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
