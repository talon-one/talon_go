/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// Environment
type Environment struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The ID of the application that owns this entity.
	ApplicationId int32 `json:"applicationId"`
	// The slots defined for this application.
	Slots []SlotDef `json:"slots"`
	// The functions defined for this application.
	Functions []FunctionDef `json:"functions"`
	// The templates defined for this application.
	Templates []TemplateDef `json:"templates"`
	// A stringified version of the environment's Talang variables scope.
	Variables string `json:"variables"`
	// The giveaways pools that the application is subscribed to.
	GiveawaysPools *[]GiveawaysPool `json:"giveawaysPools,omitempty"`
	// The loyalty programs that the application is subscribed to.
	LoyaltyPrograms *[]LoyaltyProgram `json:"loyaltyPrograms,omitempty"`
	// The attributes that the application is subscribed to.
	Attributes *[]Attribute `json:"attributes,omitempty"`
	// The additional costs that the application is subscribed to.
	AdditionalCosts *[]AccountAdditionalCost `json:"additionalCosts,omitempty"`
	// The audiences contained in the account which the application belongs to.
	Audiences *[]Audience `json:"audiences,omitempty"`
	// The account-level collections that the application is subscribed to.
	Collections *[]Collection `json:"collections,omitempty"`
}

// GetId returns the Id field value
func (o *Environment) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *Environment) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *Environment) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *Environment) SetCreated(v time.Time) {
	o.Created = v
}

// GetApplicationId returns the ApplicationId field value
func (o *Environment) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// SetApplicationId sets field value
func (o *Environment) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetSlots returns the Slots field value
func (o *Environment) GetSlots() []SlotDef {
	if o == nil {
		var ret []SlotDef
		return ret
	}

	return o.Slots
}

// SetSlots sets field value
func (o *Environment) SetSlots(v []SlotDef) {
	o.Slots = v
}

// GetFunctions returns the Functions field value
func (o *Environment) GetFunctions() []FunctionDef {
	if o == nil {
		var ret []FunctionDef
		return ret
	}

	return o.Functions
}

// SetFunctions sets field value
func (o *Environment) SetFunctions(v []FunctionDef) {
	o.Functions = v
}

// GetTemplates returns the Templates field value
func (o *Environment) GetTemplates() []TemplateDef {
	if o == nil {
		var ret []TemplateDef
		return ret
	}

	return o.Templates
}

// SetTemplates sets field value
func (o *Environment) SetTemplates(v []TemplateDef) {
	o.Templates = v
}

// GetVariables returns the Variables field value
func (o *Environment) GetVariables() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Variables
}

// SetVariables sets field value
func (o *Environment) SetVariables(v string) {
	o.Variables = v
}

// GetGiveawaysPools returns the GiveawaysPools field value if set, zero value otherwise.
func (o *Environment) GetGiveawaysPools() []GiveawaysPool {
	if o == nil || o.GiveawaysPools == nil {
		var ret []GiveawaysPool
		return ret
	}
	return *o.GiveawaysPools
}

// GetGiveawaysPoolsOk returns a tuple with the GiveawaysPools field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetGiveawaysPoolsOk() ([]GiveawaysPool, bool) {
	if o == nil || o.GiveawaysPools == nil {
		var ret []GiveawaysPool
		return ret, false
	}
	return *o.GiveawaysPools, true
}

// HasGiveawaysPools returns a boolean if a field has been set.
func (o *Environment) HasGiveawaysPools() bool {
	if o != nil && o.GiveawaysPools != nil {
		return true
	}

	return false
}

// SetGiveawaysPools gets a reference to the given []GiveawaysPool and assigns it to the GiveawaysPools field.
func (o *Environment) SetGiveawaysPools(v []GiveawaysPool) {
	o.GiveawaysPools = &v
}

// GetLoyaltyPrograms returns the LoyaltyPrograms field value if set, zero value otherwise.
func (o *Environment) GetLoyaltyPrograms() []LoyaltyProgram {
	if o == nil || o.LoyaltyPrograms == nil {
		var ret []LoyaltyProgram
		return ret
	}
	return *o.LoyaltyPrograms
}

// GetLoyaltyProgramsOk returns a tuple with the LoyaltyPrograms field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetLoyaltyProgramsOk() ([]LoyaltyProgram, bool) {
	if o == nil || o.LoyaltyPrograms == nil {
		var ret []LoyaltyProgram
		return ret, false
	}
	return *o.LoyaltyPrograms, true
}

// HasLoyaltyPrograms returns a boolean if a field has been set.
func (o *Environment) HasLoyaltyPrograms() bool {
	if o != nil && o.LoyaltyPrograms != nil {
		return true
	}

	return false
}

// SetLoyaltyPrograms gets a reference to the given []LoyaltyProgram and assigns it to the LoyaltyPrograms field.
func (o *Environment) SetLoyaltyPrograms(v []LoyaltyProgram) {
	o.LoyaltyPrograms = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Environment) GetAttributes() []Attribute {
	if o == nil || o.Attributes == nil {
		var ret []Attribute
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetAttributesOk() ([]Attribute, bool) {
	if o == nil || o.Attributes == nil {
		var ret []Attribute
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Environment) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []Attribute and assigns it to the Attributes field.
func (o *Environment) SetAttributes(v []Attribute) {
	o.Attributes = &v
}

// GetAdditionalCosts returns the AdditionalCosts field value if set, zero value otherwise.
func (o *Environment) GetAdditionalCosts() []AccountAdditionalCost {
	if o == nil || o.AdditionalCosts == nil {
		var ret []AccountAdditionalCost
		return ret
	}
	return *o.AdditionalCosts
}

// GetAdditionalCostsOk returns a tuple with the AdditionalCosts field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetAdditionalCostsOk() ([]AccountAdditionalCost, bool) {
	if o == nil || o.AdditionalCosts == nil {
		var ret []AccountAdditionalCost
		return ret, false
	}
	return *o.AdditionalCosts, true
}

// HasAdditionalCosts returns a boolean if a field has been set.
func (o *Environment) HasAdditionalCosts() bool {
	if o != nil && o.AdditionalCosts != nil {
		return true
	}

	return false
}

// SetAdditionalCosts gets a reference to the given []AccountAdditionalCost and assigns it to the AdditionalCosts field.
func (o *Environment) SetAdditionalCosts(v []AccountAdditionalCost) {
	o.AdditionalCosts = &v
}

// GetAudiences returns the Audiences field value if set, zero value otherwise.
func (o *Environment) GetAudiences() []Audience {
	if o == nil || o.Audiences == nil {
		var ret []Audience
		return ret
	}
	return *o.Audiences
}

// GetAudiencesOk returns a tuple with the Audiences field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetAudiencesOk() ([]Audience, bool) {
	if o == nil || o.Audiences == nil {
		var ret []Audience
		return ret, false
	}
	return *o.Audiences, true
}

// HasAudiences returns a boolean if a field has been set.
func (o *Environment) HasAudiences() bool {
	if o != nil && o.Audiences != nil {
		return true
	}

	return false
}

// SetAudiences gets a reference to the given []Audience and assigns it to the Audiences field.
func (o *Environment) SetAudiences(v []Audience) {
	o.Audiences = &v
}

// GetCollections returns the Collections field value if set, zero value otherwise.
func (o *Environment) GetCollections() []Collection {
	if o == nil || o.Collections == nil {
		var ret []Collection
		return ret
	}
	return *o.Collections
}

// GetCollectionsOk returns a tuple with the Collections field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetCollectionsOk() ([]Collection, bool) {
	if o == nil || o.Collections == nil {
		var ret []Collection
		return ret, false
	}
	return *o.Collections, true
}

// HasCollections returns a boolean if a field has been set.
func (o *Environment) HasCollections() bool {
	if o != nil && o.Collections != nil {
		return true
	}

	return false
}

// SetCollections gets a reference to the given []Collection and assigns it to the Collections field.
func (o *Environment) SetCollections(v []Collection) {
	o.Collections = &v
}

type NullableEnvironment struct {
	Value        Environment
	ExplicitNull bool
}

func (v NullableEnvironment) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableEnvironment) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
