/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// RevisionActivationRequest struct for RevisionActivationRequest
type RevisionActivationRequest struct {
	// The list of IDs of the users who will receive the activation request.
	UserIds []int32 `json:"userIds"`
	// Time when the revisions are finalized after the `activate_revision` operation. The current time is used when left blank.  **Note:** It must be an RFC3339 timestamp string.
	ActivateAt *time.Time `json:"activateAt,omitempty"`
}

// GetUserIds returns the UserIds field value
func (o *RevisionActivationRequest) GetUserIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.UserIds
}

// SetUserIds sets field value
func (o *RevisionActivationRequest) SetUserIds(v []int32) {
	o.UserIds = v
}

// GetActivateAt returns the ActivateAt field value if set, zero value otherwise.
func (o *RevisionActivationRequest) GetActivateAt() time.Time {
	if o == nil || o.ActivateAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivateAt
}

// GetActivateAtOk returns a tuple with the ActivateAt field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RevisionActivationRequest) GetActivateAtOk() (time.Time, bool) {
	if o == nil || o.ActivateAt == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ActivateAt, true
}

// HasActivateAt returns a boolean if a field has been set.
func (o *RevisionActivationRequest) HasActivateAt() bool {
	if o != nil && o.ActivateAt != nil {
		return true
	}

	return false
}

// SetActivateAt gets a reference to the given time.Time and assigns it to the ActivateAt field.
func (o *RevisionActivationRequest) SetActivateAt(v time.Time) {
	o.ActivateAt = &v
}

type NullableRevisionActivationRequest struct {
	Value        RevisionActivationRequest
	ExplicitNull bool
}

func (v NullableRevisionActivationRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableRevisionActivationRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
