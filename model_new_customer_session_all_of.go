/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// NewCustomerSessionAllOf struct for NewCustomerSessionAllOf
type NewCustomerSessionAllOf struct {
	// Any coupon code entered.
	Coupon *string `json:"coupon,omitempty"`
	// Any referral code entered.
	Referral *string `json:"referral,omitempty"`
	// Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:  1. `open` → `closed` 2. `open` → `cancelled` 3. `closed` → `cancelled` or `partially_returned` 4. `partially_returned` → `cancelled`  For more information, see [Customer session states](https://docs.talon.one/docs/dev/concepts/entities/customer-sessions). 
	State *string `json:"state,omitempty"`
	// Serialized JSON representation.
	CartItems *[]CartItem `json:"cartItems,omitempty"`
	// Session custom identifiers that you can set limits on or use inside your rules.  For example, you can use IP addresses as identifiers to potentially identify devices and limit discounts abuse in case of customers creating multiple accounts. See the [tutorial](https://docs.talon.one/docs/dev/tutorials/using-identifiers). 
	Identifiers *[]string `json:"identifiers,omitempty"`
	// The total sum of the cart in one session.
	Total *float32 `json:"total,omitempty"`
	// A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings. 
	Attributes *map[string]map[string]interface{} `json:"attributes,omitempty"`
}

// GetCoupon returns the Coupon field value if set, zero value otherwise.
func (o *NewCustomerSessionAllOf) GetCoupon() string {
	if o == nil || o.Coupon == nil {
		var ret string
		return ret
	}
	return *o.Coupon
}

// GetCouponOk returns a tuple with the Coupon field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomerSessionAllOf) GetCouponOk() (string, bool) {
	if o == nil || o.Coupon == nil {
		var ret string
		return ret, false
	}
	return *o.Coupon, true
}

// HasCoupon returns a boolean if a field has been set.
func (o *NewCustomerSessionAllOf) HasCoupon() bool {
	if o != nil && o.Coupon != nil {
		return true
	}

	return false
}

// SetCoupon gets a reference to the given string and assigns it to the Coupon field.
func (o *NewCustomerSessionAllOf) SetCoupon(v string) {
	o.Coupon = &v
}

// GetReferral returns the Referral field value if set, zero value otherwise.
func (o *NewCustomerSessionAllOf) GetReferral() string {
	if o == nil || o.Referral == nil {
		var ret string
		return ret
	}
	return *o.Referral
}

// GetReferralOk returns a tuple with the Referral field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomerSessionAllOf) GetReferralOk() (string, bool) {
	if o == nil || o.Referral == nil {
		var ret string
		return ret, false
	}
	return *o.Referral, true
}

// HasReferral returns a boolean if a field has been set.
func (o *NewCustomerSessionAllOf) HasReferral() bool {
	if o != nil && o.Referral != nil {
		return true
	}

	return false
}

// SetReferral gets a reference to the given string and assigns it to the Referral field.
func (o *NewCustomerSessionAllOf) SetReferral(v string) {
	o.Referral = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NewCustomerSessionAllOf) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomerSessionAllOf) GetStateOk() (string, bool) {
	if o == nil || o.State == nil {
		var ret string
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NewCustomerSessionAllOf) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NewCustomerSessionAllOf) SetState(v string) {
	o.State = &v
}

// GetCartItems returns the CartItems field value if set, zero value otherwise.
func (o *NewCustomerSessionAllOf) GetCartItems() []CartItem {
	if o == nil || o.CartItems == nil {
		var ret []CartItem
		return ret
	}
	return *o.CartItems
}

// GetCartItemsOk returns a tuple with the CartItems field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomerSessionAllOf) GetCartItemsOk() ([]CartItem, bool) {
	if o == nil || o.CartItems == nil {
		var ret []CartItem
		return ret, false
	}
	return *o.CartItems, true
}

// HasCartItems returns a boolean if a field has been set.
func (o *NewCustomerSessionAllOf) HasCartItems() bool {
	if o != nil && o.CartItems != nil {
		return true
	}

	return false
}

// SetCartItems gets a reference to the given []CartItem and assigns it to the CartItems field.
func (o *NewCustomerSessionAllOf) SetCartItems(v []CartItem) {
	o.CartItems = &v
}

// GetIdentifiers returns the Identifiers field value if set, zero value otherwise.
func (o *NewCustomerSessionAllOf) GetIdentifiers() []string {
	if o == nil || o.Identifiers == nil {
		var ret []string
		return ret
	}
	return *o.Identifiers
}

// GetIdentifiersOk returns a tuple with the Identifiers field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomerSessionAllOf) GetIdentifiersOk() ([]string, bool) {
	if o == nil || o.Identifiers == nil {
		var ret []string
		return ret, false
	}
	return *o.Identifiers, true
}

// HasIdentifiers returns a boolean if a field has been set.
func (o *NewCustomerSessionAllOf) HasIdentifiers() bool {
	if o != nil && o.Identifiers != nil {
		return true
	}

	return false
}

// SetIdentifiers gets a reference to the given []string and assigns it to the Identifiers field.
func (o *NewCustomerSessionAllOf) SetIdentifiers(v []string) {
	o.Identifiers = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *NewCustomerSessionAllOf) GetTotal() float32 {
	if o == nil || o.Total == nil {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomerSessionAllOf) GetTotalOk() (float32, bool) {
	if o == nil || o.Total == nil {
		var ret float32
		return ret, false
	}
	return *o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *NewCustomerSessionAllOf) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *NewCustomerSessionAllOf) SetTotal(v float32) {
	o.Total = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *NewCustomerSessionAllOf) GetAttributes() map[string]map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCustomerSessionAllOf) GetAttributesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *NewCustomerSessionAllOf) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the Attributes field.
func (o *NewCustomerSessionAllOf) SetAttributes(v map[string]map[string]interface{}) {
	o.Attributes = &v
}

type NullableNewCustomerSessionAllOf struct {
	Value NewCustomerSessionAllOf
	ExplicitNull bool
}

func (v NullableNewCustomerSessionAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableNewCustomerSessionAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
