/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// ReturnedCartItem struct for ReturnedCartItem
type ReturnedCartItem struct {
	// The index of the cart item in the provided customer session's `cartItems` property.
	Position int32 `json:"position"`
	// Number of cart items to return. It is only available when [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation#flattening) is enabled. If cart item flattening is disabled, the cart item can only be returned in its entirety.
	Quantity *int32 `json:"quantity,omitempty"`
}

// GetPosition returns the Position field value
func (o *ReturnedCartItem) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// SetPosition sets field value
func (o *ReturnedCartItem) SetPosition(v int32) {
	o.Position = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ReturnedCartItem) GetQuantity() int32 {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ReturnedCartItem) GetQuantityOk() (int32, bool) {
	if o == nil || o.Quantity == nil {
		var ret int32
		return ret, false
	}
	return *o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ReturnedCartItem) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ReturnedCartItem) SetQuantity(v int32) {
	o.Quantity = &v
}

type NullableReturnedCartItem struct {
	Value        ReturnedCartItem
	ExplicitNull bool
}

func (v NullableReturnedCartItem) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableReturnedCartItem) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
