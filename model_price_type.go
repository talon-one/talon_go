/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// PriceType struct for PriceType
type PriceType struct {
	// The internal ID of this entity.
	Id int32 `json:"id"`
	// The time this entity was created.
	Created time.Time `json:"created"`
	// The ID of the account that owns this price type.
	AccountId *int32 `json:"accountId,omitempty"`
	// The API name of the price type. This is an immutable value.
	Name string `json:"name"`
	// The title of the price type.
	Title string `json:"title"`
	// The description of the price type.
	Description *string `json:"description,omitempty"`
	// The date and time when the price type was last modified.
	Modified time.Time `json:"modified"`
	// A list of the IDs of the catalogs that are subscribed to this price type.
	SubscribedCatalogsIds []int32 `json:"subscribedCatalogsIds"`
	// A list of the IDs of the audiences that are targeted by this price type.
	TargetedAudiencesIds []int32 `json:"targetedAudiencesIds"`
}

// GetId returns the Id field value
func (o *PriceType) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *PriceType) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *PriceType) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *PriceType) SetCreated(v time.Time) {
	o.Created = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *PriceType) GetAccountId() int32 {
	if o == nil || o.AccountId == nil {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PriceType) GetAccountIdOk() (int32, bool) {
	if o == nil || o.AccountId == nil {
		var ret int32
		return ret, false
	}
	return *o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *PriceType) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *PriceType) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetName returns the Name field value
func (o *PriceType) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *PriceType) SetName(v string) {
	o.Name = v
}

// GetTitle returns the Title field value
func (o *PriceType) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// SetTitle sets field value
func (o *PriceType) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PriceType) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PriceType) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PriceType) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PriceType) SetDescription(v string) {
	o.Description = &v
}

// GetModified returns the Modified field value
func (o *PriceType) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// SetModified sets field value
func (o *PriceType) SetModified(v time.Time) {
	o.Modified = v
}

// GetSubscribedCatalogsIds returns the SubscribedCatalogsIds field value
func (o *PriceType) GetSubscribedCatalogsIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.SubscribedCatalogsIds
}

// SetSubscribedCatalogsIds sets field value
func (o *PriceType) SetSubscribedCatalogsIds(v []int32) {
	o.SubscribedCatalogsIds = v
}

// GetTargetedAudiencesIds returns the TargetedAudiencesIds field value
func (o *PriceType) GetTargetedAudiencesIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.TargetedAudiencesIds
}

// SetTargetedAudiencesIds sets field value
func (o *PriceType) SetTargetedAudiencesIds(v []int32) {
	o.TargetedAudiencesIds = v
}

type NullablePriceType struct {
	Value        PriceType
	ExplicitNull bool
}

func (v NullablePriceType) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullablePriceType) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
