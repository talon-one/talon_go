/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// StrikethroughEffectProps struct for StrikethroughEffectProps
type StrikethroughEffectProps struct {
	// The type of the custom effect.
	Name string `json:"name"`
	// discount value.
	Value map[string]interface{} `json:"value"`
	// ID of the effect.
	EffectId int32 `json:"effectId"`
	// The JSON payload of the custom effect.
	Payload map[string]map[string]interface{} `json:"payload"`
}

// GetName returns the Name field value
func (o *StrikethroughEffectProps) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *StrikethroughEffectProps) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *StrikethroughEffectProps) GetValue() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Value
}

// SetValue sets field value
func (o *StrikethroughEffectProps) SetValue(v map[string]interface{}) {
	o.Value = v
}

// GetEffectId returns the EffectId field value
func (o *StrikethroughEffectProps) GetEffectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EffectId
}

// SetEffectId sets field value
func (o *StrikethroughEffectProps) SetEffectId(v int32) {
	o.EffectId = v
}

// GetPayload returns the Payload field value
func (o *StrikethroughEffectProps) GetPayload() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Payload
}

// SetPayload sets field value
func (o *StrikethroughEffectProps) SetPayload(v map[string]map[string]interface{}) {
	o.Payload = v
}

type NullableStrikethroughEffectProps struct {
	Value StrikethroughEffectProps
	ExplicitNull bool
}

func (v NullableStrikethroughEffectProps) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableStrikethroughEffectProps) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
