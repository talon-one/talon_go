/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// AccessLogEntry Log of application accesses.
type AccessLogEntry struct {
	// UUID reference of request.
	Uuid string `json:"uuid"`
	// HTTP status code of response.
	Status int32 `json:"status"`
	// HTTP method of request.
	Method string `json:"method"`
	// target URI of request
	RequestUri string `json:"requestUri"`
	// timestamp of request
	Time time.Time `json:"time"`
	// payload of request
	RequestPayload string `json:"requestPayload"`
	// payload of response
	ResponsePayload string `json:"responsePayload"`
}

// GetUuid returns the Uuid field value
func (o *AccessLogEntry) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// SetUuid sets field value
func (o *AccessLogEntry) SetUuid(v string) {
	o.Uuid = v
}

// GetStatus returns the Status field value
func (o *AccessLogEntry) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// SetStatus sets field value
func (o *AccessLogEntry) SetStatus(v int32) {
	o.Status = v
}

// GetMethod returns the Method field value
func (o *AccessLogEntry) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// SetMethod sets field value
func (o *AccessLogEntry) SetMethod(v string) {
	o.Method = v
}

// GetRequestUri returns the RequestUri field value
func (o *AccessLogEntry) GetRequestUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestUri
}

// SetRequestUri sets field value
func (o *AccessLogEntry) SetRequestUri(v string) {
	o.RequestUri = v
}

// GetTime returns the Time field value
func (o *AccessLogEntry) GetTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Time
}

// SetTime sets field value
func (o *AccessLogEntry) SetTime(v time.Time) {
	o.Time = v
}

// GetRequestPayload returns the RequestPayload field value
func (o *AccessLogEntry) GetRequestPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestPayload
}

// SetRequestPayload sets field value
func (o *AccessLogEntry) SetRequestPayload(v string) {
	o.RequestPayload = v
}

// GetResponsePayload returns the ResponsePayload field value
func (o *AccessLogEntry) GetResponsePayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResponsePayload
}

// SetResponsePayload sets field value
func (o *AccessLogEntry) SetResponsePayload(v string) {
	o.ResponsePayload = v
}

type NullableAccessLogEntry struct {
	Value        AccessLogEntry
	ExplicitNull bool
}

func (v NullableAccessLogEntry) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableAccessLogEntry) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
