/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// NewOutgoingIntegrationWebhook struct for NewOutgoingIntegrationWebhook
type NewOutgoingIntegrationWebhook struct {
	// Webhook title.
	Title string `json:"title"`
	// IDs of the Applications to which a webhook must be linked.
	ApplicationIds []int32 `json:"applicationIds"`
}

// GetTitle returns the Title field value
func (o *NewOutgoingIntegrationWebhook) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// SetTitle sets field value
func (o *NewOutgoingIntegrationWebhook) SetTitle(v string) {
	o.Title = v
}

// GetApplicationIds returns the ApplicationIds field value
func (o *NewOutgoingIntegrationWebhook) GetApplicationIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ApplicationIds
}

// SetApplicationIds sets field value
func (o *NewOutgoingIntegrationWebhook) SetApplicationIds(v []int32) {
	o.ApplicationIds = v
}

type NullableNewOutgoingIntegrationWebhook struct {
	Value        NewOutgoingIntegrationWebhook
	ExplicitNull bool
}

func (v NullableNewOutgoingIntegrationWebhook) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableNewOutgoingIntegrationWebhook) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
