/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// Revision struct for Revision
type Revision struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id             int32            `json:"id"`
	ActivateAt     *time.Time       `json:"activateAt,omitempty"`
	AccountId      int32            `json:"accountId"`
	ApplicationId  int32            `json:"applicationId"`
	CampaignId     int32            `json:"campaignId"`
	Created        time.Time        `json:"created"`
	CreatedBy      int32            `json:"createdBy"`
	ActivatedAt    *time.Time       `json:"activatedAt,omitempty"`
	ActivatedBy    *int32           `json:"activatedBy,omitempty"`
	CurrentVersion *RevisionVersion `json:"currentVersion,omitempty"`
}

// GetId returns the Id field value
func (o *Revision) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *Revision) SetId(v int32) {
	o.Id = v
}

// GetActivateAt returns the ActivateAt field value if set, zero value otherwise.
func (o *Revision) GetActivateAt() time.Time {
	if o == nil || o.ActivateAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivateAt
}

// GetActivateAtOk returns a tuple with the ActivateAt field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Revision) GetActivateAtOk() (time.Time, bool) {
	if o == nil || o.ActivateAt == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ActivateAt, true
}

// HasActivateAt returns a boolean if a field has been set.
func (o *Revision) HasActivateAt() bool {
	if o != nil && o.ActivateAt != nil {
		return true
	}

	return false
}

// SetActivateAt gets a reference to the given time.Time and assigns it to the ActivateAt field.
func (o *Revision) SetActivateAt(v time.Time) {
	o.ActivateAt = &v
}

// GetAccountId returns the AccountId field value
func (o *Revision) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// SetAccountId sets field value
func (o *Revision) SetAccountId(v int32) {
	o.AccountId = v
}

// GetApplicationId returns the ApplicationId field value
func (o *Revision) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// SetApplicationId sets field value
func (o *Revision) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetCampaignId returns the CampaignId field value
func (o *Revision) GetCampaignId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CampaignId
}

// SetCampaignId sets field value
func (o *Revision) SetCampaignId(v int32) {
	o.CampaignId = v
}

// GetCreated returns the Created field value
func (o *Revision) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *Revision) SetCreated(v time.Time) {
	o.Created = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Revision) GetCreatedBy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedBy
}

// SetCreatedBy sets field value
func (o *Revision) SetCreatedBy(v int32) {
	o.CreatedBy = v
}

// GetActivatedAt returns the ActivatedAt field value if set, zero value otherwise.
func (o *Revision) GetActivatedAt() time.Time {
	if o == nil || o.ActivatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ActivatedAt
}

// GetActivatedAtOk returns a tuple with the ActivatedAt field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Revision) GetActivatedAtOk() (time.Time, bool) {
	if o == nil || o.ActivatedAt == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ActivatedAt, true
}

// HasActivatedAt returns a boolean if a field has been set.
func (o *Revision) HasActivatedAt() bool {
	if o != nil && o.ActivatedAt != nil {
		return true
	}

	return false
}

// SetActivatedAt gets a reference to the given time.Time and assigns it to the ActivatedAt field.
func (o *Revision) SetActivatedAt(v time.Time) {
	o.ActivatedAt = &v
}

// GetActivatedBy returns the ActivatedBy field value if set, zero value otherwise.
func (o *Revision) GetActivatedBy() int32 {
	if o == nil || o.ActivatedBy == nil {
		var ret int32
		return ret
	}
	return *o.ActivatedBy
}

// GetActivatedByOk returns a tuple with the ActivatedBy field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Revision) GetActivatedByOk() (int32, bool) {
	if o == nil || o.ActivatedBy == nil {
		var ret int32
		return ret, false
	}
	return *o.ActivatedBy, true
}

// HasActivatedBy returns a boolean if a field has been set.
func (o *Revision) HasActivatedBy() bool {
	if o != nil && o.ActivatedBy != nil {
		return true
	}

	return false
}

// SetActivatedBy gets a reference to the given int32 and assigns it to the ActivatedBy field.
func (o *Revision) SetActivatedBy(v int32) {
	o.ActivatedBy = &v
}

// GetCurrentVersion returns the CurrentVersion field value if set, zero value otherwise.
func (o *Revision) GetCurrentVersion() RevisionVersion {
	if o == nil || o.CurrentVersion == nil {
		var ret RevisionVersion
		return ret
	}
	return *o.CurrentVersion
}

// GetCurrentVersionOk returns a tuple with the CurrentVersion field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Revision) GetCurrentVersionOk() (RevisionVersion, bool) {
	if o == nil || o.CurrentVersion == nil {
		var ret RevisionVersion
		return ret, false
	}
	return *o.CurrentVersion, true
}

// HasCurrentVersion returns a boolean if a field has been set.
func (o *Revision) HasCurrentVersion() bool {
	if o != nil && o.CurrentVersion != nil {
		return true
	}

	return false
}

// SetCurrentVersion gets a reference to the given RevisionVersion and assigns it to the CurrentVersion field.
func (o *Revision) SetCurrentVersion(v RevisionVersion) {
	o.CurrentVersion = &v
}

type NullableRevision struct {
	Value        Revision
	ExplicitNull bool
}

func (v NullableRevision) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableRevision) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
