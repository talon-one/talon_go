/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// RollbackDiscountEffectProps The properties specific to the \"rollbackDiscount\" effect. This gets triggered whenever previously closed session is now cancelled or partially returned and a setDiscount effect was cancelled on our internal discount limit counters.
type RollbackDiscountEffectProps struct {
	// The name of the \"setDiscount\" effect that was rolled back.
	Name string `json:"name"`
	// The value of the discount that was rolled back.
	Value float32 `json:"value"`
	// The index of the item in the cart items for which the discount was rolled back.
	CartItemPosition *float32 `json:"cartItemPosition,omitempty"`
	// The index of the item unit in its line item. It is only used for cart items with `quantity` > 1 and is only returned when cart item flattening is enabled.
	CartItemSubPosition *float32 `json:"cartItemSubPosition,omitempty"`
	// The ID of the additional cost that was rolled back.
	AdditionalCostId *int32 `json:"additionalCostId,omitempty"`
	// The name of the additional cost that was rolled back.
	AdditionalCost *string `json:"additionalCost,omitempty"`
	// The scope of the rolled back discount - For a discount per session, it can be one of `cartItems`, `additionalCosts` or `sessionTotal` - For a discount per item, it can be one of `price`, `additionalCosts` or `itemTotal`
	Scope *string `json:"scope,omitempty"`
}

// GetName returns the Name field value
func (o *RollbackDiscountEffectProps) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *RollbackDiscountEffectProps) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *RollbackDiscountEffectProps) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// SetValue sets field value
func (o *RollbackDiscountEffectProps) SetValue(v float32) {
	o.Value = v
}

// GetCartItemPosition returns the CartItemPosition field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetCartItemPosition() float32 {
	if o == nil || o.CartItemPosition == nil {
		var ret float32
		return ret
	}
	return *o.CartItemPosition
}

// GetCartItemPositionOk returns a tuple with the CartItemPosition field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetCartItemPositionOk() (float32, bool) {
	if o == nil || o.CartItemPosition == nil {
		var ret float32
		return ret, false
	}
	return *o.CartItemPosition, true
}

// HasCartItemPosition returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasCartItemPosition() bool {
	if o != nil && o.CartItemPosition != nil {
		return true
	}

	return false
}

// SetCartItemPosition gets a reference to the given float32 and assigns it to the CartItemPosition field.
func (o *RollbackDiscountEffectProps) SetCartItemPosition(v float32) {
	o.CartItemPosition = &v
}

// GetCartItemSubPosition returns the CartItemSubPosition field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetCartItemSubPosition() float32 {
	if o == nil || o.CartItemSubPosition == nil {
		var ret float32
		return ret
	}
	return *o.CartItemSubPosition
}

// GetCartItemSubPositionOk returns a tuple with the CartItemSubPosition field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetCartItemSubPositionOk() (float32, bool) {
	if o == nil || o.CartItemSubPosition == nil {
		var ret float32
		return ret, false
	}
	return *o.CartItemSubPosition, true
}

// HasCartItemSubPosition returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasCartItemSubPosition() bool {
	if o != nil && o.CartItemSubPosition != nil {
		return true
	}

	return false
}

// SetCartItemSubPosition gets a reference to the given float32 and assigns it to the CartItemSubPosition field.
func (o *RollbackDiscountEffectProps) SetCartItemSubPosition(v float32) {
	o.CartItemSubPosition = &v
}

// GetAdditionalCostId returns the AdditionalCostId field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetAdditionalCostId() int32 {
	if o == nil || o.AdditionalCostId == nil {
		var ret int32
		return ret
	}
	return *o.AdditionalCostId
}

// GetAdditionalCostIdOk returns a tuple with the AdditionalCostId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetAdditionalCostIdOk() (int32, bool) {
	if o == nil || o.AdditionalCostId == nil {
		var ret int32
		return ret, false
	}
	return *o.AdditionalCostId, true
}

// HasAdditionalCostId returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasAdditionalCostId() bool {
	if o != nil && o.AdditionalCostId != nil {
		return true
	}

	return false
}

// SetAdditionalCostId gets a reference to the given int32 and assigns it to the AdditionalCostId field.
func (o *RollbackDiscountEffectProps) SetAdditionalCostId(v int32) {
	o.AdditionalCostId = &v
}

// GetAdditionalCost returns the AdditionalCost field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetAdditionalCost() string {
	if o == nil || o.AdditionalCost == nil {
		var ret string
		return ret
	}
	return *o.AdditionalCost
}

// GetAdditionalCostOk returns a tuple with the AdditionalCost field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetAdditionalCostOk() (string, bool) {
	if o == nil || o.AdditionalCost == nil {
		var ret string
		return ret, false
	}
	return *o.AdditionalCost, true
}

// HasAdditionalCost returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasAdditionalCost() bool {
	if o != nil && o.AdditionalCost != nil {
		return true
	}

	return false
}

// SetAdditionalCost gets a reference to the given string and assigns it to the AdditionalCost field.
func (o *RollbackDiscountEffectProps) SetAdditionalCost(v string) {
	o.AdditionalCost = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *RollbackDiscountEffectProps) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDiscountEffectProps) GetScopeOk() (string, bool) {
	if o == nil || o.Scope == nil {
		var ret string
		return ret, false
	}
	return *o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *RollbackDiscountEffectProps) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *RollbackDiscountEffectProps) SetScope(v string) {
	o.Scope = &v
}

type NullableRollbackDiscountEffectProps struct {
	Value        RollbackDiscountEffectProps
	ExplicitNull bool
}

func (v NullableRollbackDiscountEffectProps) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableRollbackDiscountEffectProps) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
