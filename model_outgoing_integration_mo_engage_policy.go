/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// OutgoingIntegrationMoEngagePolicy struct for OutgoingIntegrationMoEngagePolicy
type OutgoingIntegrationMoEngagePolicy struct {
	// MoEngage APP ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).
	AppId string `json:"appId"`
	// The base URL of your MoEngage deployment, containing the MoEngage data center number (represented by `0X`).
	BaseUrl string `json:"baseUrl"`
	// MoEngage DATA API ID. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).
	DataApiId string `json:"dataApiId"`
	// MoEngage DATA API Key. See [MoEngage Developer Guide](https://developers.moengage.com/hc/en-us/articles/4404674776724-Overview).
	DataApiKey string `json:"dataApiKey"`
}

// GetAppId returns the AppId field value
func (o *OutgoingIntegrationMoEngagePolicy) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// SetAppId sets field value
func (o *OutgoingIntegrationMoEngagePolicy) SetAppId(v string) {
	o.AppId = v
}

// GetBaseUrl returns the BaseUrl field value
func (o *OutgoingIntegrationMoEngagePolicy) GetBaseUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseUrl
}

// SetBaseUrl sets field value
func (o *OutgoingIntegrationMoEngagePolicy) SetBaseUrl(v string) {
	o.BaseUrl = v
}

// GetDataApiId returns the DataApiId field value
func (o *OutgoingIntegrationMoEngagePolicy) GetDataApiId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataApiId
}

// SetDataApiId sets field value
func (o *OutgoingIntegrationMoEngagePolicy) SetDataApiId(v string) {
	o.DataApiId = v
}

// GetDataApiKey returns the DataApiKey field value
func (o *OutgoingIntegrationMoEngagePolicy) GetDataApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataApiKey
}

// SetDataApiKey sets field value
func (o *OutgoingIntegrationMoEngagePolicy) SetDataApiKey(v string) {
	o.DataApiKey = v
}

type NullableOutgoingIntegrationMoEngagePolicy struct {
	Value OutgoingIntegrationMoEngagePolicy
	ExplicitNull bool
}

func (v NullableOutgoingIntegrationMoEngagePolicy) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableOutgoingIntegrationMoEngagePolicy) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
