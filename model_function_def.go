/*
 * Talon.One API
 *
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// FunctionDef struct for FunctionDef
type FunctionDef struct {
	// The function name used in Talang.
	Name string `json:"name"`
	// The type of this function argument.
	Type string `json:"type"`
	// A short description of the function.
	Description *string `json:"description,omitempty"`
	// Extended help text for the function.
	Help *string `json:"help,omitempty"`
	// An array of argument definitions.
	Args []FuncArgDef `json:"args"`
}

// GetName returns the Name field value
func (o *FunctionDef) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *FunctionDef) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *FunctionDef) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// SetType sets field value
func (o *FunctionDef) SetType(v string) {
	o.Type = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FunctionDef) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FunctionDef) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FunctionDef) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FunctionDef) SetDescription(v string) {
	o.Description = &v
}

// GetHelp returns the Help field value if set, zero value otherwise.
func (o *FunctionDef) GetHelp() string {
	if o == nil || o.Help == nil {
		var ret string
		return ret
	}
	return *o.Help
}

// GetHelpOk returns a tuple with the Help field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FunctionDef) GetHelpOk() (string, bool) {
	if o == nil || o.Help == nil {
		var ret string
		return ret, false
	}
	return *o.Help, true
}

// HasHelp returns a boolean if a field has been set.
func (o *FunctionDef) HasHelp() bool {
	if o != nil && o.Help != nil {
		return true
	}

	return false
}

// SetHelp gets a reference to the given string and assigns it to the Help field.
func (o *FunctionDef) SetHelp(v string) {
	o.Help = &v
}

// GetArgs returns the Args field value
func (o *FunctionDef) GetArgs() []FuncArgDef {
	if o == nil {
		var ret []FuncArgDef
		return ret
	}

	return o.Args
}

// SetArgs sets field value
func (o *FunctionDef) SetArgs(v []FuncArgDef) {
	o.Args = v
}

type NullableFunctionDef struct {
	Value        FunctionDef
	ExplicitNull bool
}

func (v NullableFunctionDef) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableFunctionDef) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
