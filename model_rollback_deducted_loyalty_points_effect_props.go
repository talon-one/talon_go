/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// RollbackDeductedLoyaltyPointsEffectProps The properties specific to the \"rollbackDeductedLoyaltyPoints\" effect. This effect is triggered whenever a previously closed session is cancelled and a deductLoyaltyPoints effect was revoked.
type RollbackDeductedLoyaltyPointsEffectProps struct {
	// The ID of the loyalty program where these points were reimbursed.
	ProgramId int32 `json:"programId"`
	// The ID of the subledger within the loyalty program where these points were reimbursed.
	SubLedgerId string `json:"subLedgerId"`
	// The amount of reimbursed points that were added.
	Value float32 `json:"value"`
	// The user for whom these points were reimbursed.
	RecipientIntegrationId string `json:"recipientIntegrationId"`
	// Date after which the reimbursed points will be valid.
	StartDate *time.Time `json:"startDate,omitempty"`
	// Date after which the reimbursed points will expire.
	ExpiryDate *time.Time `json:"expiryDate,omitempty"`
	// The identifier of 'addition' entries added to the ledger as the `deductLoyaltyPoints` effect is rolled back.
	TransactionUUID string `json:"transactionUUID"`
	// The card on which these points were added.
	CardIdentifier *string `json:"cardIdentifier,omitempty"`
}

// GetProgramId returns the ProgramId field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetProgramId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProgramId
}

// SetProgramId sets field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetProgramId(v int32) {
	o.ProgramId = v
}

// GetSubLedgerId returns the SubLedgerId field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetSubLedgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubLedgerId
}

// SetSubLedgerId sets field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetSubLedgerId(v string) {
	o.SubLedgerId = v
}

// GetValue returns the Value field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// SetValue sets field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetValue(v float32) {
	o.Value = v
}

// GetRecipientIntegrationId returns the RecipientIntegrationId field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetRecipientIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientIntegrationId
}

// SetRecipientIntegrationId sets field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetRecipientIntegrationId(v string) {
	o.RecipientIntegrationId = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetStartDateOk() (time.Time, bool) {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret, false
	}
	return *o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *RollbackDeductedLoyaltyPointsEffectProps) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetExpiryDate() time.Time {
	if o == nil || o.ExpiryDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetExpiryDateOk() (time.Time, bool) {
	if o == nil || o.ExpiryDate == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *RollbackDeductedLoyaltyPointsEffectProps) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate != nil {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given time.Time and assigns it to the ExpiryDate field.
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetExpiryDate(v time.Time) {
	o.ExpiryDate = &v
}

// GetTransactionUUID returns the TransactionUUID field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetTransactionUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionUUID
}

// SetTransactionUUID sets field value
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetTransactionUUID(v string) {
	o.TransactionUUID = v
}

// GetCardIdentifier returns the CardIdentifier field value if set, zero value otherwise.
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetCardIdentifier() string {
	if o == nil || o.CardIdentifier == nil {
		var ret string
		return ret
	}
	return *o.CardIdentifier
}

// GetCardIdentifierOk returns a tuple with the CardIdentifier field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RollbackDeductedLoyaltyPointsEffectProps) GetCardIdentifierOk() (string, bool) {
	if o == nil || o.CardIdentifier == nil {
		var ret string
		return ret, false
	}
	return *o.CardIdentifier, true
}

// HasCardIdentifier returns a boolean if a field has been set.
func (o *RollbackDeductedLoyaltyPointsEffectProps) HasCardIdentifier() bool {
	if o != nil && o.CardIdentifier != nil {
		return true
	}

	return false
}

// SetCardIdentifier gets a reference to the given string and assigns it to the CardIdentifier field.
func (o *RollbackDeductedLoyaltyPointsEffectProps) SetCardIdentifier(v string) {
	o.CardIdentifier = &v
}

type NullableRollbackDeductedLoyaltyPointsEffectProps struct {
	Value        RollbackDeductedLoyaltyPointsEffectProps
	ExplicitNull bool
}

func (v NullableRollbackDeductedLoyaltyPointsEffectProps) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableRollbackDeductedLoyaltyPointsEffectProps) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
