/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// RoleV2PermissionsRoles struct for RoleV2PermissionsRoles
type RoleV2PermissionsRoles struct {
	Applications         *map[string]RoleV2ApplicationDetails `json:"applications,omitempty"`
	LoyaltyPrograms      *map[string]string                   `json:"loyaltyPrograms,omitempty"`
	CampaignAccessGroups *map[string]string                   `json:"campaignAccessGroups,omitempty"`
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *RoleV2PermissionsRoles) GetApplications() map[string]RoleV2ApplicationDetails {
	if o == nil || o.Applications == nil {
		var ret map[string]RoleV2ApplicationDetails
		return ret
	}
	return *o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RoleV2PermissionsRoles) GetApplicationsOk() (map[string]RoleV2ApplicationDetails, bool) {
	if o == nil || o.Applications == nil {
		var ret map[string]RoleV2ApplicationDetails
		return ret, false
	}
	return *o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *RoleV2PermissionsRoles) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given map[string]RoleV2ApplicationDetails and assigns it to the Applications field.
func (o *RoleV2PermissionsRoles) SetApplications(v map[string]RoleV2ApplicationDetails) {
	o.Applications = &v
}

// GetLoyaltyPrograms returns the LoyaltyPrograms field value if set, zero value otherwise.
func (o *RoleV2PermissionsRoles) GetLoyaltyPrograms() map[string]string {
	if o == nil || o.LoyaltyPrograms == nil {
		var ret map[string]string
		return ret
	}
	return *o.LoyaltyPrograms
}

// GetLoyaltyProgramsOk returns a tuple with the LoyaltyPrograms field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RoleV2PermissionsRoles) GetLoyaltyProgramsOk() (map[string]string, bool) {
	if o == nil || o.LoyaltyPrograms == nil {
		var ret map[string]string
		return ret, false
	}
	return *o.LoyaltyPrograms, true
}

// HasLoyaltyPrograms returns a boolean if a field has been set.
func (o *RoleV2PermissionsRoles) HasLoyaltyPrograms() bool {
	if o != nil && o.LoyaltyPrograms != nil {
		return true
	}

	return false
}

// SetLoyaltyPrograms gets a reference to the given map[string]string and assigns it to the LoyaltyPrograms field.
func (o *RoleV2PermissionsRoles) SetLoyaltyPrograms(v map[string]string) {
	o.LoyaltyPrograms = &v
}

// GetCampaignAccessGroups returns the CampaignAccessGroups field value if set, zero value otherwise.
func (o *RoleV2PermissionsRoles) GetCampaignAccessGroups() map[string]string {
	if o == nil || o.CampaignAccessGroups == nil {
		var ret map[string]string
		return ret
	}
	return *o.CampaignAccessGroups
}

// GetCampaignAccessGroupsOk returns a tuple with the CampaignAccessGroups field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RoleV2PermissionsRoles) GetCampaignAccessGroupsOk() (map[string]string, bool) {
	if o == nil || o.CampaignAccessGroups == nil {
		var ret map[string]string
		return ret, false
	}
	return *o.CampaignAccessGroups, true
}

// HasCampaignAccessGroups returns a boolean if a field has been set.
func (o *RoleV2PermissionsRoles) HasCampaignAccessGroups() bool {
	if o != nil && o.CampaignAccessGroups != nil {
		return true
	}

	return false
}

// SetCampaignAccessGroups gets a reference to the given map[string]string and assigns it to the CampaignAccessGroups field.
func (o *RoleV2PermissionsRoles) SetCampaignAccessGroups(v map[string]string) {
	o.CampaignAccessGroups = &v
}

type NullableRoleV2PermissionsRoles struct {
	Value        RoleV2PermissionsRoles
	ExplicitNull bool
}

func (v NullableRoleV2PermissionsRoles) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableRoleV2PermissionsRoles) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
