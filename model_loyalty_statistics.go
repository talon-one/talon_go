/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// LoyaltyStatistics
type LoyaltyStatistics struct {
	// Date at which data point was collected.
	Date time.Time `json:"date"`
	// Total of active points for this loyalty program.
	TotalActivePoints float32 `json:"totalActivePoints"`
	// Total of pending points for this loyalty program.
	TotalPendingPoints float32 `json:"totalPendingPoints"`
	// Total of spent points for this loyalty program.
	TotalSpentPoints float32 `json:"totalSpentPoints"`
	// Total of expired points for this loyalty program.
	TotalExpiredPoints float32 `json:"totalExpiredPoints"`
	// Number of loyalty program members.
	TotalMembers float32 `json:"totalMembers"`
	// Number of members who joined on this day.
	NewMembers   float32                         `json:"newMembers"`
	SpentPoints  LoyaltyDashboardPointsBreakdown `json:"spentPoints"`
	EarnedPoints LoyaltyDashboardPointsBreakdown `json:"earnedPoints"`
}

// GetDate returns the Date field value
func (o *LoyaltyStatistics) GetDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Date
}

// SetDate sets field value
func (o *LoyaltyStatistics) SetDate(v time.Time) {
	o.Date = v
}

// GetTotalActivePoints returns the TotalActivePoints field value
func (o *LoyaltyStatistics) GetTotalActivePoints() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalActivePoints
}

// SetTotalActivePoints sets field value
func (o *LoyaltyStatistics) SetTotalActivePoints(v float32) {
	o.TotalActivePoints = v
}

// GetTotalPendingPoints returns the TotalPendingPoints field value
func (o *LoyaltyStatistics) GetTotalPendingPoints() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalPendingPoints
}

// SetTotalPendingPoints sets field value
func (o *LoyaltyStatistics) SetTotalPendingPoints(v float32) {
	o.TotalPendingPoints = v
}

// GetTotalSpentPoints returns the TotalSpentPoints field value
func (o *LoyaltyStatistics) GetTotalSpentPoints() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalSpentPoints
}

// SetTotalSpentPoints sets field value
func (o *LoyaltyStatistics) SetTotalSpentPoints(v float32) {
	o.TotalSpentPoints = v
}

// GetTotalExpiredPoints returns the TotalExpiredPoints field value
func (o *LoyaltyStatistics) GetTotalExpiredPoints() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalExpiredPoints
}

// SetTotalExpiredPoints sets field value
func (o *LoyaltyStatistics) SetTotalExpiredPoints(v float32) {
	o.TotalExpiredPoints = v
}

// GetTotalMembers returns the TotalMembers field value
func (o *LoyaltyStatistics) GetTotalMembers() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalMembers
}

// SetTotalMembers sets field value
func (o *LoyaltyStatistics) SetTotalMembers(v float32) {
	o.TotalMembers = v
}

// GetNewMembers returns the NewMembers field value
func (o *LoyaltyStatistics) GetNewMembers() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NewMembers
}

// SetNewMembers sets field value
func (o *LoyaltyStatistics) SetNewMembers(v float32) {
	o.NewMembers = v
}

// GetSpentPoints returns the SpentPoints field value
func (o *LoyaltyStatistics) GetSpentPoints() LoyaltyDashboardPointsBreakdown {
	if o == nil {
		var ret LoyaltyDashboardPointsBreakdown
		return ret
	}

	return o.SpentPoints
}

// SetSpentPoints sets field value
func (o *LoyaltyStatistics) SetSpentPoints(v LoyaltyDashboardPointsBreakdown) {
	o.SpentPoints = v
}

// GetEarnedPoints returns the EarnedPoints field value
func (o *LoyaltyStatistics) GetEarnedPoints() LoyaltyDashboardPointsBreakdown {
	if o == nil {
		var ret LoyaltyDashboardPointsBreakdown
		return ret
	}

	return o.EarnedPoints
}

// SetEarnedPoints sets field value
func (o *LoyaltyStatistics) SetEarnedPoints(v LoyaltyDashboardPointsBreakdown) {
	o.EarnedPoints = v
}

type NullableLoyaltyStatistics struct {
	Value        LoyaltyStatistics
	ExplicitNull bool
}

func (v NullableLoyaltyStatistics) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLoyaltyStatistics) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
