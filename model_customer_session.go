/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// CustomerSession
type CustomerSession struct {
	// The integration ID set by your integration layer.
	IntegrationId string `json:"integrationId"`
	// The time this entity was created.
	Created time.Time `json:"created"`
	// The ID of the application that owns this entity.
	ApplicationId int32 `json:"applicationId"`
	// ID of the customer profile set by your integration layer.  **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
	ProfileId string `json:"profileId"`
	// Any coupon code entered.
	Coupon string `json:"coupon"`
	// Any referral code entered.
	Referral string `json:"referral"`
	// Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:  1. `open` → `closed` 2. `open` → `cancelled` 3. `closed` → `cancelled` or `partially_returned` 4. `partially_returned` → `cancelled`  For more information, see [Customer session states](https://docs.talon.one/docs/dev/concepts/entities#customer-session).
	State string `json:"state"`
	// Serialized JSON representation.
	CartItems []CartItem `json:"cartItems"`
	// Session custom identifiers that you can set limits on or use inside your rules.  For example, you can use IP addresses as identifiers to potentially identify devices and limit discounts abuse in case of customers creating multiple accounts. See the [tutorial](https://docs.talon.one/docs/dev/tutorials/using-identifiers).
	Identifiers *[]string `json:"identifiers,omitempty"`
	// The total sum of the cart in one session.
	Total float32 `json:"total"`
	// A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
	Attributes map[string]interface{} `json:"attributes"`
	// Indicates whether this is the first session for the customer's profile. Will always be true for anonymous sessions.
	FirstSession bool `json:"firstSession"`
	// A map of labelled discount values, values will be in the same currency as the application associated with the session.
	Discounts map[string]float32 `json:"discounts"`
	// Timestamp of the most recent event received on this session.
	Updated time.Time `json:"updated"`
}

// GetIntegrationId returns the IntegrationId field value
func (o *CustomerSession) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// SetIntegrationId sets field value
func (o *CustomerSession) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetCreated returns the Created field value
func (o *CustomerSession) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *CustomerSession) SetCreated(v time.Time) {
	o.Created = v
}

// GetApplicationId returns the ApplicationId field value
func (o *CustomerSession) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// SetApplicationId sets field value
func (o *CustomerSession) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetProfileId returns the ProfileId field value
func (o *CustomerSession) GetProfileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileId
}

// SetProfileId sets field value
func (o *CustomerSession) SetProfileId(v string) {
	o.ProfileId = v
}

// GetCoupon returns the Coupon field value
func (o *CustomerSession) GetCoupon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Coupon
}

// SetCoupon sets field value
func (o *CustomerSession) SetCoupon(v string) {
	o.Coupon = v
}

// GetReferral returns the Referral field value
func (o *CustomerSession) GetReferral() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Referral
}

// SetReferral sets field value
func (o *CustomerSession) SetReferral(v string) {
	o.Referral = v
}

// GetState returns the State field value
func (o *CustomerSession) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// SetState sets field value
func (o *CustomerSession) SetState(v string) {
	o.State = v
}

// GetCartItems returns the CartItems field value
func (o *CustomerSession) GetCartItems() []CartItem {
	if o == nil {
		var ret []CartItem
		return ret
	}

	return o.CartItems
}

// SetCartItems sets field value
func (o *CustomerSession) SetCartItems(v []CartItem) {
	o.CartItems = v
}

// GetIdentifiers returns the Identifiers field value if set, zero value otherwise.
func (o *CustomerSession) GetIdentifiers() []string {
	if o == nil || o.Identifiers == nil {
		var ret []string
		return ret
	}
	return *o.Identifiers
}

// GetIdentifiersOk returns a tuple with the Identifiers field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSession) GetIdentifiersOk() ([]string, bool) {
	if o == nil || o.Identifiers == nil {
		var ret []string
		return ret, false
	}
	return *o.Identifiers, true
}

// HasIdentifiers returns a boolean if a field has been set.
func (o *CustomerSession) HasIdentifiers() bool {
	if o != nil && o.Identifiers != nil {
		return true
	}

	return false
}

// SetIdentifiers gets a reference to the given []string and assigns it to the Identifiers field.
func (o *CustomerSession) SetIdentifiers(v []string) {
	o.Identifiers = &v
}

// GetTotal returns the Total field value
func (o *CustomerSession) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// SetTotal sets field value
func (o *CustomerSession) SetTotal(v float32) {
	o.Total = v
}

// GetAttributes returns the Attributes field value
func (o *CustomerSession) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// SetAttributes sets field value
func (o *CustomerSession) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetFirstSession returns the FirstSession field value
func (o *CustomerSession) GetFirstSession() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FirstSession
}

// SetFirstSession sets field value
func (o *CustomerSession) SetFirstSession(v bool) {
	o.FirstSession = v
}

// GetDiscounts returns the Discounts field value
func (o *CustomerSession) GetDiscounts() map[string]float32 {
	if o == nil {
		var ret map[string]float32
		return ret
	}

	return o.Discounts
}

// SetDiscounts sets field value
func (o *CustomerSession) SetDiscounts(v map[string]float32) {
	o.Discounts = v
}

// GetUpdated returns the Updated field value
func (o *CustomerSession) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// SetUpdated sets field value
func (o *CustomerSession) SetUpdated(v time.Time) {
	o.Updated = v
}

type NullableCustomerSession struct {
	Value        CustomerSession
	ExplicitNull bool
}

func (v NullableCustomerSession) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCustomerSession) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
