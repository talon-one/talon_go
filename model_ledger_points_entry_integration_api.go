/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// LedgerPointsEntryIntegrationApi Loyalty profile points with start and expiry dates.
type LedgerPointsEntryIntegrationApi struct {
	// ID of the transaction that adds loyalty points.
	Id int32 `json:"id"`
	// Date and time the loyalty points were added.
	Created time.Time `json:"created"`
	// ID of the loyalty program.
	ProgramId int32 `json:"programId"`
	// ID of the customer session where points were added.
	CustomerSessionId *string `json:"customerSessionId,omitempty"`
	// Name or reason of the transaction that adds loyalty points.
	Name string `json:"name"`
	// When points become active. Possible values:   - `immediate`: Points are active immediately.   - `timestamp value`: Points become active at a given date and time. 
	StartDate string `json:"startDate"`
	// Date when points expire. Possible values are:   - `unlimited`: Points have no expiration date.   - `timestamp value`: Points expire on the given date and time. 
	ExpiryDate string `json:"expiryDate"`
	// ID of the subledger.
	SubledgerId string `json:"subledgerId"`
	// Amount of loyalty points added in the transaction.
	Amount float32 `json:"amount"`
}

// GetId returns the Id field value
func (o *LedgerPointsEntryIntegrationApi) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *LedgerPointsEntryIntegrationApi) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *LedgerPointsEntryIntegrationApi) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *LedgerPointsEntryIntegrationApi) SetCreated(v time.Time) {
	o.Created = v
}

// GetProgramId returns the ProgramId field value
func (o *LedgerPointsEntryIntegrationApi) GetProgramId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProgramId
}

// SetProgramId sets field value
func (o *LedgerPointsEntryIntegrationApi) SetProgramId(v int32) {
	o.ProgramId = v
}

// GetCustomerSessionId returns the CustomerSessionId field value if set, zero value otherwise.
func (o *LedgerPointsEntryIntegrationApi) GetCustomerSessionId() string {
	if o == nil || o.CustomerSessionId == nil {
		var ret string
		return ret
	}
	return *o.CustomerSessionId
}

// GetCustomerSessionIdOk returns a tuple with the CustomerSessionId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LedgerPointsEntryIntegrationApi) GetCustomerSessionIdOk() (string, bool) {
	if o == nil || o.CustomerSessionId == nil {
		var ret string
		return ret, false
	}
	return *o.CustomerSessionId, true
}

// HasCustomerSessionId returns a boolean if a field has been set.
func (o *LedgerPointsEntryIntegrationApi) HasCustomerSessionId() bool {
	if o != nil && o.CustomerSessionId != nil {
		return true
	}

	return false
}

// SetCustomerSessionId gets a reference to the given string and assigns it to the CustomerSessionId field.
func (o *LedgerPointsEntryIntegrationApi) SetCustomerSessionId(v string) {
	o.CustomerSessionId = &v
}

// GetName returns the Name field value
func (o *LedgerPointsEntryIntegrationApi) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *LedgerPointsEntryIntegrationApi) SetName(v string) {
	o.Name = v
}

// GetStartDate returns the StartDate field value
func (o *LedgerPointsEntryIntegrationApi) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// SetStartDate sets field value
func (o *LedgerPointsEntryIntegrationApi) SetStartDate(v string) {
	o.StartDate = v
}

// GetExpiryDate returns the ExpiryDate field value
func (o *LedgerPointsEntryIntegrationApi) GetExpiryDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpiryDate
}

// SetExpiryDate sets field value
func (o *LedgerPointsEntryIntegrationApi) SetExpiryDate(v string) {
	o.ExpiryDate = v
}

// GetSubledgerId returns the SubledgerId field value
func (o *LedgerPointsEntryIntegrationApi) GetSubledgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubledgerId
}

// SetSubledgerId sets field value
func (o *LedgerPointsEntryIntegrationApi) SetSubledgerId(v string) {
	o.SubledgerId = v
}

// GetAmount returns the Amount field value
func (o *LedgerPointsEntryIntegrationApi) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// SetAmount sets field value
func (o *LedgerPointsEntryIntegrationApi) SetAmount(v float32) {
	o.Amount = v
}

type NullableLedgerPointsEntryIntegrationApi struct {
	Value LedgerPointsEntryIntegrationApi
	ExplicitNull bool
}

func (v NullableLedgerPointsEntryIntegrationApi) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLedgerPointsEntryIntegrationApi) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
