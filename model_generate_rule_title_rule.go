/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// GenerateRuleTitleRule struct for GenerateRuleTitleRule
type GenerateRuleTitleRule struct {
	// An array of effectful Talang expressions in arrays that will be evaluated when a rule matches.
	Effects [][]interface{} `json:"effects,omitempty"`
	// A Talang expression that will be evaluated in the context of the given event.
	Condition []interface{} `json:"condition,omitempty"`
}

// GetEffects returns the Effects field value if set, zero value otherwise.
func (o *GenerateRuleTitleRule) GetEffects() [][]interface{} {
	if o == nil || o.Effects == nil {
		var ret [][]interface{}
		return ret
	}
	return o.Effects
}

// GetEffectsOk returns a tuple with the Effects field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRuleTitleRule) GetEffectsOk() ([][]interface{}, bool) {
	if o == nil || o.Effects == nil {
		var ret [][]interface{}
		return ret, false
	}
	return o.Effects, true
}

// HasEffects returns a boolean if a field has been set.
func (o *GenerateRuleTitleRule) HasEffects() bool {
	if o != nil && o.Effects != nil {
		return true
	}

	return false
}

// SetEffects gets a reference to the given []map[string]interface{} and assigns it to the Effects field.
func (o *GenerateRuleTitleRule) SetEffects(v [][]interface{}) {
	o.Effects = v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *GenerateRuleTitleRule) GetCondition() []interface{} {
	if o == nil || o.Condition == nil {
		var ret []interface{}
		return ret
	}
	return o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *GenerateRuleTitleRule) GetConditionOk() ([]interface{}, bool) {
	if o == nil || o.Condition == nil {
		var ret []interface{}
		return ret, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *GenerateRuleTitleRule) HasCondition() bool {
	if o != nil && o.Condition != nil {
		return true
	}

	return false
}

// SetCondition gets a reference to the given []map[string]interface{} and assigns it to the Condition field.
func (o *GenerateRuleTitleRule) SetCondition(v []interface{}) {
	o.Condition = v
}

type NullableGenerateRuleTitleRule struct {
	Value        GenerateRuleTitleRule
	ExplicitNull bool
}

func (v NullableGenerateRuleTitleRule) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableGenerateRuleTitleRule) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
