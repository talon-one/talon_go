/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// LoyaltyProgramEntity struct for LoyaltyProgramEntity
type LoyaltyProgramEntity struct {
	// The ID of the loyalty program that owns this entity.
	ProgramID int32 `json:"programID"`
	// The integration name of the loyalty program that owns this entity.
	ProgramName *string `json:"programName,omitempty"`
	// The Campaign Manager-displayed name of the loyalty program that owns this entity.
	ProgramTitle *string `json:"programTitle,omitempty"`
}

// GetProgramID returns the ProgramID field value
func (o *LoyaltyProgramEntity) GetProgramID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProgramID
}

// SetProgramID sets field value
func (o *LoyaltyProgramEntity) SetProgramID(v int32) {
	o.ProgramID = v
}

// GetProgramName returns the ProgramName field value if set, zero value otherwise.
func (o *LoyaltyProgramEntity) GetProgramName() string {
	if o == nil || o.ProgramName == nil {
		var ret string
		return ret
	}
	return *o.ProgramName
}

// GetProgramNameOk returns a tuple with the ProgramName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LoyaltyProgramEntity) GetProgramNameOk() (string, bool) {
	if o == nil || o.ProgramName == nil {
		var ret string
		return ret, false
	}
	return *o.ProgramName, true
}

// HasProgramName returns a boolean if a field has been set.
func (o *LoyaltyProgramEntity) HasProgramName() bool {
	if o != nil && o.ProgramName != nil {
		return true
	}

	return false
}

// SetProgramName gets a reference to the given string and assigns it to the ProgramName field.
func (o *LoyaltyProgramEntity) SetProgramName(v string) {
	o.ProgramName = &v
}

// GetProgramTitle returns the ProgramTitle field value if set, zero value otherwise.
func (o *LoyaltyProgramEntity) GetProgramTitle() string {
	if o == nil || o.ProgramTitle == nil {
		var ret string
		return ret
	}
	return *o.ProgramTitle
}

// GetProgramTitleOk returns a tuple with the ProgramTitle field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LoyaltyProgramEntity) GetProgramTitleOk() (string, bool) {
	if o == nil || o.ProgramTitle == nil {
		var ret string
		return ret, false
	}
	return *o.ProgramTitle, true
}

// HasProgramTitle returns a boolean if a field has been set.
func (o *LoyaltyProgramEntity) HasProgramTitle() bool {
	if o != nil && o.ProgramTitle != nil {
		return true
	}

	return false
}

// SetProgramTitle gets a reference to the given string and assigns it to the ProgramTitle field.
func (o *LoyaltyProgramEntity) SetProgramTitle(v string) {
	o.ProgramTitle = &v
}

type NullableLoyaltyProgramEntity struct {
	Value        LoyaltyProgramEntity
	ExplicitNull bool
}

func (v NullableLoyaltyProgramEntity) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLoyaltyProgramEntity) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
