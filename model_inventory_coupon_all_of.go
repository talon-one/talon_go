/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// InventoryCouponAllOf struct for InventoryCouponAllOf
type InventoryCouponAllOf struct {
	// The number of times the coupon was redeemed by the profile.
	ProfileRedemptionCount int32 `json:"profileRedemptionCount"`
	// Can be:  - `active`: The coupon can be used. It is a reserved coupon that is not pending, used, or expired, and it has a non-exhausted limit counter.    **Note:** This coupon state is returned for [scheduled campaigns](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-schedule), but the coupon cannot be used until the campaign is **running**. - `used`: The coupon has been redeemed and cannot be used again. It is not pending and has reached its redemption limit or was redeemed by the profile before expiration. - `expired`: The coupon was never redeemed, and it is now expired. It is non-pending, non-active, and non-used by the profile. - `pending`: The coupon will be usable in the future. - `disabled`: The coupon is part of a non-active campaign. 
	State string `json:"state"`
}

// GetProfileRedemptionCount returns the ProfileRedemptionCount field value
func (o *InventoryCouponAllOf) GetProfileRedemptionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProfileRedemptionCount
}

// SetProfileRedemptionCount sets field value
func (o *InventoryCouponAllOf) SetProfileRedemptionCount(v int32) {
	o.ProfileRedemptionCount = v
}

// GetState returns the State field value
func (o *InventoryCouponAllOf) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// SetState sets field value
func (o *InventoryCouponAllOf) SetState(v string) {
	o.State = v
}

type NullableInventoryCouponAllOf struct {
	Value InventoryCouponAllOf
	ExplicitNull bool
}

func (v NullableInventoryCouponAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableInventoryCouponAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
