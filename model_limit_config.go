/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// LimitConfig struct for LimitConfig
type LimitConfig struct {
	// The limitable action to which this limit applies. For example: - `setDiscount` - `setDiscountEffect` - `redeemCoupon` - `createCoupon`
	Action string `json:"action"`
	// The value to set for the limit.
	Limit float32 `json:"limit"`
	// The period on which the budget limit recurs.
	Period *string `json:"period,omitempty"`
	// The entity that this limit applies to.
	Entities []string `json:"entities"`
}

// GetAction returns the Action field value
func (o *LimitConfig) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// SetAction sets field value
func (o *LimitConfig) SetAction(v string) {
	o.Action = v
}

// GetLimit returns the Limit field value
func (o *LimitConfig) GetLimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Limit
}

// SetLimit sets field value
func (o *LimitConfig) SetLimit(v float32) {
	o.Limit = v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *LimitConfig) GetPeriod() string {
	if o == nil || o.Period == nil {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LimitConfig) GetPeriodOk() (string, bool) {
	if o == nil || o.Period == nil {
		var ret string
		return ret, false
	}
	return *o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *LimitConfig) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *LimitConfig) SetPeriod(v string) {
	o.Period = &v
}

// GetEntities returns the Entities field value
func (o *LimitConfig) GetEntities() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Entities
}

// SetEntities sets field value
func (o *LimitConfig) SetEntities(v []string) {
	o.Entities = v
}

type NullableLimitConfig struct {
	Value        LimitConfig
	ExplicitNull bool
}

func (v NullableLimitConfig) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLimitConfig) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
