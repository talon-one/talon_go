/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// MessageLogEntries struct for MessageLogEntries
type MessageLogEntries struct {
	// The next value in the database.  **Note:** If this value is not present, it means that there are no more values in the database for this combination of request parameters. 
	NextCursor *string `json:"nextCursor,omitempty"`
	// List of message logs.
	Data []MessageLogEntry `json:"data"`
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *MessageLogEntries) GetNextCursor() string {
	if o == nil || o.NextCursor == nil {
		var ret string
		return ret
	}
	return *o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *MessageLogEntries) GetNextCursorOk() (string, bool) {
	if o == nil || o.NextCursor == nil {
		var ret string
		return ret, false
	}
	return *o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *MessageLogEntries) HasNextCursor() bool {
	if o != nil && o.NextCursor != nil {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *MessageLogEntries) SetNextCursor(v string) {
	o.NextCursor = &v
}

// GetData returns the Data field value
func (o *MessageLogEntries) GetData() []MessageLogEntry {
	if o == nil {
		var ret []MessageLogEntry
		return ret
	}

	return o.Data
}

// SetData sets field value
func (o *MessageLogEntries) SetData(v []MessageLogEntry) {
	o.Data = v
}

type NullableMessageLogEntries struct {
	Value MessageLogEntries
	ExplicitNull bool
}

func (v NullableMessageLogEntries) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableMessageLogEntries) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
