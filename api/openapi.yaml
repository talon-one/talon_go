openapi: 3.0.1
info:
  description: |
    Use the Talon.One API to integrate with your application and to
    manage applications and campaigns:

    - Use the operations in the [Integration API section](#integration-api)
    are used to integrate with our platform
    - Use the operation in the [Management API section](#management-api) to
    manage applications and campaigns.

    ## Determining the base URL of the endpoints

    The API is available at the same hostname as your Campaign Manager deployment.
    For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`,
    the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint
    is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
  title: Talon.One API
  version: 1.0.0
servers:
- url: https://yourbaseurl.talon.one/
security:
- manager_auth: []
tags:
- description: |
    Represents the API used to send [Integration API](https://docs.talon.one/docs/dev/integration-api/overview) requests to a given Application.
  name: API keys
- description: |
    Operations for updating account information such as billing email addresses, inviting users, etc.
  name: Accounts and users
- description: |
    An extra fee applied to the cart. For example, shipping fees, or processing fees. See [the docs](https://docs.talon.one/docs/product/account/dev-tools/managing-additional-costs).
  name: Additional costs
- description: |
    Analytics are used to retrieve statistical data about the performance of campaigns within an application.
  name: Analytics
- description: |
    Represents an Application in the Campaign Manager, see the [docs](https://docs.talon.one/docs/product/applications/overview).
    It is also the target of every Integration API request to Talon.One.

    One Application can hold various API keys used for Integration API requests.

    You may have multiple Applications within one account,
    for example staging and production, or different international markets.
  name: Applications
- description: |
    Represents a piece of information related to one of the entities avaialbe in the Campaign Manager. Use
    them to create highly customized rules. See [the docs](https://docs.talon.one/docs/product/account/dev-tools/managing-attributes).
  name: Attributes
- description: |
    Represents an arbitrary group of customer profiles. Audiences can be synced from Customer Data Platforms such as mParticle or created from scratch.
  name: Audiences
- description: |
    Represents the campaign groups users can create in their applications.
  name: Campaign groups
- description: |
    Represents templates used to generate campaigns from.
  name: Campaign templates
- description: |
    Campaigns are the primary resource used to control the behavior of the Talon.One Rule Engine. They combine rulesets, coupons, and limits into a single unit.
  name: Campaigns
- description: |
    Represents a catalog of cart items with unique SKUs. Cart item catalogs allow you to synchronize your entire inventory with Talon.One.
    See the [documentation](https://docs.talon.one/docs/product/account/dev-tools/managing-cart-item-catalogs).
  name: Catalogs
- description: |
    Represents a collection of arbitrary values that you can use inside rules. For example, a list of SKUs.
    See the [documentation](https://docs.talon.one/docs/product/campaigns/managing-collections/).
  name: Collections
- description: |
    Represents a configuration for the Campaign Manager.
  name: Config
- description: |
    Coupons are unique codes belonging to a particular campaign. They don't define any behavior on their own, instead the campaign ruleset can include rules that validate coupons and carry out particular effects.
  name: Coupons
- description: |
    Represents the custom effects that users can create.
  name: Custom effects
- description: |
    Represents the data of a customer, including sessions and events used for reporting and debugging in the Campaign Manager.
  name: Customer data
- description: |
    Represents the customer's information. For instance, their contact information.
  name: Customer profiles
- description: |
    Represents the data related to a customer session. Typically, a customer session is the value and content of the customer's cart.

    Sessions can be anonymous or linked to a customer profile and they have a life cycle from `open` to `closed`.
    In general, a session is closed when the customer completes the checkout step.

    Sessions are a key concept of Talon.One, we strongly recommend you read the [documentation about customer sessions](/docs/dev/concepts/entities#customer-session).
  name: Customer sessions
- description: |
    Represents a single occurrence of various customer actions. There are 2 versions:
    - For V1 events, each customer **session** contains one or more events. For example, updating a customer session records a `talon_session_updated` event.
    - For V2 events, each customer **profile** contains one or more events. For example, updating a customer session records a `talon_session_updated` event linked to the profile in question.
  name: Events
- description: |
    How we enable features in accounts.
  name: Feature flags
- description: |
    Represents a program that rewards customers with giveaways, such as free gift cards.
  name: Giveaways
- description: |
    Use the Integration API to push data to and retrieve data from Talon.One in real time.
    For more background information about this API, see [Integration API overview](/docs/dev/integration-api/overview)

    For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion
    rules. You can also create custom events to track specific actions that do not fit into the session data model.

    Ensure you [authenticate](#section/Authentication) to make requests to the API.

    <div class="redoc-section">
      <p class="title">Are you looking for a different API?</p>

      If you need the API to:

      - Interact with the Campaign Manager for backoffice operations, see [the Management API reference docs](https://docs.talon.one/management-api).
      - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).

    </div>

    # Authentication

    <SecurityDefinitions />
  name: Integration API
- description: |
    Operations to query the Talon.One logs. They contain all incoming and outgoing requests.
  name: Logs
- description: |
    Represents a loyalty program, or concepts related to them, such as loyalty cards. See [the docs](https://docs.talon.one/docs/product/loyalty-programs/overview).
  name: Loyalty
- description: |
    The Talon.One Management API is the channel between the Campaign Manager and the Rule Engine.
    For more background information about this API, see [Management API overview](/docs/dev/management-api/overview)

    Use the Management API to programmatically do what the Campaign Manager does.
    For example, use it for management purposes and backoffice systems.

    Ensure you [authenticate](#section/Authentication) to make requests to the API.

    **Warnings:**
    - This API is not meant to be used in real-time integrations that directly serve your end users.
    - This API supports a maximum of **3 requests per second** for each of these endpoints.

     <div class="redoc-section">
      <p class="title">Are you looking for a different API?</p>

      If you need the API to:

      - Integrate with Talon.One directly and send real-time data, see [the Integration API reference docs](https://docs.talon.one/integration-api).
      - Integrate with Talon.One from a CEP or CDP platform, see [the Third-party API reference docs](https://docs.talon.one/third-party-api).
      </p>
    </div>

    # Authentication

    <SecurityDefinitions />
  name: Management API
- description: |
    Represents a key to access specified endpoints of the Management API programmatically.
  name: Management keys
- description: |
    Represents the built-in webhooks that manage the outbound notifications.
  name: Notification webhooks
- description: |
    Represents the default notifications. Not to be confused with the outbound notifications relying on webhooks.
  name: Notifications
- description: |
    A referral is a code shared between a customer and a prospect.

    A referral is defined by:
    - an advocate: person who invited their friend via referral program.
    - a friend: person who receives the invite from an advocate.
    - a referral code: code to be redeemed by the advocate(s) once they referred their friend.
  name: Referrals
- description: |
    Represents a set of permissions assigned to a user.
  name: Roles
- description: |
    Represents the endpoints related to the SAML config used for SSO.
  name: SAML
- description: |
    Represents a session used for authentication purposes.
    Create one with the [Create session](#operation/createSession) endpoint.
  name: Sessions
- description: |
    Talang template operations.
  name: Talang templates
- description: |
    A way to send information from Talon.One to the URI of your choice. See [the docs](https://docs.talon.one/docs/dev/getting-started/webhooks).
  name: Webhooks
paths:
  /v2/customer_sessions/{customerSessionId}:
    get:
      description: |
        Get the details of the given customer session.

        You can get the same data via other endpoints that also apply changes, which can help you save requests and increase performance. See:

        - [Update customer session](#tag/Customer-sessions/operation/updateCustomerSessionV2)
        - [Update customer profile](#tag/Customer-profiles/operation/updateCustomerProfileV2)
      operationId: getCustomerSession
      parameters:
      - description: |
          The `integration ID` of the customer session. You set this ID when you create a customer session.

          You can see existing customer session integration IDs in the Campaign Manager's **Sessions** menu, or via the
          [List Application session endpoint](https://docs.talon.one/management-api/#operation/getApplicationSessions).
        in: path
        name: customerSessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationCustomerSessionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
      security:
      - api_key_v1: []
      summary: Get customer session
      tags:
      - integration
    put:
      description: |
        Update or create a [customer session](/docs/dev/concepts/entities#customer-session).
        For example, use this endpoint to share the content of a customer's cart with Talon.One and to check which
        promotion rules apply.

        **Note:** The currency for the session and the cart items in the session is the same as the
        Application that owns this session.

        ### Session management

        The Talon.One platform supports multiple simultaneous sessions for the same profile. If you have multiple ways of accessing the same Application you can either:

        - Track multiple independent sessions or,
        - Use the same session across all of them.

        You should share sessions when application access points share other state, such as the user's cart.
        If two points of access to the application have independent states, for example a user can have different
        items in their cart across the two) they should use independent customer session ID's.

        See more information and tips about session management in the [documentation](/docs/dev/concepts/entities#customer-session).

        ### Sessions and customer profiles

        - To link a session to a customer profile, set the `profileId` parameter in the request body to a customer profile's `integrationId`.
        - While you can create an anonymous session with `profileId=""`, we recommend you use a guest ID instead.

        **Note:** You do **not** have to create a customer profile first. If the specified profile does not exist, an empty profile is created automatically.

        <div class="redoc-section">
          <p class="title">Performance tips</p>

          Updating a customer session returns a response with the requested integration state. Use the `responseContent` property to save yourself extra API calls. For example, you can get
          the customer profile details directly without extra requests.

          For more information, see the [integration tutorial](https://docs.talon.one/docs/dev/tutorials/integrating-talon-one).
        </div>
      operationId: updateCustomerSessionV2
      parameters:
      - description: Indicates whether to persist the changes. Changes are ignored
          when `dry=true`.
        in: query
        name: dry
        schema:
          type: boolean
      - description: |
          The `integration ID` of the customer session. You set this ID when you create a customer session.

          You can see existing customer session integration IDs in the Campaign Manager's **Sessions** menu, or via the
          [List Application session endpoint](https://docs.talon.one/management-api/#operation/getApplicationSessions).
        in: path
        name: customerSessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationStateV2'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "409":
          content:
            application/json:
              schema:
                type: object
          description: Too many requests - Avoid parallel requests, see the [docs](/docs/dev/tutorials/integrating-talon-one/#managing-parallel-requests).
      security:
      - api_key_v1: []
      summary: Update customer session
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/customer_sessions/{customerSessionId}/returns:
    post:
      description: |
        Create a new return request for the specified cart items.

        This endpoint automatically changes the session state from `closed` to `partially_returned`.

        Its behavior depends on whether [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items)
        is enabled for the Application.

        **Note:** This will roll back any effects associated with these cart items. For more information, see
        [our documentation on session states](https://docs.talon.one/docs/dev/concepts/entities#customer-session-states)
        and [this tutorial](https://docs.talon.one/docs/dev/tutorials/partially-returning-a-session).
      operationId: returnCartItems
      parameters:
      - description: Indicates whether to persist the changes. Changes are ignored
          when `dry=true`.
        in: query
        name: dry
        schema:
          type: boolean
      - description: |
          The `integration ID` of the customer session. You set this ID when you create a customer session.

          You can see existing customer session integration IDs in the Campaign Manager's **Sessions** menu, or via the
          [List Application session endpoint](https://docs.talon.one/management-api/#operation/getApplicationSessions).
        in: path
        name: customerSessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnIntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationStateV2'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
      security:
      - api_key_v1: []
      summary: Return cart items
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/customer_profiles/{integrationId}:
    put:
      description: |
        Update or create a [Customer Profile](/docs/dev/concepts/entities#customer-profile). This endpoint triggers the Rule Builder.

        You can use this endpoint to:
        - Set attributes on the given customer profile. Ensure you create the attributes in the Campaign Manager, first.
        - Modify the audience the customer profile is a member of.

        <div class="redoc-section">
          <p class="title">Performance tips</p>

          Updating a customer profile returns a response with the requested integration state.

          You can use the `responseContent` property to save yourself extra API calls. For example, you can get
          the customer profile details directly without extra requests.
        </div>
      operationId: updateCustomerProfileV2
      parameters:
      - description: |
          The integration identifier for this customer profile. Must be:
          - Unique within the deployment.
          - Stable for the customer. Do not use an ID that the customer can update themselves. For example, you can use a database ID.

          Once set, you cannot update this identifier.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      - description: |
          Indicates whether to run the Rule Engine.

          If `true`, the response includes:
          - The effects generated by the triggered campaigns are returned in the `effects` property.
          - The created coupons and referral objects.

          If `false`:
          - The rules are not executed and the `effects` property is always empty.
          - The response time improves.
          - You cannot use `responseContent` in the body.
        in: query
        name: runRuleEngine
        schema:
          default: false
          type: boolean
      - description: |
          Indicates whether to persist the changes. Changes are ignored when `dry=true`.

          This property only works when `runRuleEngine=true`.
        in: query
        name: dry
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileIntegrationRequestV2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationStateV2'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "409":
          content:
            application/json:
              schema:
                type: object
          description: Too many requests - Avoid parallel requests, see the [docs](/docs/dev/tutorials/integrating-talon-one/#managing-parallel-requests).
      security:
      - api_key_v1: []
      summary: Update customer profile
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/customer_profiles:
    put:
      description: |
        Update (or create) up to 1000 [customer profiles](/docs/dev/concepts/entities#customer-profile) in 1 request.

        The `integrationId` must be any identifier that remains stable for
        the customer. Do not use an ID that the customer can update
        themselves. For example, you can use a database ID.

        A customer profile [can be linked to one or more sessions](/integration-api/#tag/Customer-sessions).
      operationId: updateCustomerProfilesV2
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomerProfileIntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleCustomerProfileIntegrationResponseV2'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
      security:
      - api_key_v1: []
      summary: Update multiple customer profiles
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audiences:
    post:
      description: |
        Create an audience. The audience can be created directly from scratch or can come from third party platforms.

        To create an audience from an existing audience from a [technology partner](https://docs.talon.one/docs/dev/technology-partners/overview):
        1. Set the `integration` property to `mparticle`, `segment` etc., depending on a third-party platform.
        1. Set `integrationId` to the ID of this audience in a third-party platform.

        To create an audience from an existing audience in another platform:
        1. Do not use the `integration` property.
        1. Set `integrationId` to the ID of this audience in the 3rd-party platform.

        To create an audience from scratch:
        1. Only set the `name` property.

        Once you create your first audience, audience-specific rule conditions are enabled in the Rule Builder.
      operationId: createAudienceV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAudience'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Conflict. An Audience with this ID already exists for this
            integration.
      security:
      - api_key_v1: []
      summary: Create audience
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audiences/{audienceId}:
    delete:
      description: |
        Delete an audience created by a third-party integration.

        **Warning:** This endpoint also removes any associations recorded between a customer profile and this audience.
      operationId: deleteAudienceV2
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Delete audience
      tags:
      - integration
    put:
      description: |
        Update the name of the given audience created by a third-party integration. Sending a request to this endpoint does **not** trigger the rule engine.

        To update the audience's members, use the [Update customer profile endpoint](#tag/Customer-profiles/operation/updateCustomerProfileV2).
      operationId: updateAudienceV2
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAudience'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: Update audience name
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audiences/{audienceId}/memberships:
    delete:
      description: |
        Remove all members from this audience.
      operationId: deleteAudienceMembershipsV2
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Delete audience memberships
      tags:
      - integration
  /v2/customer_audiences:
    post:
      description: |
        Update the specified customer profiles with the specified audiences. Use this endpoint
        when customers join or leave audiences.

        The limit of customer profiles per request is 1000.
      operationId: updateCustomerProfileAudiences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileAudienceRequest'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: Update multiple customer profiles' audiences
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audience_customers/{audienceId}/attributes:
    put:
      description: |
        Update the specified profile attributes to the provided values for all customers in the specified audience.
      operationId: updateAudienceCustomersAttributes
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: Update profile attributes for all customers in audience
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/events:
    post:
      description: |
        **Important:** This endpoint is **DEPRECATED**. Use [Track Event V2](https://docs.talon.one/integration-api/#tag/Events/operation/trackEventV2) instead.

        <blockquote>
         Triggers a custom event in a customer session. You can then check this event in your rules. **Important:** Talon.One offers a set of [built-in events](/docs/dev/concepts/events), ensure you do not create a custom event when you can use a built-in event.
         For example, use this endpoint to trigger an event when a user updates their payment information.

         Before using this endpoint, create your event as a custom attribute of type `event`.  See the [Developer docs](/docs/dev/concepts/events/#creating-a-custom-event).

         An event is always part of a session. If either the profile or the session does not exist,
         a new empty profile/session is created. If the specified session already exists, it must belong to the same `profileId` or an error will be returned.
        </blockquote>
      operationId: trackEvent
      parameters:
      - description: Indicates whether to persist the changes. Changes are ignored
          when `dry=true`.
        in: query
        name: dry
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEvent'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationState'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "409":
          content:
            application/json:
              schema:
                type: object
          description: Too many requests - Avoid parallel requests, see the [docs](/docs/dev/tutorials/integrating-talon-one/#managing-parallel-requests).
      security:
      - api_key_v1: []
      summary: Track event
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/events:
    post:
      description: |
        Triggers a custom event. You can then check this event in your rules.

        Talon.One offers a set of [built-in events](/docs/dev/concepts/events), ensure you do not create
        a custom event when you can use a built-in event.

        For example, use this endpoint to trigger an event when a customer shares a link to a product.
        See the [tutorial](https://docs.talon.one/docs/product/tutorials/referrals/incentivizing-product-link-sharing).

        **Important:**
        - `profileId` is required. An event V2 is associated with a customer profile.
        - Before using this endpoint, create your event as a custom attribute of type `event`.
        See the [Developer docs](/docs/dev/concepts/events/#creating-a-custom-event).
      operationId: trackEventV2
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      - description: Indicates whether to persist the changes. Changes are ignored
          when `dry=true`.
        in: query
        name: dry
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationEventV2Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationStateV2'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
      security:
      - api_key_v1: []
      summary: Track event V2
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/referrals:
    post:
      description: |
        Creates a referral code for an advocate. The code will be valid for the referral campaign for which is created, indicated in the `campaignId` parameter, and will be associated with the profile specified in the `advocateProfileIntegrationId` parameter as the advocate's profile.
      operationId: createReferral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReferral'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
      security:
      - api_key_v1: []
      summary: Create referral code for an advocate
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/referrals_for_multiple_advocates:
    post:
      description: |
        Creates unique referral codes for multiple advocates. The code will be valid for the referral campaign for which it is created, indicated in the `campaignId` parameter, and one referral code will be associated with one advocate using the profile specified in the `advocateProfileIntegrationId` parameter as the advocate's profile.
      operationId: createReferralsForMultipleAdvocates
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReferralsForMultipleAdvocates'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
          description: Created
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
      security:
      - api_key_v1: []
      summary: Create referral codes for multiple advocates
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/customer_data/{integrationId}:
    delete:
      description: |
        Delete all attributes on the customer profile and on entities that reference this customer profile.

        **Important:** To preserve performance, we recommend avoiding deleting customer data during peak-traffic hours.
      operationId: deleteCustomerData
      parameters:
      - description: |
          The integration ID of the customer profile. You can get the `integrationId` of a profile using:
          - A customer session integration Id with the [Update customer session endpoint](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2).
          - The Management API with the [List application's customers endpoint](https://docs.talon.one/management-api/#operation/getApplicationCustomers).
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: Delete customer's personal data
      tags:
      - integration
  /v1/coupon_reservations/{couponValue}:
    delete:
      description: |
        Remove all the coupon reservations from the provided customer profile integration IDs and the provided
        coupon code.
      operationId: deleteCouponReservation
      parameters:
      - description: The code of the coupon.
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponReservations'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: Delete coupon reservations
      tags:
      - integration
      x-codegen-request-body-name: body
    post:
      description: |
        Create a coupon reservation for specified customer profiles on the specified coupon.

        Reserving a coupon allows you to associate a coupon code to a given customer(s).
        You can then list the reserved coupons of a given customer
        with the [List customer data endpoint](/integration-api/#operation/getCustomerInventory).

        If a coupon gets created for a specific user, it will automatically show up in their coupons.

        When a user redeems a coupon, a reservation is automatically created after the redemption and
        the used coupon will be returned in the [List customer data endpoint](/integration-api/#operation/getCustomerInventory).

        **Important:**
        - This endpoint creates a **soft** reservation. _Any_ customer
          can use a reserved coupon code and proceed to checkout.
        - To create a hard reservation, use the
          [Create coupons](/management-api/#operation/createCoupons) or
          [Create coupons for multiple recipients](/management-api/#operation/createCouponsForMultipleRecipients) endpoints
          setting the `recipientsIntegrationId` property.

        For example, you can use this endpoint and `List customer data` to create a _coupon wallet_ by
        reserving coupon codes for a customer, and then displaying their coupon wallet
        when they visit your store.
      operationId: createCouponReservation
      parameters:
      - description: The code of the coupon.
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponReservations'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: Create coupon reservation
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/coupon_reservations/customerprofiles/{couponValue}:
    get:
      description: |
        Return all customers that have this coupon marked as reserved.

        Coupons are reserved in the following ways:
        - To create a soft reservation (any customer can use the coupon), use the [Create coupon reservation](#operation/createCouponReservation) endpoint.
        - To create a hard reservation (only the given customer can use the coupon), create a coupon in the Campaign Manager for a given `recipientIntegrationId` or use the [Create coupons](/management-api/#operation/createCoupons) or [Create coupons for multiple recipients](/management-api/#operation/createCouponsForMultipleRecipients) endpoints.
      operationId: getReservedCustomers
      parameters:
      - description: The code of the coupon.
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: List customers that have this coupon reserved
      tags:
      - integration
  /v1/customer_profiles/{integrationId}/inventory:
    get:
      description: |
        Return the customer inventory regarding entities referencing this customer profile's `integrationId`.

        Typical entities returned are: customer profile information, referral codes, loyalty points and reserved coupons.
        Reserved coupons also include redeemed coupons.

        You can also use this endpoint to get the projected loyalty balances in order to notify
        your customers about points that are about to expire, or to remind them how many points they have.
      operationId: getCustomerInventory
      parameters:
      - description: |
          The integration ID of the customer profile. You can get the `integrationId` of a profile using:
          - A customer session integration Id with the [Update customer session endpoint](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2).
          - The Management API with the [List application's customers endpoint](https://docs.talon.one/management-api/#operation/getApplicationCustomers).
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      - description: Set to `true` to include customer profile information in the
          response.
        in: query
        name: profile
        schema:
          type: boolean
      - description: Set to `true` to include referral information in the response.
        in: query
        name: referrals
        schema:
          type: boolean
      - description: Set to `true` to include coupon information in the response.
        in: query
        name: coupons
        schema:
          type: boolean
      - description: Set to `true` to include loyalty information in the response.
        in: query
        name: loyalty
        schema:
          type: boolean
      - description: Set to `true` to include giveaways information in the response.
        in: query
        name: giveaways
        schema:
          type: boolean
      - description: Set an end date to query the projected loyalty balances. You
          can project results up to 31 days from today.
        in: query
        name: loyaltyProjectionEndDate
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInventory'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: List customer data
      tags:
      - integration
  /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/transactions:
    get:
      description: |
        Retrieve paginated loyalty transaction logs for the given Integration ID in the specified loyalty program.
        You can filter transactions by date. If no filters are applied, the last 30 loyalty transactions for the given integration ID are returned.
      operationId: getLoyaltyTransactions
      parameters:
      - description: |
          Identifier of the loyalty program containing the loyalty card. You can get the ID with
          the [List loyalty programs endpoint](https://docs.talon.one/management-api/#operation/getLoyaltyPrograms).
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: integer
      - description: |
          The integration identifier for this customer profile. Must be:
          - Unique within the deployment.
          - Stable for the customer. Do not use an ID that the customer can update themselves. For example, you can use a database ID.

          Once set, you cannot update this identifier.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      - description: Time from which results are returned. It must be an RFC3339 timestamp
          string.
        in: query
        name: startDate
        schema:
          format: date-time
          type: string
      - description: Only return results older than this timestamp. It must be an
          RFC3339 timestamp string.
        in: query
        name: endDate
        schema:
          format: date-time
          type: string
      - description: The number of items in this response. When omitted, the maximum
          value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      security:
      - api_key_v1: []
      summary: Get loyalty ledger transaction logs
      tags:
      - integration
  /v1/applications:
    get:
      description: List all applications in the current account.
      operationId: getApplications
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: List applications
      tags:
      - management
  /v1/applications/{applicationId}:
    get:
      description: Get the application specified by the ID.
      operationId: getApplication
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
      summary: Get application
      tags:
      - management
  /v1/applications/{applicationId}/campaigns:
    get:
      description: |
        List the campaigns of the specified application that match your filter criteria.
      operationId: getCampaigns
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Campaigns that are expired.
          - `archived`: Campaigns that are archived.
          - `draft`: Campaigns that are drafts.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      - description: Filter results performing case-insensitive matching against the
          name of the campaign.
        in: query
        name: name
        schema:
          type: string
      - description: |
          Filter results performing case-insensitive matching against the tags of the campaign. When used in conjunction with the "name" query parameter, a logical OR will be performed to search both tags and name for the provided values
        in: query
        name: tags
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the campaign creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the campaign creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter results to campaigns owned by the specified campaign group
          ID.
        in: query
        name: campaignGroupId
        schema:
          type: integer
      - description: The ID of the Campaign Template this Campaign was created from.
        in: query
        name: templateId
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
      summary: List campaigns
      tags:
      - management
  /v1/applications/{applicationId}/notification_webhooks:
    get:
      description: List all outbound notification webhooks for this application.
      operationId: getNotificationWebhooks
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      summary: List notification webhooks
      tags:
      - management
    post:
      description: |
        Create an outbound notification webhook. An outbound notification webhook is different from regular webhooks
        in that it is application-scoped and has a predefined payload (regular webhooks have user-definable payloads).
      operationId: createNotificationWebhook
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNotificationWebhook'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationWebhook'
          description: Created
      summary: Create notification webhook
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/notification_webhooks/{notificationWebhookId}:
    delete:
      description: Remove the given existing outbound notification webhook.
      operationId: deleteNotificationWebhook
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: notificationWebhookId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete notification webhook
      tags:
      - management
    get:
      description: Return the given outbound notification webhook.
      operationId: getNotificationWebhook
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: notificationWebhookId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationWebhook'
          description: OK
      summary: Get notification webhook
      tags:
      - management
    put:
      description: Update the given outbound notification webhook.
      operationId: updateNotificationWebhook
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: notificationWebhookId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNotificationWebhook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationWebhook'
          description: OK
      summary: Update notification webhook
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}:
    delete:
      description: Delete the given campaign.
      operationId: deleteCampaign
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete campaign
      tags:
      - management
    get:
      description: Retrieve the given campaign.
      operationId: getCampaign
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: OK
      summary: Get campaign
      tags:
      - management
    put:
      description: Update the given campaign.
      operationId: updateCampaign
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: OK
      summary: Update campaign
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/copy:
    post:
      description: Copy the campaign into all specified application.
      operationId: copyCampaignToApplications
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCopy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
      summary: Copy the campaign into the specified application
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns_search:
    post:
      description: |
        Get a list of all the campaigns that match a set of attributes.
      operationId: getCampaignByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Campaigns that are expired.
          - `archived`: Campaigns that are archived.
          - `draft`: Campaigns that are drafts.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
      summary: List campaigns that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets:
    get:
      description: |
        List all rulesets of this campaign. A ruleset is a revision of the rules of a campaign.
        **Important:** The response also includes deleted rules.
        You should only consider the latest revision of the returned rulesets.
      operationId: getRulesets
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
      summary: List campaign rulesets
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets/{rulesetId}:
    get:
      description: Retrieve the specified ruleset.
      operationId: getRuleset
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - in: path
        name: rulesetId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: OK
      summary: Get ruleset
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_with_recipients:
    post:
      description: Create coupons according to some pattern for up to 1000 recipients.
      operationId: createCouponsForMultipleRecipients
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCouponsForMultipleRecipients'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: OK
        "204":
          content: {}
          description: No Content
      summary: Create coupons for multiple recipients
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_async:
    post:
      description: Create any number of coupons from 20,001 to 5,000,000.
      operationId: createCouponsAsync
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCouponCreationJob'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncCouponCreationResponse'
          description: OK
      summary: Create coupons asynchronously
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons:
    delete:
      description: Deletes all the coupons matching the specified criteria.
      operationId: deleteCoupons
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: startsAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: startsBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: expiresAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: expiresBefore
        schema:
          format: date-time
          type: string
      - description: |
          - `expired`: Matches coupons in which the expiry date is set and in the past.
          - `validNow`: Matches coupons in which start date is null or in the past and expiry date is null or in the future.
          - `validFuture`: Matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: |
          - `true`: only coupons where `usageCounter < usageLimit` will be returned.
          - `false`: only coupons where `usageCounter >= usageLimit` will be returned.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: |
          Filter results by match with a profile id specified in the coupon's `RecipientIntegrationId` field.
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete coupons
      tags:
      - management
    post:
      description: Create coupons according to some pattern. Up to 20.000 coupons
        can be created without a unique prefix. When a unique prefix is provided,
        up to 200.000 coupons can be created.
      operationId: createCoupons
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCoupons'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: OK
        "204":
          content: {}
          description: No Content
      summary: Create coupons
      tags:
      - management
      x-codegen-request-body-name: body
    put:
      description: |
        Update all coupons of an campaign, or a specific batch of coupons.
        You can find the `batchId` in the **Coupons** view of your Application
        in the Campaign Manager or by using [List coupons](#operation/getCouponsWithoutTotalCount).

        **Important**:
        - Only send sequential requests to this endpoint.
        - Requests to this endpoint timeout after 30 minutes. If you hit a timeout, reach out to our support team.

        To update a specific coupon, use [Update coupon](#operation/updateCoupon).
      operationId: updateCouponBatch
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCouponBatch'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Update coupons
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/no_total:
    get:
      description: |
        List all the coupons matching the specified criteria.
      operationId: getCouponsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
      summary: List coupons
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/{couponId}:
    delete:
      description: Delete the specified coupon.
      operationId: deleteCoupon
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the coupon code to update
        in: path
        name: couponId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete coupon
      tags:
      - management
    put:
      description: Update the specified coupon.
      operationId: updateCoupon
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the coupon code to update
        in: path
        name: couponId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCoupon'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: OK
      summary: Update coupon
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced/no_total:
    post:
      description: |
        List the coupons whose attributes match the query criteria
        in the given campaign.

        The match is successful if all the attributes of the request are found in a coupon,
        even if the coupon has more attributes that are not present on the request.

        **Note:** The total count is not included in the response.
      operationId: searchCouponsAdvancedWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
      summary: List coupons that match the given attributes in campaign (without total
        count)
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/coupons_search_advanced/no_total:
    post:
      description: |
        List the coupons whose attributes match the query criteria in all **active** campaigns of the given Application.

        The match is successful if all the attributes of the request are found in a coupon,
        even if the coupon has more attributes that are not present on the request.

        **Note:** The total count is not included in the response.
      operationId: searchCouponsAdvancedApplicationWideWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Campaigns that are expired.
          - `archived`: Campaigns that are archived.
          - `draft`: Campaigns that are drafts.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
      summary: List coupons that match the given attributes (without total count)
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/{referralId}:
    delete:
      description: Delete the specified referral.
      operationId: deleteReferral
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the referral code to delete
        in: path
        name: referralId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete referral
      tags:
      - management
    put:
      description: Update the specified referral.
      operationId: updateReferral
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the referral code to delete
        in: path
        name: referralId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReferral'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: OK
      summary: Update referral
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/no_total:
    get:
      description: List all referrals of the specified campaign.
      operationId: getReferralsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          referral code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: code
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches referrals in which the expiry date is set and in the past. The second matches referrals in which start date is null or in the past and expiry date is null or in the future, the third matches referrals in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only referrals where `usageCounter < usageLimit` will be returned, "false" will return only referrals where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter results by match with a profile id specified in the referral's
          AdvocateProfileIntegrationId field
        in: query
        name: advocate
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: OK
      summary: List referrals
      tags:
      - management
  /v1/applications/{applicationId}/create_campaign_from_template:
    post:
      description: |
        Use the campaign template referenced in the request body to create
        a new campaign in one of the connected Applications.

        If the template was created from a campaign with rules referencing [campaign collections](https://docs.talon.one/docs/product/campaigns/managing-collections),
        the corresponding collections for the new campaign are created automatically.
      operationId: createCampaignFromTemplate
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateCampaign'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTemplateCampaignResponse'
          description: Created
      summary: Create campaign from campaign template
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/loyalty_programs:
    get:
      description: List the loyalty programs of the account.
      operationId: getLoyaltyPrograms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
      summary: List loyalty programs
      tags:
      - management
  /v1/loyalty_programs/{loyaltyProgramId}:
    get:
      description: |
        Get the specified [loyalty program](https://docs.talon.one/docs/product/loyalty-programs/overview).
        To list all loyalty programs in your Application, use [List loyalty programs](#operation/getLoyaltyPrograms).

        To list the loyalty programs that a customer profile is part of, use the
        [List customer data](https://docs.talon.one/integration-api#tag/Customer-profiles/operation/getCustomerInventory)
      operationId: getLoyaltyProgram
      parameters:
      - description: |
          Identifier of the loyalty program containing the loyalty card. You can get the ID with
          the [List loyalty programs endpoint](https://docs.talon.one/management-api/#operation/getLoyaltyPrograms).
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgram'
          description: OK
      summary: Get loyalty program
      tags:
      - management
  /v1/loyalty_programs/{loyaltyProgramId}/import_points:
    post:
      description: |
        Upload a CSV file containing the [loyalty](https://www.talon.one/pillar-pages/loyalty) points that should be created.
        The file should be sent as multipart data.

        **Important**: For existing customer profiles, the imported points are _added_ to
        their active points. Learn more about [Loyalty programs](https://docs.talon.one/docs/product/loyalty-programs/overview).

        The CSV file can contain the following columns:

        - `customerprofileid`: The integration ID of the customer profile that should receive the loyalty points.
        - `amount`: The amount of points to award to the customer profile.
        - `startdate`: The earliest date when the points can be redeemed. On this date and until the expiry date, the points are `active`.
        - `expirydate`: The latest date when the points can be redeemed. After this date, the points are `expired`.
        - `subledgerid` (optional): The ID of the subledger that should received the points.
        - `reason` (optional): A reason why these points were awarded.

        **Important:** Do not leave empty columns in the file.

        You can use the timezone of your choice. It is converted to UTC internally by Talon.One.

        **Example:**

        ```text
        customerprofileid,amount,startdate,expirydate,subledgerid,reason
        URNGV8294NV,100,2009-11-10T23:00:00Z,2009-11-11T23:00:00Z,subledger1,appeasement
        ```
      operationId: importLoyaltyPoints
      parameters:
      - description: |
          Identifier of the loyalty program containing the loyalty card. You can get the ID with
          the [List loyalty programs endpoint](https://docs.talon.one/management-api/#operation/getLoyaltyPrograms).
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import loyalty points
      tags:
      - management
  /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}:
    get:
      description: |
        Get the loyalty ledger for this profile integration ID.

        To get the `integrationId` of the profile from a `sessionId`, use the
        [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
      operationId: getLoyaltyPoints
      parameters:
      - description: The identifier for the loyalty program.
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: string
      - description: The identifier of the profile.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyLedger'
          description: OK
      summary: Get the Loyalty Ledger for this integrationID
      tags:
      - management
  /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/add_points:
    put:
      description: |
        Add points in the specified loyalty program for the given customer.

        To get the `integrationId` of the profile from a `sessionId`, use the
        [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
      operationId: addLoyaltyPoints
      parameters:
      - description: The identifier for the loyalty program.
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: string
      - description: The identifier of the profile.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyPoints'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Add points in loyalty program for given customer
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/deduct_points:
    put:
      description: |
        Remove points from the specified loyalty program and specified customer profile.

        To get the `integrationId` of the profile from a `sessionId`, use the
        [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
      operationId: removeLoyaltyPoints
      parameters:
      - description: The identifier for the loyalty program.
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: string
      - description: The identifier of the profile.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyPoints'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Deduct points in loyalty program for given customer
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/export_log:
    get:
      description: Download a CSV file containing a customer's ledger log in the loyalty
        program
      operationId: exportLoyaltyLedger
      parameters:
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      - description: The identifier for the loyalty program.
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: string
      - description: The identifier of the profile.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
      summary: Export a customer's loyalty ledger log
      tags:
      - management
  /v1/loyalty_programs/{loyaltyProgramId}/statistics:
    get:
      description: |
        Retrieve the statistics of the specified loyalty program such as the
        total active points, pending points, spent points and expired points.
      operationId: getLoyaltyStatistics
      parameters:
      - description: |
          Identifier of the loyalty program containing the loyalty card. You can get the ID with
          the [List loyalty programs endpoint](https://docs.talon.one/management-api/#operation/getLoyaltyPrograms).
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyStatistics'
          description: OK
      summary: Get loyalty program statistics by loyalty program ID
      tags:
      - management
  /v1/loyalty_programs/{loyaltyProgramId}/export_customer_balance:
    get:
      description: Download a CSV file containing the balance of each customer in
        the loyalty program.
      operationId: exportLoyaltyBalance
      parameters:
      - description: The identifier for the loyalty program.
        in: path
        name: loyaltyProgramId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
        "400":
          content:
            application/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
      summary: Export customer loyalty balance to a CSV file
      tags:
      - management
  /v1/giveaways/pools/{poolId}/import:
    post:
      description: |
        Upload a CSV file containing the giveaway codes that should be created. Send the file as multipart data.

        The CSV file can contain the following columns:
        - `code` (required): the code of your giveaway, for instance, a gift card redemption code.
        - `startdate`:  the start date in RFC3339 of the code redemption period.
        - `enddate`: the last date in RFC3339 of the code redemption period.
        - `attributes`: A json object describing _custom_ giveaway attribute names and their values. Double the double-quotes in the object.
          For example, if you [created a custom attribute](https://docs.talon.one/docs/dev/concepts/attributes#custom-attributes)
          called `provider` associated to the giveaway entity, set it with `"{""provider"": ""myPartnerCompany""}"`.

        **Important:** Do not leave empty columns in the file.

        The `startdate` and `enddate` have nothing to do with the _validity_ of the codes. They are only used by the Rule Engine to award the codes or not.
        You can use the timezone of your choice. It is converted to UTC internally by Talon.One.

        **Example:**

        ```text
        code,startdate,enddate,attributes
        GIVEAWAY1,2020-11-10T23:00:00Z,2022-11-11T23:00:00Z,"{""provider"": ""Amazon""}"
        GIVEAWAY2,2020-11-10T23:00:00Z,2022-11-11T23:00:00Z,"{""provider"": ""Amazon""}"
        GIVEAWAY3,2021-01-10T23:00:00Z,2022-11-11T23:00:00Z,"{""provider"": ""Aliexpress""}"
        ```
      operationId: importPoolGiveaways
      parameters:
      - in: path
        name: poolId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import giveaway codes into a giveaway pool
      tags:
      - management
  /v1/collections:
    get:
      description: List collections in account.
      operationId: listAccountCollections
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: Filter by the name of the Collection.
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: List collections in account
      tags:
      - management
    post:
      description: Create account-level collection.
      operationId: createAccountCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Conflict. A Collection with this name already exists.
      summary: Create account-level collection
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/collections/{collectionId}:
    delete:
      description: Delete the given account-level collection.
      operationId: deleteAccountCollection
      parameters:
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Delete account-level collection
      tags:
      - management
    get:
      description: Retrieve a given account-level collection.
      operationId: getAccountCollection
      parameters:
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Get account-level collection
      tags:
      - management
    put:
      description: Edit the description of the account-level collection and enable
        or disable the collection in the specified Applications.
      operationId: updateAccountCollection
      parameters:
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCollection'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Conflict. A Collection with this name already exists.
      summary: Update account-level collection
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/collections/{collectionId}/items:
    get:
      description: Retrieve the items from the given collection.
      operationId: getCollectionItems
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Get collection items
      tags:
      - management
  /v1/applications/{applicationId}/collections:
    get:
      description: List collections from all campaigns in the Application.
      operationId: listCollectionsInApplication
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: Filter by the name of the Collection.
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: List collections in application
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/collections:
    get:
      description: List collections in the campaign.
      operationId: listCollections
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: Filter by the name of the Collection.
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: List collections
      tags:
      - management
    post:
      description: Create a collection.
      operationId: createCollection
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCampaignCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: Created
      summary: Create collection
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}:
    delete:
      description: Delete the given collection.
      operationId: deleteCollection
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
      summary: Delete collection
      tags:
      - management
    get:
      description: Retrieve a given collection.
      operationId: getCollection
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Get collection
      tags:
      - management
    put:
      description: Edit the description of the collection.
      operationId: updateCollection
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignCollection'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
      summary: Update collection description
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}/import:
    post:
      description: |
        Upload a CSV file containing the collection of string values that should be attached as payload for collection.
        The file should be sent as multipart data.

        The import **replaces** the initial content of the collection.

        The CSV file **must** only contain the following column:

        - `item`: the values in your collection.

        A collection is limited to 500,000 items.

        Example:

        ```
        item
        Addidas
        Nike
        Asics
        ```

        **Note:** Before sending a request to this endpoint, ensure the data in the CSV to import is different from the data currently stored in the collection.
      operationId: importCollection
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
      summary: Import data in existing collection
      tags:
      - management
  /v1/collections/{collectionId}/import:
    post:
      description: |
        Upload a CSV file containing the collection of string values that should be attached as payload for collection.
        The file should be sent as multipart data.

        The import **replaces** the initial content of the collection.

        The CSV file **must** only contain the following column:

        - `item`: the values in your collection.

        A collection is limited to 500,000 items.

        Example:

        ```
        item
        Addidas
        Nike
        Asics
        ```

        **Note:** Before sending a request to this endpoint, ensure the data in the CSV to import is different from the data currently stored in the collection.
      operationId: importAccountCollection
      parameters:
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
      summary: Import data in existing account-level collection
      tags:
      - management
  /v1/collections/{collectionId}/export:
    get:
      description: Download a CSV file containing items from an account-level collection.
      operationId: exportAccountCollectionItems
      parameters:
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/csv:
              example: |
                item
                SKU1
                SKU2
                SKU3
              schema:
                format: csv
                type: string
          description: OK
        "401":
          content:
            application/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Export account-level collection's items
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}/export:
    get:
      description: Download a CSV file containing a collection's items.
      operationId: exportCollectionItems
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the collection. You can get it with the [List collection
          in account endpoint](#operation/listCollectionsInApplication).
        in: path
        name: collectionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/csv:
              example: |
                item
                SKU1
                SKU2
                SKU3
              schema:
                format: csv
                type: string
          description: OK
        "401":
          content:
            application/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized
        "404":
          content:
            application/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Export a collection's items
      tags:
      - management
  /v1/applications/{applicationId}/health_report:
    get:
      description: |
        Display the health of the application and show the last time the Application
        was used.
      operationId: getApplicationApiHealth
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApiHealth'
          description: OK
      summary: Get report of health of application API
      tags:
      - management
  /v1/applications/{applicationId}/access_logs/no_total:
    get:
      description: |
        Retrieve the list of API calls to this Application matching the specified criteria.
      operationId: getAccessLogsWithoutTotalCount
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return results where the request path matches the given
          regular expression.
        in: query
        name: path
        schema:
          type: string
      - description: Only return results where the request method matches the given
          regular expression.
        in: query
        name: method
        schema:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: OK
      summary: Get access logs for Application
      tags:
      - management
  /v1/access_logs:
    get:
      description: |
        Fetches the access logs for the entire account. Sensitive requests (logins) are _always_ filtered from the logs.
      operationId: getAllAccessLogs
      parameters:
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results where the request path matches the given
          regular expression.
        in: query
        name: path
        schema:
          type: string
      - description: Only return results where the request method matches the given
          regular expression.
        in: query
        name: method
        schema:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
          description: OK
      summary: List access logs
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/analytics:
    get:
      description: Retrieve statistical data about the performance of the given campaign.
      operationId: getCampaignAnalytics
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The time interval between the results in the returned time-series.
        in: query
        name: granularity
        schema:
          enum:
          - 1 hour
          - 1 day
          - 1 week
          - 1 month
          - 1 year
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: OK
      summary: Get analytics of campaigns
      tags:
      - management
  /v1/applications/{applicationId}/customers:
    get:
      description: List all the customers of the specified application.
      operationId: getApplicationCustomers
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results performing an exact matching against the profile
          integration identifier.
        in: query
        name: integrationId
        schema:
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
          description: OK
      summary: List application's customers
      tags:
      - management
  /v1/applications/{applicationId}/customer_search:
    post:
      description: |
        Get a list of the application customers matching the provided criteria.

        The match is successful if all the attributes of the request are found in a profile, even if the profile has more attributes that are not present on the request.
      operationId: getApplicationCustomersByAttributes
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileSearchQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
          description: OK
      summary: List application customers matching the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/customer_search/no_total:
    post:
      description: |
        Get a list of the customer profiles matching the provided criteria.

        The match is successful if all the attributes of the request are found in a profile, even if the profile has more attributes that are not present on the request.
      operationId: getCustomersByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileSearchQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
          description: OK
      summary: List customer profiles matching the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/customers/{customerId}:
    get:
      description: |
        Return the details of the specified customer profile.

        <div class="redoc-section">
          <p class="title">Performance tips</p>

          You can retrieve the same information via the Integration API, which can save you extra API requests. consider these options:

          - Request the customer profile to be part of the response content using
            [Update Customer Session](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/updateCustomerSessionV2).
          - Send an empty update with the [Update Customer Profile](https://docs.talon.one/integration-api#tag/Customer-profiles/operation/updateCustomerProfileV2) endpoint with `runRuleEngine=false`.
        </div>
      operationId: getCustomerProfile
      parameters:
      - description: |
          The value of the `id` property of a customer profile. Get it with the
          [List Application's customers](/#tag/Customer-data/operation/getApplicationCustomers) endpoint.
        in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: OK
      summary: Get customer profile
      tags:
      - management
  /v1/customers/no_total:
    get:
      description: List all customer profiles.
      operationId: getCustomerProfiles
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
          description: OK
      summary: List customer profiles
      tags:
      - management
  /v1/applications/{applicationId}/customers/{customerId}:
    get:
      description: |
        Retrieve the customers of the specified application.
      operationId: getApplicationCustomer
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          The value of the `id` property of a customer profile. Get it with the
          [List Application's customers](/#tag/Customer-data/operation/getApplicationCustomers) endpoint.
        in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomer'
          description: OK
      summary: Get application's customer
      tags:
      - management
  /v1/applications/{applicationId}/customer_activity_reports/no_total:
    get:
      description: |
        Fetch summary reports for all application customers based on a time range. Instead of having the total number of results
        in the response, this endpoint only mentions whether there are more results.
      operationId: getCustomerActivityReportsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return reports matching the customer name
        in: query
        name: name
        schema:
          type: string
      - description: Filter results performing an exact matching against the profile
          integration identifier.
        in: query
        name: integrationId
        schema:
          type: string
      - description: Only return reports matching the campaignName
        in: query
        name: campaignName
        schema:
          type: string
      - description: Only return reports matching the current customer referrer name
        in: query
        name: advocateName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
          description: OK
      summary: Get Activity Reports for Application Customers
      tags:
      - management
  /v1/applications/{applicationId}/customer_activity_reports/{customerId}:
    get:
      description: Fetch the summary report of a given customer in the given application,
        in a time range.
      operationId: getCustomerActivityReport
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string.
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          The value of the `id` property of a customer profile. Get it with the
          [List Application's customers](/#tag/Customer-data/operation/getApplicationCustomers) endpoint.
        in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerActivityReport'
          description: OK
      summary: Get customer's activity report
      tags:
      - management
  /v1/applications/{applicationId}/customers/{customerId}/analytics:
    get:
      description: Fetch analytics for a given customer in the given application.
      operationId: getCustomerAnalytics
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          The value of the `id` property of a customer profile. Get it with the
          [List Application's customers](/#tag/Customer-data/operation/getApplicationCustomers) endpoint.
        in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAnalytics'
          description: OK
      summary: Get customer's analytics report
      tags:
      - management
  /v1/applications/{applicationId}/sessions:
    get:
      description: |
        List all the sessions of the specified Application.
      operationId: getApplicationSessions
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Profile integration ID filter for sessions. Must be exact match.
        in: query
        name: profile
        schema:
          type: string
      - description: Filter by sessions with this state. Must be exact match.
        in: query
        name: state
        schema:
          enum:
          - open
          - closed
          - partially_returned
          - cancelled
          type: string
      - description: Only return events created before this date. You can use any
          timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Only return events created after this date. You can use any timezone.
          Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter by sessions with this coupon. Must be exact match.
        in: query
        name: coupon
        schema:
          type: string
      - description: Filter by sessions with this referral. Must be exact match.
        in: query
        name: referral
        schema:
          type: string
      - description: Filter by sessions with this integrationId. Must be exact match.
        in: query
        name: integrationId
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: OK
      summary: List Application sessions
      tags:
      - management
  /v1/applications/{applicationId}/sessions/{sessionId}:
    get:
      description: |
        Get the details of the given session.
        You can list the sessions with the [List Application sessions](/#tag/Customer-data/operation/getApplicationSession) endpoint.
      operationId: getApplicationSession
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          The **internal** ID of the session. You can get the ID with the [List Application sessions endpoint](/#tag/Customer-data/operation/getApplicationSession).
        in: path
        name: sessionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSession'
          description: OK
      summary: Get Application session
      tags:
      - management
  /v1/applications/{applicationId}/events/no_total:
    get:
      description: |
        Lists all events recorded for an application. Instead of having the total number of results in the response, this endpoint only mentions whether there are more results.
      operationId: getApplicationEventsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Comma-separated list of types by which to filter events. Must
          be exact match(es).
        in: query
        name: type
        schema:
          type: string
      - description: Only return events created before this date. You can use any
          timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Only return events created after this date. You can use any timezone.
          Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Session integration ID filter for events. Must be exact match.
        in: query
        name: session
        schema:
          type: string
      - description: Profile integration ID filter for events. Must be exact match.
        in: query
        name: profile
        schema:
          type: string
      - description: Customer name filter for events. Will match substrings case-insensitively.
        in: query
        name: customerName
        schema:
          minLength: 2
          type: string
      - description: Customer e-mail address filter for events. Will match substrings
          case-insensitively.
        in: query
        name: customerEmail
        schema:
          minLength: 2
          type: string
      - description: Coupon code
        in: query
        name: couponCode
        schema:
          type: string
      - description: Referral code
        in: query
        name: referralCode
        schema:
          type: string
      - description: Rule name filter for events
        in: query
        name: ruleQuery
        schema:
          type: string
      - description: Campaign name filter for events
        in: query
        name: campaignQuery
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
          description: OK
      summary: List Applications events
      tags:
      - management
  /v1/applications/{applicationId}/event_types:
    get:
      description: |
        Get all of the distinct values of the Event `type` property for events recorded in the application.

        See also: [Track an event](/integration-api/#operation/trackEvent)
      operationId: getApplicationEventTypes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
          description: OK
      summary: List Applications event types
      tags:
      - management
  /v1/audiences:
    get:
      description: |
        Get all audiences created in the account. To create an audience, use [Create audience](https://docs.talon.one/integration-api#tag/Audiences/operation/createAudienceV2).
      operationId: getAudiences
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
          description: OK
      summary: List audiences
      tags:
      - management
  /v1/applications/{applicationId}/profile/{integrationId}/friends:
    get:
      description: |
        List the friends referred by the specified customer profile in this Application.
      operationId: getApplicationCustomerFriends
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: The Integration ID of the Advocate's Profile.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
          description: OK
      summary: List friends referred by customer profile
      tags:
      - management
  /v1/attributes:
    get:
      description: |
        Returns all the defined custom attributes for the account.
      operationId: getAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Returned attributes will be filtered by supplied entity.
        in: query
        name: entity
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
          description: OK
      summary: List custom attributes
      tags:
      - management
    post:
      description: |
        Create a _custom attribute_ in this account. Custom attributes allow you
        to attach new fields to Talon.One domain objects like campaigns, coupons,
        customers and so on.

        These attributes can then be given values when creating/updating these objects, and these values can be
        used in your campaign rules. For example, you could define a `zipCode` field for customer sessions,
        and add a rule to your campaign that only allows certain ZIP codes.

        These attributes are shared across all applications in your account, and are never required.
      operationId: createAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAttribute'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: Created
      summary: Create custom attribute
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/attributes/{attributeId}:
    get:
      description: |
        Returns custom attribute for the account by its id.
      operationId: getAttribute
      parameters:
      - in: path
        name: attributeId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: OK
      summary: Get custom attribute
      tags:
      - management
    put:
      description: |
        Updates an existing custom attribute. Once created, the only property of a custom attribute that can be changed is the title (human readable description). This restriction is in place to prevent accidentally breaking live integrations. E.g. if you have a customer profile attribute with the name `region`, and your integration is sending `attributes.region` with customer profile updates, changing the name to `locale` would cause the integration requests to begin failing.

        If you **really** need to change the `type` or `name` property of a custom attribute, create a new attribute and update any relevant integrations and rules to use the new attribute. Then delete the old attribute when you are confident you have migrated any needed data from the old attribute to the new one.
      operationId: updateAttribute
      parameters:
      - in: path
        name: attributeId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAttribute'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: OK
      summary: Update custom attribute
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/attributes/{attributeId}/allowed_list/import:
    post:
      description: |
        Upload a CSV file containing a list of allowed values for the specified attribute.
        These values are also called [picklist values](/docs/product/account/dev-tools/managing-attributes/#picklist-values).

        The file should be sent as multipart data.

        The import **replaces** the previous list of allowed values for this attribute, if any.

        The CSV file **must** only contain the following column:
        - `item` (required): the values in your allowed list, for example a list of SKU's.

        An allowed list is limited to 500,000 items.

        Example:

        ```text
        item
        CS-VG-04032021-UP-50D-10
        CS-DV-04042021-UP-49D-12
        CS-DG-02082021-UP-50G-07
        ```
      operationId: importAllowedList
      parameters:
      - in: path
        name: attributeId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Import allowed values for attribute
      tags:
      - management
  /v1/catalogs/{catalogId}/sync:
    put:
      description: |
        Perform one or more of the following sync actions on this cart item catalog, up to 1000 actions:

        - Add an item to the catalog.
        - Edit the attributes of an item in the catalog.
        - Edit the attributes of more than one item in the catalog.
        - Remove an item from the catalog.
        - Remove more than one item from the catalog.

        **Note**: For more information, see [our documentation on managing cart item catalogs](https://docs.talon.one/docs/product/account/dev-tools/managing-cart-item-catalogs).

        ### Filtering cart items

        Use [cart item attributes](https://docs.talon.one/docs/product/account/dev-tools/managing-cart-item-catalogs#displaying-the-details-and-content-of-a-catalog)
        to filter items and select the ones you want to edit or delete when editing or deleting more than one item
        at a time.

        The `filters` object contains the following properties:

        - `attr`: A [cart item attribute](https://docs.talon.one/docs/product/account/dev-tools/managing-attributes)
          connected to the catalog. It is applied to all items in the catalog.
        - `op`: The filtering operator indicating the relationship between the value of each
          cart item in the catalog and the value of the `value` property for the attribute selected
          in `attr`.

          The value of `op` can be one of the following:

          - `EQ`: Equal to `value`
          - `LT`: Less than `value`
          - `LE`: Less than or equal to `value`
          - `GT`: Greater than `value`
          - `GE`: Greater than or equal to `value`
          - `IN`: One of the comma-separated values that `value` is set to.

          **Note:** `GE`, `LE`, `GT`, `LT` are for numeric values only.

        - `value`: The value of the attribute selected in `attr`.

        ### Payload examples

        Synchronization actions are sent as `PUT` requests. See the structure for each action:

        <details>
          <summary><strong>Adding an item to the catalog</strong></summary>
          <div>

          ```json
          {
            "actions": [
              {
                "payload": {
                  "attributes": {
                    "color": "Navy blue",
                    "type": "shoe"
                  },
                  "replaceIfExists": true,
                  "sku": "SKU1241028"
                },
                "type": "ADD"
              }
            ]
          }
          ```
          </div>
        </details>

        <details>
          <summary><strong>Editing the attributes of an item in the catalog</strong></summary>
          <div>

          ```json
          {
            "actions": [
              {
                "payload": {
                  "attributes": {
                    "age": 11,
                    "origin": "germany"
                  },
                  "createIfNotExists": false,
                  "sku": "SKU1241028"
                },
                "type": "PATCH"
              }
            ]
          }
          ```
          </div>
        </details>

        <details>
          <summary><strong>Editing the attributes of several items at once</strong></summary>
          <div>

          ```json
          {
            "actions": [
              {
                "payload": {
                  "attributes": {
                    "color": "red"
                  },
                  "filters": [
                    {
                      "attr": "color",
                      "op": "EQ",
                      "value": "blue"
                    }
                  ]
                },
                "type": "PATCH_MANY"
              }
            ]
          }
          ```

          </div>
        </details>

        <details>
          <summary><strong>Removing an item from the catalog</strong></summary>
          <div>

          ```json
          {
            "actions": [
              {
                "payload": {
                  "sku": "SKU1241028"
                },
                "type": "REMOVE"
              }
            ]
          }
          ```

          </div>
        </details>

        <details>
          <summary><strong>Removing several items from the catalog at once</strong></summary>
          <div>

          ```json
          {
            "actions": [
              {
                "payload": {
                  "filters": [
                    {
                      "attr": "color",
                      "op": "EQ",
                      "value": "blue"
                    }
                  ]
                },
                "type": "REMOVE_MANY"
              }
            ]
          }
          ```
          </div>
        </details>

        <details>
          <summary><strong>Removing shoes of sizes above 45 from the catalog</strong></summary>
          <div>
          <p>
          Let's imagine that we have a shoe store and we have decided to stop selling
          shoes larger than size 45. We can remove from the catalog all the shoes of sizes above 45
          with a single action:</p>

          ```json
          {
            "actions": [
              {
                "payload": {
                  "filters": [
                    {
                      "attr": "size",
                      "op": "GT",
                      "value": "45"
                    }
                  ]
                },
                "type": "REMOVE_MANY"
              }
            ]
          }
          ```
          </div>
        </details>
      operationId: syncCatalog
      parameters:
      - in: path
        name: catalogId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSyncRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Unauthorized - Invalid API key
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithStatus'
          description: Not found
      summary: Sync cart item catalog
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/additional_costs:
    get:
      description: |
        Returns all the defined additional costs for the account.
      operationId: getAdditionalCosts
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
          description: OK
      summary: List additional costs
      tags:
      - management
    post:
      description: |
        Create an [additional cost](/docs/product/account/dev-tools/managing-additional-costs/).

        These additional costs are shared across all applications in your account, and are never required.
      operationId: createAdditionalCost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAdditionalCost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: Created
      summary: Create additional cost
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/additional_costs/{additionalCostId}:
    get:
      description: |
        Returns the additional cost.
      operationId: getAdditionalCost
      parameters:
      - in: path
        name: additionalCostId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: OK
      summary: Get additional cost
      tags:
      - management
    put:
      description: |
        Updates an existing additional cost. Once created, the only property of an additional cost that can be changed is the title (human readable description). This restriction is in place to prevent accidentally breaking live integrations.
      operationId: updateAdditionalCost
      parameters:
      - in: path
        name: additionalCostId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAdditionalCost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: OK
      summary: Update additional cost
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/webhooks:
    get:
      description: List all webhooks.
      operationId: getWebhooks
      parameters:
      - description: Filter by one or more application ids separated by comma.
        in: query
        name: applicationIds
        schema:
          type: string
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
          description: OK
      summary: List webhooks
      tags:
      - management
  /v1/webhooks/{webhookId}:
    get:
      description: Returns a webhook by its id.
      operationId: getWebhook
      parameters:
      - in: path
        name: webhookId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: OK
      summary: Get webhook
      tags:
      - management
  /v1/webhook_activation_logs:
    get:
      description: Webhook activation log entries would be created as soon as an integration
        request triggered an effect with a webhook.
      operationId: getWebhookActivationLogs
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results by integration request UUID.
        in: query
        name: integrationRequestUuid
        schema:
          type: string
      - description: Filter results by Webhook.
        in: query
        name: webhookId
        schema:
          type: number
      - description: Filter results by Application ID.
        in: query
        name: applicationId
        schema:
          type: number
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Only return events created before this date. You can use any
          timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Only return events created after this date. You can use any timezone.
          Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
          description: OK
      summary: List webhook activation log entries
      tags:
      - management
  /v1/webhook_logs:
    get:
      description: Retrieve all webhook log entries.
      operationId: getWebhookLogs
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: Filter results by Webhook.
        in: query
        name: webhookId
        schema:
          type: number
      - description: Filter results by Application ID.
        in: query
        name: applicationId
        schema:
          type: number
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Filter results by request UUID.
        in: query
        name: requestUuid
        schema:
          type: string
      - description: Filter results where request and response times to return entries
          before parameter value, expected to be an RFC3339 timestamp string. You
          can use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results where request and response times to return entries
          after parameter value, expected to be an RFC3339 timestamp string. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: OK
      summary: List webhook log entries
      tags:
      - management
  /v1/event_types:
    get:
      description: |
        Fetch all event type definitions for your account.
      operationId: getEventTypes
      parameters:
      - description: Filter results to event types with the given name. This parameter
          implies `includeOldVersions`.
        in: query
        name: name
        schema:
          type: string
      - description: Include all versions of every event type.
        in: query
        name: includeOldVersions
        schema:
          default: false
          type: boolean
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
          description: OK
      summary: List event types
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/import_coupons:
    post:
      description: |
        Upload a CSV file containing the coupons that should be created. The file should be sent as multipart data.

        The CSV file can contain the following columns:

        - `value` (required): The coupon code.
        - `expirydate`: The end date in RFC3339 of the code redemption period.
        - `startdate`: The start date in RFC3339 of the code redemption period.
        - `limitval`: The maximum amount of redemptions of this code. For unlimited redemptions, use `0`. Defaults to `1` when not provided.
        - `attributes`: A json object describing _custom_ referral attribute names and their values. Double the double-quotes in the object.
        - `discountlimit`: The amount of discounts that can be given with this coupon code.
          For example, if you created a [custom attribute](https://docs.talon.one/docs/dev/concepts/attributes#custom-attributes)
          called `category` associated to the coupon entity, set it with `"{""category"": ""10_off""}"`.

        **Important:** Do not leave empty columns in the file.

        You can use the timezone of your choice. It is converted to UTC internally by Talon.One.

        **Example:**

        ```text
        "value","expirydate","startdate","recipientintegrationid","limitval","attributes","discountlimit"
        COUP1,2018-07-01T04:00:00Z,2018-05-01T04:00:00Z,cust123,1,"{""Category"": ""10_off""}",2.4
        ```

        Once imported, you can find the `batchId` in the Campaign Manager or by
        using [List coupons](#tag/Coupons/operation/getCouponsWithoutTotalCount).
      operationId: importCoupons
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import coupons
      tags:
      - management
  /v1/applications/{applicationId}/export_coupons:
    get:
      description: Download a CSV file containing the coupons that match the given
        properties.
      operationId: exportCoupons
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Campaigns that are expired.
          - `archived`: Campaigns that are archived.
          - `draft`: Campaigns that are drafts.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      responses:
        "200":
          content:
            application/csv:
              example: |
                id,created,campaignid,value,expirydate,startdate,attributes,applicationid,deleted,deleted_changelogid,accountid,referralid,recipientintegrationid,importid,batchid,reservation,limits,limitval,counter,discount_counter,discount_limitval
                20191301,2022-04-26T11:02:38Z,3882,COUP1,2022-04-27T10:56:47Z,2022-04-26T10:56:47Z,"{""test"": ""premium""}",270,,0,1,,cust123,671,axghjfdy,,"[]",1,0,0,1.5
              schema:
                format: csv
                type: string
          description: OK
      summary: Export coupons
      tags:
      - management
  /v1/applications/{applicationId}/export_referrals:
    get:
      description: Download a CSV file containing the referrals that match the given
        parameters.
      operationId: exportReferrals
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          - `expired`: Matches referrals in which the expiry date is set and in the past.
          - `validNow`: Matches referrals in which start date is null or in the past and expiry date is null or in the future.
          - `validFuture`: Matches referrals in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          - `true`, only referrals where `usageCounter < usageLimit` will be returned.
          - `false`, only referrals where `usageCounter >= usageLimit` will be returned.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter results by batches of referrals
        in: query
        name: batchId
        schema:
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      responses:
        "200":
          content:
            application/csv:
              example: |
                id,created,campaignid,advocateprofileintegrationid,friendprofileintegrationid,startdate,expirydate,code,importid,attributes,batchid,counter,limitval
                687,2021-09-10 09:21:06,3882,UGAV4628K,,,,3LFC-4BPC,,"{}",pimcxobg,0,9999
              schema:
                format: csv
                type: string
          description: OK
      summary: Export referrals
      tags:
      - management
  /v1/applications/{applicationId}/export_effects:
    get:
      description: |
        Download a CSV file containing the triggered effects that match the given attributes.
      operationId: exportEffects
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      responses:
        "200":
          content:
            application/csv:
              example: |
                created,name,applicationid,campaignid,rulesetid,ruleindex,sessionintegrationid,profileintegrationid,sessionid,profileid,eventid,event_type,total_revenue,props,couponid
                2021-06-02T21:14:16Z,rejectCoupon,270,0,0,0,newsession1,,9168,0,95797,talon_session_created,265.00,"{""value"": ""XMAS20"", ""rejectionReason"": ""CouponNotFound""}",
                2021-09-01T13:04:04Z,setDiscountPerItem,270,3882,13599,0,test_flattening_2,integid_4,9707,4800,98806,talon_session_updated,405.00,"{""name"": ""10% off per item#1"", ""value"": 11.0, ""position"": 1}"
              schema:
                format: csv
                type: string
          description: OK
      summary: Export triggered effects
      tags:
      - management
  /v1/applications/{applicationId}/export_customer_sessions:
    get:
      description: |
        Download a CSV file containing the customer sessions that match the request.

        **Important:** Archived sessions cannot be exported. See the [retention policy](https://docs.talon.one/docs/product/server-infrastructure-and-data-retention#data-retention-policy).
      operationId: exportCustomerSessions
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Only return sessions for the customer that matches this customer
          integration ID.
        in: query
        name: profileIntegrationId
        schema:
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      - description: Filter results by state.
        in: query
        name: customerSessionState
        schema:
          enum:
          - open
          - closed
          - partially_returned
          - cancelled
          type: string
      responses:
        "200":
          content:
            application/csv:
              example: |
                id,firstsession,integrationid,applicationid,profileid,profileintegrationid,created,state,cartitems,discounts,total,attributes,closedat,cancelledat,referral,identifiers,additional_costs,updated,coupons
                12327,true,62791173fbf323ee5cfd96f3,270,6111,dxclwds,2022-05-09T13:05:31Z,open,"[{""sku"": ""B00004TKVY"", ""name"": ""Gravel bike - \""Aisle of Man\"""", ""price"": 1800, ""weight"": 6, ""category"": ""gravelbikes"", ""position"": 0, ""quantity"": 1, ""attributes"": {""color"": [""black,white""], ""material"": ""titanium""}, ""returnedQuantity"": 0, ""remainingQuantity"": 1}]","{}",1850.00,"{""ShippingCost"": 50, ""PaymentMethod"": ""creditcard"", ""ShippingMethod"": ""Standard""}",0001-01-01T00:00:00Z,0001-01-01T00:00:00Z,,"null","{""ShippingCost"": {""price"": 50}}",2022-05-09T13:13:28Z,"[""SORRY5QMUJRWA""]"
              schema:
                format: csv
                type: string
          description: OK
      summary: Export customer sessions
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/import_referrals:
    post:
      description: |
        Upload a CSV file containing the referrals that should be created.
        The file should be sent as multipart data.

        The CSV file can contain the following columns:

        - `code` (required): The referral code.
        - `advocateprofileintegrationid` (required): The profile ID of the advocate.
        - `startdate`: The start date in RFC3339 of the code redemption period.
        - `expirydate`: The end date in RFC3339 of the code redemption period.
        - `limitval`: The maximum amount of redemptions of this code. Defaults to `1` when left blank.
        - `attributes`: A json object describing _custom_ referral attribute names and their values. Double the double-quotes in the object.

          For example, if you [created a custom attribute](https://docs.talon.one/docs/dev/concepts/attributes#custom-attributes)
          called `category` associated to the referral entity, set it with `"{""category"": ""10_off""}"`.

        You can use the timezone of your choice. It is converted to UTC internally by Talon.One.

        **Example:**

        ```text
        code,startdate,expirydate,advocateprofileintegrationid,limitval,attributes
        REFERRAL_CODE1,2020-11-10T23:00:00Z,2021-11-11T23:00:00Z,integid_4,1,"{""my_attribute"": ""10_off""}"
        REFERRAL_CODE2,2020-11-10T23:00:00Z,2021-11-11T23:00:00Z,integid1,1,"{""my_attribute"": ""20_off""}"
        ```
      operationId: importReferrals
      parameters:
      - description: The ID of the Application. It is displayed in your Talon.One
          deployment URL.
        in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The ID of the campaign. It is displayed in your Talon.One deployment
          URL.
        in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import referrals
      tags:
      - management
  /v1/users:
    get:
      description: |
        Retrieve all users in your account.
      operationId: getUsers
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
          description: OK
      summary: List users in account
      tags:
      - management
  /v1/users/{userId}:
    get:
      description: |
        Retrieve the data (including an invitation code) for a user. Non-admin users can only get their own profile.
      operationId: getUser
      parameters:
      - description: The ID of the user.
        in: path
        name: userId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get user
      tags:
      - management
  /v1/changes:
    get:
      description: |
        Export the audit logs displayed in **Accounts > Audit logs**.
      operationId: getChanges
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results by Application ID.
        in: query
        name: applicationId
        schema:
          type: number
      - description: Filter results on a case insensitive matching of the url path
          of the entity
        in: query
        name: entityPath
        schema:
          type: string
      - description: Filter results that match the given user ID.
        in: query
        name: userId
        schema:
          type: integer
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the change creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the change creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          When this flag is set, the result includes the total size of the result, across all pages. This might decrease performance on large data sets.

          - When `true`: `hasMore` is true when there is a next page. `totalResultSize` is always zero.
          - When `false`: `hasMore` is always false. `totalResultSize` contains the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: When this flag is set to false, the state without the change
          will not be returned. The default value is true.
        in: query
        name: includeOld
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
          description: OK
      summary: Get audit logs for an account
      tags:
      - management
  /v1/password_recovery_emails:
    post:
      description: |
        Send an email with a password recovery link to the email address of an existing account.
      operationId: createPasswordRecoveryEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordEmail'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPasswordEmail'
          description: Created
      summary: Request a password reset
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/reset_password:
    post:
      description: |
        Consumes the supplied password reset token and updates the password for
        the associated account.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPassword'
          description: Created
      summary: Reset password
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}:
    get:
      description: |
        Return the details of your companies Talon.One account.
      operationId: getAccount
      parameters:
      - description: |
          The identifier of the account. Retrieve it via the
          [List users in account endpoint](https://docs.talon.one/management-api#operation/getUsers), in the `accountId`
          property.
        in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
      summary: Get account details
      tags:
      - management
  /v1/accounts/{accountId}/analytics:
    get:
      description: |
        Return the analytics of your Talon.One account.
      operationId: getAccountAnalytics
      parameters:
      - description: |
          The identifier of the account. Retrieve it via the
          [List users in account endpoint](https://docs.talon.one/management-api#operation/getUsers), in the `accountId`
          property.
        in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAnalytics'
          description: OK
      summary: Get account analytics
      tags:
      - management
  /v1/sessions:
    delete:
      description: Destroys the session.
      operationId: destroySession
      responses:
        "204":
          content: {}
          description: No Content
      summary: Destroy session
      tags:
      - management
    post:
      description: |
        Create a session to use the Management API endpoints.
        Use the value of the `token` property provided in the response as bearer token in other API calls.

        A token is valid for 3 months. In accordance with best pratices, use your generated token
        for all your API requests. Do **not** regenerate a token for each request.

        This endpoint has a rate limit of 3 to 6 requests per second per account, depending on your setup.

        **Note:** You can also use your browser's developer's console when you log into the Campaign Manager.
        Keep in mind that logging out destroys the token displayed in the console.
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParams'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Created
      summary: Create session
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/exports:
    get:
      description: |
        List all past exports
      operationId: getExports
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: Filter results by Application ID.
        in: query
        name: applicationId
        schema:
          type: number
      - description: Filter by the campaign ID on which the limit counters are used.
        in: query
        name: campaignId
        schema:
          type: integer
      - description: The name of the entity type that was exported.
        in: query
        name: entity
        schema:
          enum:
          - Coupon
          - Referral
          - Effect
          - CustomerSession
          - LoyaltyLedger
          - LoyaltyLedgerLog
          - Collection
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
          description: OK
      summary: Get exports
      tags:
      - management
  /v1/roles:
    get:
      description: List all roles.
      operationId: getAllRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
          description: OK
      summary: List roles
      tags:
      - management
  /v1/roles/{roleId}:
    get:
      description: |
        Get the details of the specified role. To see all the roles, use [List roles](#operation/getAllRoles).
      operationId: getRole
      parameters:
      - description: 'The Id of role. '
        in: path
        name: roleId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
      summary: Get role
      tags:
      - management
components:
  schemas:
    ErrorResponse:
      properties:
        message:
          description: A message describing the error.
          type: string
        errors:
          description: An array of individual problems encountered during the request.
          items:
            $ref: '#/components/schemas/APIError'
          type: array
      required:
      - message
      type: object
    ErrorResponseWithStatus:
      properties:
        message:
          type: string
        errors:
          description: An array of individual problems encountered during the request.
          items:
            $ref: '#/components/schemas/APIError'
          type: array
        StatusCode:
          description: The error code
          type: integer
      type: object
    APIError:
      properties:
        title:
          description: Short description of the problem.
          type: string
        details:
          description: Longer description of this specific instance of the problem.
          type: string
        source:
          $ref: '#/components/schemas/ErrorSource'
      required:
      - source
      - title
      type: object
    FeatureFlag:
      properties:
        name:
          description: The name for the featureflag.
          type: string
        value:
          description: The value for the featureflag.
          type: string
        created:
          description: The exact moment this entity was last created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
      required:
      - name
      - value
      type: object
    ErrorSource:
      description: |
        The source of the current error, exactly one of `pointer`, `parameter` or `line` will be defined.
      properties:
        pointer:
          description: Pointer to the path in the payload that caused this error.
          type: string
        parameter:
          description: Query parameter that caused this error.
          type: string
        line:
          description: Line number in uploaded multipart file that caused this error.
            'N/A' if unknown.
          type: string
        resource:
          description: Pointer to the resource that caused this error.
          type: string
      type: object
    Entity:
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
      required:
      - created
      - id
      type: object
    EntityWithTalangVisibleID:
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - created
      - id
      type: object
    MutableEntity:
      properties:
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
      required:
      - modified
      type: object
    AccountEntity:
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
      required:
      - accountId
      type: object
    UserEntity:
      properties:
        userId:
          description: The ID of the account that owns this entity.
          type: integer
      required:
      - userId
      type: object
    EmailEntity:
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
      required:
      - email
      type: object
    ApplicationEntity:
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
      required:
      - applicationId
      type: object
    LoyaltyProgramEntity:
      properties:
        programID:
          description: The ID of the loyalty program that owns this entity.
          example: 125
          type: integer
      required:
      - programID
      type: object
    CampaignGroupEntity:
      properties:
        campaignGroups:
          description: The IDs of the campaign groups that own this entity.
          items:
            type: integer
          type: array
      type: object
    MultiApplicationEntity:
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
      required:
      - applicationIds
      type: object
    CampaignEntity:
      properties:
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
      required:
      - campaignId
      type: object
    ApplicationSessionEntity:
      properties:
        sessionId:
          description: The globally unique Talon.One ID of the session where this
            entity was created.
          type: integer
      required:
      - sessionId
      type: object
    ApplicationCustomerEntity:
      properties:
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          example: 138
          type: integer
      type: object
    IntegrationEntity:
      properties:
        integrationId:
          description: The integration ID set by your integration layer.
          example: URNGV8294NV
          format: string
          maxLength: 1000
          type: string
        created:
          description: The exact moment this entity was created.
          example: 2020-02-07T08:15:22Z
          format: date-time
          type: string
      required:
      - created
      - integrationId
      type: object
    IntegrationProfileEntity:
      properties:
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
      type: object
    CouponValue:
      properties:
        value:
          description: The coupon code.
          example: XMAS-20-2021
          minLength: 4
          title: Coupon Code
          type: string
      type: object
    CouponConstraints:
      properties:
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
      type: object
    CodeGeneratorSettings:
      example:
        couponPattern: SUMMER-####-####
        validCharacters:
        - A
        - B
        - C
        - D
        - E
        - "2"
        - "0"
      properties:
        validCharacters:
          description: |
            List of characters used to generate the random parts of a code. Defaults to a list equivalent to the
            `[A-Z, 0-9]` regexp.
          example:
          - A
          - B
          - C
          - D
          - E
          - "2"
          - "0"
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern used to generate coupon codes. The character `#` is a placeholder and is replaced by a random character from the `validCharacters` set.
          example: SUMMER-####-####
          maxLength: 100
          minLength: 3
          type: string
      required:
      - couponPattern
      - validCharacters
      type: object
    Session:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        userId: 109
        token: dy_Fa_lQ4iDAnqldJFvVEmnsN8xDTxej19l0LZDBJhQ
      properties:
        userId:
          description: The ID of the user of this session.
          example: 109
          type: integer
        token:
          description: The token to use as a bearer token to query Management API
            endpoints.
          example: dy_Fa_lQ4iDAnqldJFvVEmnsN8xDTxej19l0LZDBJhQ
          type: string
        created:
          description: Unix timestamp indicating when the session was first created.
          format: date-time
          type: string
      required:
      - created
      - token
      - userId
      type: object
    LoginParams:
      description: ""
      example:
        password: admin123456
        email: john.doe@example.com
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        password:
          description: The password for your account.
          example: admin123456
          type: string
      required:
      - email
      - password
      type: object
    AttributesMandatory:
      description: Arbitrary settings associated with attributes.
      example:
        campaigns:
        - campaigns
        - campaigns
        coupons:
        - coupons
        - coupons
      properties:
        campaigns:
          description: List of mandatory attributes for campaigns.
          items:
            type: string
          type: array
        coupons:
          description: List of mandatory attributes for campaigns.
          items:
            type: string
          type: array
      type: object
    AttributesSettings:
      description: Arbitrary settings associated with attributes.
      example:
        mandatory:
          campaigns:
          - campaigns
          - campaigns
          coupons:
          - coupons
          - coupons
      properties:
        mandatory:
          $ref: '#/components/schemas/AttributesMandatory'
      type: object
    UpdateApplication:
      properties:
        name:
          description: The name of this application.
          example: My Application
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          example: A test Application
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          example: Europe/Berlin
          minLength: 1
          type: string
        currency:
          description: The default currency for new customer sessions.
          example: EUR
          minLength: 1
          type: string
        caseSensitivity:
          description: The case sensitivity behavior to check coupon codes in the
            campaigns of this Application.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          example: sensitive
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          default: universal
          description: |
            Default [priority](https://docs.talon.one/docs/product/applications/setting-up-campaign-priorities) for campaigns
            created in this Application.
          enum:
          - universal
          - stackable
          - exclusive
          example: universal
          type: string
        exclusiveCampaignsStrategy:
          default: listOrder
          description: The strategy used when choosing exclusive campaigns for evaluation.
          enum:
          - listOrder
          - lowestDiscount
          - highestDiscount
          example: listOrder
          type: string
        defaultDiscountScope:
          description: |
            The default scope to apply `setDiscount` effects on if no scope was provided with the effect.
          enum:
          - sessionTotal
          - cartItems
          - additionalCosts
          type: string
        enableCascadingDiscounts:
          description: Indicates if discounts should cascade for this Application.
          type: boolean
        enableFlattenedCartItems:
          description: |
            Indicates if cart items of quantity larger than one should be separated into different items of quantity one. See [the docs](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items).
          type: boolean
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        sandbox:
          description: Indicates if this is a live or sandbox Application.
          type: boolean
        enablePartialDiscounts:
          description: Indicates if this Application supports partial discounts.
          example: false
          type: boolean
        defaultDiscountAdditionalCostPerItemScope:
          description: |
            The default scope to apply `setDiscountPerItem` effects on if no scope was provided with the effect.
          enum:
          - price
          - itemTotal
          - additionalCosts
          type: string
      required:
      - currency
      - name
      - timezone
      type: object
    NewApplication:
      description: ""
      properties:
        name:
          description: The name of this application.
          example: My Application
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          example: A test Application
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          example: Europe/Berlin
          minLength: 1
          type: string
        currency:
          description: The default currency for new customer sessions.
          example: EUR
          minLength: 1
          type: string
        caseSensitivity:
          description: The case sensitivity behavior to check coupon codes in the
            campaigns of this Application.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          example: sensitive
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          default: universal
          description: |
            Default [priority](https://docs.talon.one/docs/product/applications/setting-up-campaign-priorities) for campaigns
            created in this Application.
          enum:
          - universal
          - stackable
          - exclusive
          example: universal
          type: string
        exclusiveCampaignsStrategy:
          default: listOrder
          description: The strategy used when choosing exclusive campaigns for evaluation.
          enum:
          - listOrder
          - lowestDiscount
          - highestDiscount
          example: listOrder
          type: string
        defaultDiscountScope:
          description: |
            The default scope to apply `setDiscount` effects on if no scope was provided with the effect.
          enum:
          - sessionTotal
          - cartItems
          - additionalCosts
          type: string
        enableCascadingDiscounts:
          description: Indicates if discounts should cascade for this Application.
          type: boolean
        enableFlattenedCartItems:
          description: |
            Indicates if cart items of quantity larger than one should be separated into different items of quantity one. See [the docs](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items).
          type: boolean
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        sandbox:
          description: Indicates if this is a live or sandbox Application.
          type: boolean
        enablePartialDiscounts:
          description: Indicates if this Application supports partial discounts.
          example: false
          type: boolean
        defaultDiscountAdditionalCostPerItemScope:
          description: |
            The default scope to apply `setDiscountPerItem` effects on if no scope was provided with the effect.
          enum:
          - price
          - itemTotal
          - additionalCosts
          type: string
        key:
          description: Hex key for HMAC-signing API calls as coming from this application
            (16 hex digits).
          pattern: ^[a-fA-F0-9]{16}$
          type: string
      required:
      - currency
      - name
      - timezone
      type: object
    Application:
      description: ""
      example:
        enableFlattenedCartItems: true
        created: 2020-06-10T09:05:27.993483Z
        timezone: Europe/Berlin
        sandbox: true
        description: A test Application
        attributesSettings:
          mandatory:
            campaigns:
            - campaigns
            - campaigns
            coupons:
            - coupons
            - coupons
        caseSensitivity: sensitive
        accountId: 3886
        enableCascadingDiscounts: true
        campaignPriority: universal
        loyaltyPrograms:
        - cardBased: true
          tiers:
          - name: Gold
            minPoints: 300
            id: 3
            created: 2021-06-10T09:05:27.993483Z
            programID: 139
          - name: Silver
            minPoints: 200
            id: 2
            created: 2021-06-10T09:04:59.355258Z
            programId: 139
          - name: Bronze
            minPoints: 100
            id: 1
            created: 2021-06-10T09:04:39.355258Z
            programId: 139
          usersPerCardLimit: 111
          created: 2020-06-10T09:05:27.993483Z
          timezone: Europe/Berlin
          description: Customers collect 10 points per 1$ spent
          title: Point collection
          subscribedApplications:
          - 132
          - 97
          accountID: 1
          defaultValidity: unlimited
          defaultPending: immediate
          allowSubledger: false
          name: my_program
          id: 6
        - cardBased: true
          tiers:
          - name: Gold
            minPoints: 300
            id: 3
            created: 2021-06-10T09:05:27.993483Z
            programID: 139
          - name: Silver
            minPoints: 200
            id: 2
            created: 2021-06-10T09:04:59.355258Z
            programId: 139
          - name: Bronze
            minPoints: 100
            id: 1
            created: 2021-06-10T09:04:39.355258Z
            programId: 139
          usersPerCardLimit: 111
          created: 2020-06-10T09:05:27.993483Z
          timezone: Europe/Berlin
          description: Customers collect 10 points per 1$ spent
          title: Point collection
          subscribedApplications:
          - 132
          - 97
          accountID: 1
          defaultValidity: unlimited
          defaultPending: immediate
          allowSubledger: false
          name: my_program
          id: 6
        name: My Application
        exclusiveCampaignsStrategy: listOrder
        modified: 2021-09-12T10:12:42Z
        defaultDiscountScope: sessionTotal
        currency: EUR
        attributes: '{}'
        defaultDiscountAdditionalCostPerItemScope: price
        id: 6
        limits:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        enablePartialDiscounts: false
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The name of this application.
          example: My Application
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          example: A test Application
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          example: Europe/Berlin
          minLength: 1
          type: string
        currency:
          description: The default currency for new customer sessions.
          example: EUR
          minLength: 1
          type: string
        caseSensitivity:
          description: The case sensitivity behavior to check coupon codes in the
            campaigns of this Application.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          example: sensitive
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          default: universal
          description: |
            Default [priority](https://docs.talon.one/docs/product/applications/setting-up-campaign-priorities) for campaigns
            created in this Application.
          enum:
          - universal
          - stackable
          - exclusive
          example: universal
          type: string
        exclusiveCampaignsStrategy:
          default: listOrder
          description: The strategy used when choosing exclusive campaigns for evaluation.
          enum:
          - listOrder
          - lowestDiscount
          - highestDiscount
          example: listOrder
          type: string
        defaultDiscountScope:
          description: |
            The default scope to apply `setDiscount` effects on if no scope was provided with the effect.
          enum:
          - sessionTotal
          - cartItems
          - additionalCosts
          type: string
        enableCascadingDiscounts:
          description: Indicates if discounts should cascade for this Application.
          type: boolean
        enableFlattenedCartItems:
          description: |
            Indicates if cart items of quantity larger than one should be separated into different items of quantity one. See [the docs](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items).
          type: boolean
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        sandbox:
          description: Indicates if this is a live or sandbox Application.
          type: boolean
        enablePartialDiscounts:
          description: Indicates if this Application supports partial discounts.
          example: false
          type: boolean
        defaultDiscountAdditionalCostPerItemScope:
          description: |
            The default scope to apply `setDiscountPerItem` effects on if no scope was provided with the effect.
          enum:
          - price
          - itemTotal
          - additionalCosts
          type: string
        loyaltyPrograms:
          description: An array containing all the loyalty programs to which this
            application is subscribed.
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
      required:
      - accountId
      - created
      - currency
      - id
      - loyaltyPrograms
      - modified
      - name
      - timezone
      type: object
    NewCampaignGroup:
      properties:
        name:
          description: The name of this campaign group.
          minLength: 1
          type: string
        description:
          description: A longer description of the campaign group.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this campaign group
            is enabled for.
          items:
            type: integer
          type: array
        campaignIds:
          description: A list of the IDs of the campaigns that this campaign group
            owns.
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    CampaignGroup:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The name of this campaign group.
          minLength: 1
          type: string
        description:
          description: A longer description of the campaign group.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this campaign group
            is enabled for.
          items:
            type: integer
          type: array
        campaignIds:
          description: A list of the IDs of the campaigns that this campaign group
            owns.
          items:
            type: integer
          type: array
      required:
      - accountId
      - created
      - id
      - modified
      - name
      type: object
    UpdateCampaignGroup:
      description: ""
      properties:
        name:
          description: The name of this campaign group.
          minLength: 1
          type: string
        description:
          description: A longer description of the campaign group.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this campaign group
            is enabled for.
          items:
            type: integer
          type: array
        campaignIds:
          description: A list of the IDs of the campaigns that this campaign group
            owns.
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    NewCampaign:
      properties:
        name:
          description: A user-facing name for this campaign.
          example: Summer promotions
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          example: Campaign for all summer 2021 promotions
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          example: 2021-07-20T22:00:00Z
          format: date-time
          type: string
        endTime:
          description: Timestamp the campaign will become inactive.
          example: 2021-09-22T22:00:00Z
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: |
            [ID of Ruleset](https://docs.talon.one/management-api/#operation/getRulesets) this
            campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          example:
          - summer
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: The features enabled in this campaign.
          example:
          - coupons
          - referrals
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: |
            The set of [budget limits](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/) for this campaign.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignGroups:
          description: |
            The IDs of the [campaign groups](https://docs.talon.one/docs/product/account/managing-campaign-groups/) this campaign belongs to.
          example:
          - 1
          - 3
          items:
            type: integer
          type: array
      required:
      - features
      - limits
      - name
      - state
      - tags
      type: object
    UpdateCampaign:
      example:
        activeRulesetId: 0
        description: description
        campaignGroups:
        - 6
        - 6
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
        features:
        - coupons
        - coupons
        name: name
        referralSettings:
          couponPattern: SUMMER-####-####
          validCharacters:
          - A
          - B
          - C
          - D
          - E
          - "2"
          - "0"
        couponSettings:
          couponPattern: SUMMER-####-####
          validCharacters:
          - A
          - B
          - C
          - D
          - E
          - "2"
          - "0"
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes: '{}'
        endTime: 2000-01-23T04:56:07.000+00:00
        state: enabled
        limits:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
      properties:
        name:
          description: A user-facing name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Timestamp when the campaign will become inactive.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: ID of Ruleset this campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignGroups:
          description: The IDs of the campaign groups that own this entity.
          items:
            type: integer
          type: array
      required:
      - features
      - limits
      - name
      - tags
      type: object
    Campaign:
      description: ""
      example:
        callApiEffectCount: 0
        createdLoyaltyPointsEffectCount: 2
        discountCount: 288.0
        description: Campaign for all summer 2021 promotions
        templateId: 3
        customEffectCount: 0
        features:
        - coupons
        - referrals
        createdLoyaltyPointsCount: 9.0
        couponSettings:
          couponPattern: SUMMER-####-####
          validCharacters:
          - A
          - B
          - C
          - D
          - E
          - "2"
          - "0"
        startTime: 2021-07-20T22:00:00Z
        id: 3
        state: enabled
        limits:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        activeRulesetId: 4
        updatedBy: Jane Doe
        created: 2000-01-23T04:56:07.000+00:00
        referralCreationCount: 8
        couponRedemptionCount: 163
        userId: 2
        couponCreationCount: 16
        campaignGroups:
        - 1
        - 3
        tags:
        - summer
        awardedGiveawaysCount: 9
        redeemedLoyaltyPointsEffectCount: 9
        discountEffectCount: 343
        createdBy: John Doe
        redeemedLoyaltyPointsCount: 8.0
        addFreeItemEffectCount: 0
        name: Summer promotions
        referralSettings:
          couponPattern: SUMMER-####-####
          validCharacters:
          - A
          - B
          - C
          - D
          - E
          - "2"
          - "0"
        attributes: '{}'
        lastActivity: 2022-11-10T23:00:00Z
        endTime: 2021-09-22T22:00:00Z
        applicationId: 322
        referralRedemptionCount: 3
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: A user-facing name for this campaign.
          example: Summer promotions
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          example: Campaign for all summer 2021 promotions
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          example: 2021-07-20T22:00:00Z
          format: date-time
          type: string
        endTime:
          description: Timestamp the campaign will become inactive.
          example: 2021-09-22T22:00:00Z
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: |
            [ID of Ruleset](https://docs.talon.one/management-api/#operation/getRulesets) this
            campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          example:
          - summer
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: The features enabled in this campaign.
          example:
          - coupons
          - referrals
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: |
            The set of [budget limits](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/) for this campaign.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignGroups:
          description: |
            The IDs of the [campaign groups](https://docs.talon.one/docs/product/account/managing-campaign-groups/) this campaign belongs to.
          example:
          - 1
          - 3
          items:
            type: integer
          type: array
        couponRedemptionCount:
          description: Number of coupons redeemed in the campaign.
          example: 163
          type: integer
        referralRedemptionCount:
          description: Number of referral codes redeemed in the campaign.
          example: 3
          type: integer
        discountCount:
          description: Total amount of discounts redeemed in the campaign.
          example: 288.0
          type: number
        discountEffectCount:
          description: Total number of times discounts were redeemed in this campaign.
          example: 343
          type: integer
        couponCreationCount:
          description: Total number of coupons created by rules in this campaign.
          example: 16
          type: integer
        customEffectCount:
          description: Total number of custom effects triggered by rules in this campaign.
          example: 0
          type: integer
        referralCreationCount:
          description: Total number of referrals created by rules in this campaign.
          example: 8
          type: integer
        addFreeItemEffectCount:
          description: Total number of times triggering add free item effext is allowed
            in this campaign.
          example: 0
          type: integer
        awardedGiveawaysCount:
          description: Total number of giveaways awarded by rules in this campaign.
          example: 9
          type: integer
        createdLoyaltyPointsCount:
          description: Total number of loyalty points created by rules in this campaign.
          example: 9.0
          type: number
        createdLoyaltyPointsEffectCount:
          description: Total number of loyalty point creation effects triggered by
            rules in this campaign.
          example: 2
          type: integer
        redeemedLoyaltyPointsCount:
          description: Total number of loyalty points redeemed by rules in this campaign.
          example: 8.0
          type: number
        redeemedLoyaltyPointsEffectCount:
          description: Total number of loyalty point redemption effects triggered
            by rules in this campaign.
          example: 9
          type: integer
        callApiEffectCount:
          description: Total number of webhook triggered by rules in this campaign.
          example: 0
          type: integer
        lastActivity:
          description: Timestamp of the most recent event received by this campaign.
          example: 2022-11-10T23:00:00Z
          format: date-time
          type: string
        updated:
          description: |
            Timestamp of the most recent update to the campaign's property. Updates to external entities used in this campaign
            are **not** registered by this property, such as collection or coupon updates.
          format: date-time
          type: string
        createdBy:
          description: Name of the user who created this campaign if available.
          example: John Doe
          type: string
        updatedBy:
          description: Name of the user who last updated this campaign if available.
          example: Jane Doe
          type: string
        templateId:
          description: The ID of the Campaign Template this Campaign was created from.
          example: 3
          type: integer
      required:
      - applicationId
      - created
      - description
      - features
      - id
      - limits
      - name
      - state
      - tags
      - userId
      type: object
    NewRuleset:
      properties:
        rules:
          description: Set of rules to apply.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          example: []
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        rbVersion:
          description: The version of the rulebuilder used to create this ruleset.
          example: v2
          type: string
        activate:
          description: Indicates whether this created ruleset should be activated
            for the campaign that owns it.
          type: boolean
      required:
      - bindings
      - rules
      type: object
    Ruleset:
      description: ""
      example:
        rbVersion: v2
        created: 2020-06-10T09:05:27.993483Z
        campaignId: 320
        bindings: []
        activatedAt: 2000-01-23T04:56:07.000+00:00
        activate: true
        rules:
        - condition:
          - and
          - - couponValid
          effects:
          - catch
          - - noop
          - - setDiscount
            - 10% off
            - - '*'
              - - "."
                - Session
                - Total
              - - /
                - 10
                - 100
          bindings:
          - expression:
            - '{}'
            - '{}'
            valueType: string
            name: my property
            type: templateParameter
          - expression:
            - '{}'
            - '{}'
            valueType: string
            name: my property
            type: templateParameter
          description: Creates a discount when a coupon is valid
          title: Give discount via coupon
        - condition:
          - and
          - - couponValid
          effects:
          - catch
          - - noop
          - - setDiscount
            - 10% off
            - - '*'
              - - "."
                - Session
                - Total
              - - /
                - 10
                - 100
          bindings:
          - expression:
            - '{}'
            - '{}'
            valueType: string
            name: my property
            type: templateParameter
          - expression:
            - '{}'
            - '{}'
            valueType: string
            name: my property
            type: templateParameter
          description: Creates a discount when a coupon is valid
          title: Give discount via coupon
        id: 6
        templateId: 3
        userId: 6
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        rules:
          description: Set of rules to apply.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          example: []
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        rbVersion:
          description: The version of the rulebuilder used to create this ruleset.
          example: v2
          type: string
        activate:
          description: Indicates whether this created ruleset should be activated
            for the campaign that owns it.
          type: boolean
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 320
          title: Campaign ID
          type: integer
        templateId:
          description: The ID of the campaign template that owns this entity.
          example: 3
          title: Campaign Template ID
          type: integer
        activatedAt:
          description: Timestamp indicating when this Ruleset was activated.
          format: date-time
          type: string
      required:
      - bindings
      - created
      - id
      - rules
      - userId
      type: object
    Binding:
      example:
        expression:
        - '{}'
        - '{}'
        valueType: string
        name: my property
        type: templateParameter
      properties:
        name:
          description: A descriptive name for the value to be bound.
          example: my property
          type: string
        type:
          description: |
            The kind of binding. Possible values are:
            - `bundle`
            - `cartItemFilter`
            - `subledgerBalance`
            - `templateParameter`
          example: templateParameter
          type: string
        expression:
          description: A Talang expression that will be evaluated and its result attached
            to the name of the binding.
          items:
            properties: {}
            type: object
          type: array
        valueType:
          description: |
            Can be one of the following:
            - `string`
            - `number`
            - `boolean`
          example: string
          type: string
      required:
      - expression
      - name
      type: object
    Rule:
      example:
        condition:
        - and
        - - couponValid
        effects:
        - catch
        - - noop
        - - setDiscount
          - 10% off
          - - '*'
            - - "."
              - Session
              - Total
            - - /
              - 10
              - 100
        bindings:
        - expression:
          - '{}'
          - '{}'
          valueType: string
          name: my property
          type: templateParameter
        - expression:
          - '{}'
          - '{}'
          valueType: string
          name: my property
          type: templateParameter
        description: Creates a discount when a coupon is valid
        title: Give discount via coupon
      properties:
        title:
          description: A short description of the rule.
          example: Give discount via coupon
          type: string
        description:
          description: A longer, more detailed description of the rule.
          example: Creates a discount when a coupon is valid
          type: string
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        condition:
          description: A Talang expression that will be evaluated in the context of
            the given event.
          example:
          - and
          - - couponValid
          items:
            properties: {}
            type: object
          minItems: 1
          type: array
        effects:
          description: An array of effectful Talang expressions in arrays that will
            be evaluated when a rule matches.
          example:
          - catch
          - - noop
          - - setDiscount
            - 10% off
            - - '*'
              - - "."
                - Session
                - Total
              - - /
                - 10
                - 100
          items:
            properties: {}
            type: object
          type: array
      required:
      - condition
      - effects
      - title
      type: object
    TemplateLimitConfig:
      description: ""
      properties:
        action:
          description: |
            The limitable action to which this limit applies. For example:
            - `setDiscount`
            - `setDiscountEffect`
            - `redeemCoupon`
            - `createCoupon`
          example: createCoupon
          type: string
        limit:
          description: The value to set for the limit.
          example: 1000.0
          minimum: 0
          type: number
        period:
          description: The period on which the budget limit recurs.
          enum:
          - daily
          - weekly
          - monthly
          - yearly
          example: yearly
          type: string
        entities:
          description: The entity that this limit applies to.
          example:
          - Coupon
          items:
            enum:
            - Coupon
            - Referral
            - Profile
            - Identifier
            type: string
          type: array
      required:
      - action
      - entities
      - limit
      type: object
    LimitConfig:
      example:
        period: yearly
        entities:
        - Coupon
        limit: 1000.0
        action: createCoupon
      properties:
        action:
          description: |
            The limitable action to which this limit applies. For example:
            - `setDiscount`
            - `setDiscountEffect`
            - `redeemCoupon`
            - `createCoupon`
          example: createCoupon
          type: string
        limit:
          description: The value to set for the limit.
          example: 1000.0
          minimum: 0
          type: number
        period:
          description: The period on which the budget limit recurs.
          enum:
          - daily
          - weekly
          - monthly
          - yearly
          example: yearly
          type: string
        entities:
          description: The entity that this limit applies to.
          example:
          - Coupon
          items:
            enum:
            - Coupon
            - Referral
            - Profile
            - Identifier
            type: string
          type: array
      required:
      - action
      - entities
      - limit
      type: object
    CampaignSet:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        version:
          description: Version of the campaign set.
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignSetBranchNode'
      required:
      - applicationId
      - created
      - id
      - set
      - version
      type: object
    CampaignSetV2:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        version:
          description: Version of the campaign set.
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignPrioritiesV2'
      required:
      - applicationId
      - created
      - id
      - set
      - version
      type: object
    CampaignSetIDs:
      description: Campaign IDs for each priority.
      properties:
        campaignId:
          description: ID of the campaign
          type: integer
      type: object
    CampaignPrioritiesV2:
      properties:
        exclusive:
          items:
            $ref: '#/components/schemas/CampaignSetIDs'
          type: array
        stackable:
          items:
            $ref: '#/components/schemas/CampaignSetIDs'
          type: array
        universal:
          items:
            $ref: '#/components/schemas/CampaignSetIDs'
          type: array
      type: object
    CampaignSetNode:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    CampaignSetBranchNode:
      properties:
        type:
          description: Indicates the node type.
          enum:
          - SET
          type: string
        name:
          description: Name of the set
          type: string
        operator:
          description: How does the set operates on its elements.
          enum:
          - ALL
          - FIRST
          type: string
        elements:
          description: Child elements of this set.
          items:
            $ref: '#/components/schemas/CampaignSetNode'
          type: array
      required:
      - elements
      - name
      - operator
      - type
      type: object
    CampaignSetLeafNode:
      properties:
        type:
          description: Indicates the node type.
          enum:
          - CAMPAIGN
          type: string
        campaignId:
          description: ID of the campaign
          type: integer
      required:
      - campaignId
      - type
      type: object
    NewCampaignSet:
      description: ""
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        version:
          description: Version of the campaign set.
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignSetBranchNode'
      required:
      - applicationId
      - set
      - version
      type: object
    NewCampaignSetV2:
      description: ""
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        version:
          description: Version of the campaign set.
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignPrioritiesV2'
      required:
      - applicationId
      - set
      - version
      type: object
    ReferralConstraints:
      properties:
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          example: 2020-11-10T23:00:00Z
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          example: 2021-11-10T23:00:00Z
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. `0` means no limit but any campaign usage limits will still apply.
          example: 1
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
      type: object
    UpdateReferralBatch:
      properties:
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        batchID:
          description: The id of the batch the referral belongs to.
          example: 32535-43255
          title: Batch ID
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          example: 2020-11-10T23:00:00Z
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          example: 2021-11-10T23:00:00Z
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 1
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
      required:
      - batchID
      type: object
    NewReferral:
      description: ""
      example:
        expiryDate: 2021-11-10T23:00:00Z
        friendProfileIntegrationId: BZGGC2454PA
        usageLimit: 1
        campaignId: 78
        attributes: '{}'
        startDate: 2020-11-10T23:00:00Z
        advocateProfileIntegrationId: URNGV8294NV
      properties:
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          example: 2020-11-10T23:00:00Z
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          example: 2021-11-10T23:00:00Z
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. `0` means no limit but any campaign usage limits will still apply.
          example: 1
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        campaignId:
          description: ID of the campaign from which the referral received the referral
            code.
          example: 78
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationId:
          description: The Integration ID of the Advocate's Profile.
          example: URNGV8294NV
          maxLength: 1000
          title: Advocate's Profile ID
          type: string
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile.
          example: BZGGC2454PA
          title: Friend's Profile ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
      required:
      - advocateProfileIntegrationId
      - campaignId
      type: object
    ImportEntity:
      properties:
        importId:
          description: The ID of the Import which created this referral.
          type: integer
      type: object
    Referral:
      description: ""
      example:
        code: 27G47Y54VH9L
        created: 2020-06-10T09:05:27.993483Z
        usageLimit: 1
        campaignId: 78
        usageCounter: 1
        batchId: tqyrgahe
        advocateProfileIntegrationId: URNGV8294NV
        expiryDate: 2021-11-10T23:00:00Z
        importId: 1
        friendProfileIntegrationId: BZGGC2454PA
        attributes: '{}'
        id: 6
        startDate: 2020-11-10T23:00:00Z
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          example: 2020-11-10T23:00:00Z
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          example: 2021-11-10T23:00:00Z
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. `0` means no limit but any campaign usage limits will still apply.
          example: 1
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        campaignId:
          description: ID of the campaign from which the referral received the referral
            code.
          example: 78
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationId:
          description: The Integration ID of the Advocate's Profile.
          example: URNGV8294NV
          maxLength: 1000
          title: Advocate's Profile ID
          type: string
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile.
          example: BZGGC2454PA
          title: Friend's Profile ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        importId:
          description: The ID of the Import which created this referral.
          type: integer
        code:
          description: The referral code.
          example: 27G47Y54VH9L
          minLength: 4
          title: Referral code
          type: string
        usageCounter:
          description: The number of times this referral code has been successfully
            used.
          example: 1
          title: Referral code Usages
          type: integer
        batchId:
          description: The ID of the batch the referrals belong to.
          example: tqyrgahe
          title: Batch ID
          type: string
      required:
      - advocateProfileIntegrationId
      - campaignId
      - code
      - created
      - id
      - usageCounter
      - usageLimit
      type: object
    UpdateReferral:
      example:
        expiryDate: 2021-11-10T23:00:00Z
        friendProfileIntegrationId: BZGGC2454PA
        usageLimit: 1
        attributes: '{}'
        startDate: 2020-11-10T23:00:00Z
      properties:
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile.
          example: BZGGC2454PA
          maxLength: 1000
          title: Friend's Profile ID
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          example: 2020-11-10T23:00:00Z
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          example: 2021-11-10T23:00:00Z
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 1
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
      type: object
    NewReferralsForMultipleAdvocates:
      description: ""
      example:
        expiryDate: 2021-11-10T23:00:00Z
        advocateProfileIntegrationIds:
        - URNGV8294NV
        - DRPVV9476AF
        validCharacters:
        - E
        - F
        - I
        - Z
        - "1"
        - "2"
        - "3"
        usageLimit: 1
        campaignId: 45
        referralPattern: REF-###-###
        attributes: '{}'
        startDate: 2020-11-10T23:00:00Z
      properties:
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          example: 2020-11-10T23:00:00Z
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          example: 2021-11-10T23:00:00Z
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. `0` means no limit but any campaign usage limits will still apply.
          example: 1
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        campaignId:
          description: The ID of the campaign from which the referral received the
            referral code.
          example: 45
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationIds:
          description: An array containing all the respective advocate profiles.
          example:
          - URNGV8294NV
          - DRPVV9476AF
          items:
            type: string
          maxItems: 1000
          minItems: 1
          title: Advocate Profile List
          type: array
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        validCharacters:
          description: |
            List of characters used to generate the random parts of a code. By default, the list of characters
            is equivalent to the `[A-Z, 0-9]` regular expression.
          example:
          - E
          - F
          - I
          - Z
          - "1"
          - "2"
          - "3"
          items:
            type: string
          type: array
        referralPattern:
          description: |
            The pattern used to generate referrals. The character `#` is a placeholder and is replaced by a random character from the `validCharacters` set.
          example: REF-###-###
          maxLength: 100
          minLength: 3
          type: string
      required:
      - advocateProfileIntegrationIds
      - campaignId
      - usageLimit
      type: object
    InventoryReferral:
      description: ""
      example:
        code: 27G47Y54VH9L
        created: 2020-06-10T09:05:27.993483Z
        usageLimit: 1
        campaignId: 78
        usageCounter: 1
        batchId: tqyrgahe
        advocateProfileIntegrationId: URNGV8294NV
        expiryDate: 2021-11-10T23:00:00Z
        importId: 5
        friendProfileIntegrationId: BZGGC2454PA
        attributes: '{}'
        referredCustomers:
        - referredCustomers
        - referredCustomers
        id: 6
        startDate: 2020-11-10T23:00:00Z
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          example: 2020-11-10T23:00:00Z
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          example: 2021-11-10T23:00:00Z
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. `0` means no limit but any campaign usage limits will still apply.
          example: 1
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        campaignId:
          description: ID of the campaign from which the referral received the referral
            code.
          example: 78
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationId:
          description: The Integration ID of the Advocate's Profile.
          example: URNGV8294NV
          maxLength: 1000
          title: Advocate's Profile ID
          type: string
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile.
          example: BZGGC2454PA
          title: Friend's Profile ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        importId:
          description: The ID of the Import which created this referral.
          type: integer
        code:
          description: The referral code.
          example: 27G47Y54VH9L
          minLength: 4
          title: Referral code
          type: string
        usageCounter:
          description: The number of times this referral code has been successfully
            used.
          example: 1
          title: Referral code Usages
          type: integer
        batchId:
          description: The ID of the batch the referrals belong to.
          example: tqyrgahe
          title: Batch ID
          type: string
        referredCustomers:
          description: An array of referred customers.
          items:
            type: string
          type: array
      required:
      - advocateProfileIntegrationId
      - campaignId
      - code
      - created
      - id
      - referredCustomers
      - usageCounter
      - usageLimit
      type: object
    AttributeQuery:
      description: Object representing a set of of attributes and their respective
        values.
      example:
        my_attribute_1: some value
        my_attribute_2: some other value
        my_attribute_3: some other value
      type: object
    CouponSearch:
      properties:
        attributes:
          description: Properties to match against a coupon. All provided attributes
            will be exactly matched against attributes.
          properties: {}
          type: object
      required:
      - attributes
      type: object
    CampaignSearch:
      example:
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a campaign. All provided attributes
            will be exactly matched against campaign attributes.
          properties: {}
          type: object
      required:
      - attributes
      type: object
    CampaignCopy:
      example:
        name: name
        description: description
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        applicationIds:
        - 0
        - 0
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        name:
          description: Name of the copied campaign (Defaults to "Copy of original
            campaign name").
          type: string
        applicationIds:
          description: Application IDs of the applications to which a campaign should
            be copied to.
          items:
            type: integer
          type: array
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Timestamp when the campaign will become inactive.
          format: date-time
          type: string
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
      required:
      - applicationIds
      type: object
    NewCoupons:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        recipientIntegrationId: URNGV8294NV
        uniquePrefix: uniquePrefix
        couponPattern: SUMMER-#####
        validCharacters:
        - A
        - B
        - G
        - "Y"
        usageLimit: 100
        numberOfCoupons: 1
        attributes: '{}'
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
        limits:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
      properties:
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        limits:
          description: |
            Limits configuration for a coupon. These limits will override the limits
            set from the campaign.

            **Note:** Only usable when creating a single coupon which is not tied to a specific recipient.
            Only per-profile limits are allowed to be configured.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        numberOfCoupons:
          description: The number of new coupon codes to generate for the campaign.
            Must be at least 1.
          example: 1
          type: integer
        uniquePrefix:
          description: |
            **DEPRECATED** To create more than 20,000 coupons in one request, use [Create coupons asynchronously endpoint](https://docs.talon.one/management-api/#operation/createCouponsAsync).
          title: Coupon code unique prefix
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        recipientIntegrationId:
          description: The integration ID for this coupon's beneficiary's profile.
          example: URNGV8294NV
          maxLength: 1000
          title: Receiving customer profile integration ID
          type: string
        validCharacters:
          description: |
            List of characters used to generate the random parts of a code. By default,
            the list of characters is equivalent to the `[A-Z, 0-9]` regular expression.
          example:
          - A
          - B
          - G
          - "Y"
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern used to generate coupon codes.
            The character `#` is a placeholder and is replaced by a random character from the `validCharacters` set.
          example: SUMMER-#####
          maxLength: 100
          minLength: 3
          type: string
      required:
      - numberOfCoupons
      - usageLimit
      type: object
    NewCouponsForMultipleRecipients:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        couponPattern: couponPattern
        validCharacters:
        - validCharacters
        - validCharacters
        usageLimit: 100
        recipientsIntegrationIds:
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        attributes: '{}'
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        recipientsIntegrationIds:
          description: The integration IDs for recipients.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          title: Receiving customer profiles integration IDs
          type: array
        validCharacters:
          description: |
            List of characters used to generate the random parts of a code. By default, the list of
            characters is equivalent to the `[A-Z, 0-9]` regular expression.
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern used to generate coupon codes. The character `#` is a placeholder and is replaced by a random character from the `validCharacters` set.
          maxLength: 100
          minLength: 3
          type: string
      required:
      - recipientsIntegrationIds
      - usageLimit
      type: object
    UpdateCoupon:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        recipientIntegrationId: recipientIntegrationId
        usageLimit: 100
        attributes: '{}'
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
        limits:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
      properties:
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        limits:
          description: |
            Limits configuration for a coupon. These limits will override the limits
            set from the campaign.

            **Note:** Only usable when creating a single coupon which is not tied to a specific recipient.
            Only per-profile limits are allowed to be configured.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        recipientIntegrationId:
          description: The integration ID for this coupon's beneficiary's profile.
          maxLength: 1000
          title: Receiving customer profile integration ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
      type: object
    UpdateCouponBatch:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        usageLimit: 100
        attributes: '{}'
        batchID: batchID
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        batchID:
          description: The id of the batch the coupon belongs to.
          title: Batch ID
          type: string
      type: object
    Coupon:
      description: ""
      example:
        recipientIntegrationId: URNGV8294NV
        created: 2020-06-10T09:05:27.993483Z
        campaignId: 211
        usageLimit: 100
        referralId: 326632952
        usageCounter: 10
        batchId: 32535-43255
        discountCounter: 2.3021358869347655
        expiryDate: 2000-01-23T04:56:07.000+00:00
        importId: 9
        reservation: false
        attributes: '{}'
        id: 6
        value: XMAS-20-2021
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
        limits:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        discountRemainder: 7.061401241503109
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        value:
          description: The coupon code.
          example: XMAS-20-2021
          minLength: 4
          title: Coupon Code
          type: string
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        limits:
          description: |
            Limits configuration for a coupon. These limits will override the limits
            set from the campaign.

            **Note:** Only usable when creating a single coupon which is not tied to a specific recipient.
            Only per-profile limits are allowed to be configured.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        usageCounter:
          description: The number of times this coupon has been successfully used.
          example: 10
          title: Number of coupon usages
          type: integer
        discountCounter:
          description: The amount of discounts given on rules redeeming this coupon.
            Only usable if a coupon discount budget was set for this coupon.
          title: Discounts Given
          type: number
        discountRemainder:
          description: The remaining discount this coupon can give.
          title: Coupon Discount Remainder
          type: number
        attributes:
          description: Custom attributes associated with this coupon.
          properties: {}
          title: Attributes of coupon
          type: object
        referralId:
          description: The integration ID of the referring customer (if any) for whom
            this coupon was created as an effect.
          example: 326632952
          title: Advocate ID
          type: integer
        recipientIntegrationId:
          description: The Integration ID of the customer that is allowed to redeem
            this coupon.
          example: URNGV8294NV
          maxLength: 1000
          title: Recipient ID
          type: string
        importId:
          description: The ID of the Import which created this coupon.
          title: Import ID
          type: integer
        reservation:
          default: true
          description: |
            Defines the type of reservation:
            - `true`: The reservation is a soft reservation. Any customer can use the coupon. This is done via the [Create coupon reservation endpoint](/integration-api/#operation/createCouponReservation).
            - `false`: The reservation is a hard reservation. Only the associated customer (`recipientIntegrationId`) can use the coupon. This is done via the Campaign Manager when you create a coupon for a given `recipientIntegrationId`, the [Create coupons endpoint](/management-api/#operation/createCoupons) or [Create coupons for multiple recipients endpoint](/management-api/#operation/createCouponsForMultipleRecipients).
          example: false
          title: Reservation Status
          type: boolean
        batchId:
          description: The id of the batch the coupon belongs to.
          example: 32535-43255
          title: Batch ID
          type: string
      required:
      - campaignId
      - created
      - id
      - usageCounter
      - usageLimit
      - value
      type: object
    InventoryCoupon:
      description: ""
      example:
        recipientIntegrationId: URNGV8294NV
        created: 2020-06-10T09:05:27.993483Z
        campaignId: 211
        usageLimit: 100
        referralId: 326632952
        profileRedemptionCount: 5
        usageCounter: 10
        batchId: 32535-43255
        discountCounter: 0.8008281904610115
        expiryDate: 2000-01-23T04:56:07.000+00:00
        importId: 1
        reservation: false
        attributes: '{}'
        id: 6
        state: active
        value: XMAS-20-2021
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
        limits:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        discountRemainder: 6.027456183070403
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        value:
          description: The coupon code.
          example: XMAS-20-2021
          minLength: 4
          title: Coupon Code
          type: string
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        limits:
          description: |
            Limits configuration for a coupon. These limits will override the limits
            set from the campaign.

            **Note:** Only usable when creating a single coupon which is not tied to a specific recipient.
            Only per-profile limits are allowed to be configured.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        usageCounter:
          description: The number of times this coupon has been successfully used.
          example: 10
          title: Number of coupon usages
          type: integer
        discountCounter:
          description: The amount of discounts given on rules redeeming this coupon.
            Only usable if a coupon discount budget was set for this coupon.
          title: Discounts Given
          type: number
        discountRemainder:
          description: The remaining discount this coupon can give.
          title: Coupon Discount Remainder
          type: number
        attributes:
          description: Custom attributes associated with this coupon.
          properties: {}
          title: Attributes of coupon
          type: object
        referralId:
          description: The integration ID of the referring customer (if any) for whom
            this coupon was created as an effect.
          example: 326632952
          title: Advocate ID
          type: integer
        recipientIntegrationId:
          description: The Integration ID of the customer that is allowed to redeem
            this coupon.
          example: URNGV8294NV
          maxLength: 1000
          title: Recipient ID
          type: string
        importId:
          description: The ID of the Import which created this coupon.
          title: Import ID
          type: integer
        reservation:
          default: true
          description: |
            Defines the type of reservation:
            - `true`: The reservation is a soft reservation. Any customer can use the coupon. This is done via the [Create coupon reservation endpoint](/integration-api/#operation/createCouponReservation).
            - `false`: The reservation is a hard reservation. Only the associated customer (`recipientIntegrationId`) can use the coupon. This is done via the Campaign Manager when you create a coupon for a given `recipientIntegrationId`, the [Create coupons endpoint](/management-api/#operation/createCoupons) or [Create coupons for multiple recipients endpoint](/management-api/#operation/createCouponsForMultipleRecipients).
          example: false
          title: Reservation Status
          type: boolean
        batchId:
          description: The id of the batch the coupon belongs to.
          example: 32535-43255
          title: Batch ID
          type: string
        profileRedemptionCount:
          description: The number of times the coupon was redeemed by the profile.
          title: Number of coupon usages
          type: integer
        state:
          description: |
            Can be:

            - `active`: The coupon can be used. It is a reserved coupon that is neither pending, used nor expired, and has a non-exhausted limit counter.
            - `used`: The coupon has been redeemed and cannot be used again. It is not pending and has reached its redemption limit or was redeemed by the profile before expiration.
            - `expired`: The coupon was never redeemed and it is now expired. It is non-pending, non-active and non-used by the profile.
            - `pending`: The coupon will be usable in the future.
            - `disabled`: The coupon is part of a non-active campaign.
          example: active
          type: string
      required:
      - campaignId
      - created
      - id
      - profileRedemptionCount
      - state
      - usageCounter
      - usageLimit
      - value
      type: object
    CampaignAnalytics:
      description: ""
      example:
        date: 2000-01-23T04:56:07.000+00:00
        couponRolledbackRedemptions: 1
        totalCouponRolledbackRedemptions: 1
        campaignRefundedDiscounts: 9.301444243932576
        totalDeductedLoyaltyPoints: 9.018348186070783
        couponRedemptions: 7
        totalCampaignDiscountCosts: 7.061401241503109
        referralRedemptions: 6
        totalCampaignRevenue: 1.4658129805029452
        campaignRevenue: 6.027456183070403
        campaignDiscountCosts: 2.3021358869347655
        totalReferralRedemptions: 7
        couponsCreated: 1
        addedLoyaltyPoints: 9.369310271410669
        campaignRefund: 5.962133916683182
        campaignFreeItems: 2
        totalAddedLoyaltyPoints: 6.683562403749608
        totalCampaignFreeItems: 4
        totalCampaignRefundedDiscounts: 3.616076749251911
        totalCampaignRefund: 5.637376656633329
        totalCouponsCreated: 4
        deductedLoyaltyPoints: 8.762042012749001
        totalCouponRedemptions: 1
        referralsCreated: 5
        totalReferralsCreated: 9
      properties:
        date:
          format: date-time
          type: string
        campaignRevenue:
          description: Amount of revenue in this campaign (for coupon or discount
            sessions).
          type: number
        totalCampaignRevenue:
          description: Amount of revenue in this campaign since it began (for coupon
            or discount sessions).
          type: number
        campaignRefund:
          description: Amount of refunds in this campaign (for coupon or discount
            sessions).
          type: number
        totalCampaignRefund:
          description: Amount of refunds in this campaign since it began (for coupon
            or discount sessions).
          type: number
        campaignDiscountCosts:
          description: Amount of cost caused by discounts given in the campaign.
          type: number
        totalCampaignDiscountCosts:
          description: Amount of cost caused by discounts given in the campaign since
            it began.
          type: number
        campaignRefundedDiscounts:
          description: Amount of discounts rolledback due to refund in the campaign.
          type: number
        totalCampaignRefundedDiscounts:
          description: Amount of discounts rolledback due to refund in the campaign
            since it began.
          type: number
        campaignFreeItems:
          description: Amount of free items given in the campaign.
          type: integer
        totalCampaignFreeItems:
          description: Amount of free items given in the campaign since it began.
          type: integer
        couponRedemptions:
          description: Number of coupon redemptions in the campaign.
          type: integer
        totalCouponRedemptions:
          description: Number of coupon redemptions in the campaign since it began.
          type: integer
        couponRolledbackRedemptions:
          description: Number of coupon redemptions that have been rolled back (due
            to canceling closed session) in the campaign.
          type: integer
        totalCouponRolledbackRedemptions:
          description: Number of coupon redemptions that have been rolled back (due
            to canceling closed session) in the campaign since it began.
          type: integer
        referralRedemptions:
          description: Number of referral redemptions in the campaign.
          type: integer
        totalReferralRedemptions:
          description: Number of referral redemptions in the campaign since it began.
          type: integer
        couponsCreated:
          description: Number of coupons created in the campaign by the rule engine.
          type: integer
        totalCouponsCreated:
          description: Number of coupons created in the campaign by the rule engine
            since it began.
          type: integer
        referralsCreated:
          description: Number of referrals created in the campaign by the rule engine.
          type: integer
        totalReferralsCreated:
          description: Number of referrals created in the campaign by the rule engine
            since it began.
          type: integer
        addedLoyaltyPoints:
          description: Number of added loyalty points in the campaign in a specific
            interval.
          type: number
        totalAddedLoyaltyPoints:
          description: Number of added loyalty points in the campaign since it began.
          type: number
        deductedLoyaltyPoints:
          description: Number of deducted loyalty points in the campaign in a specific
            interval.
          type: number
        totalDeductedLoyaltyPoints:
          description: Number of deducted loyalty points in the campaign since it
            began.
          type: number
      required:
      - addedLoyaltyPoints
      - campaignDiscountCosts
      - campaignFreeItems
      - campaignRefund
      - campaignRefundedDiscounts
      - campaignRevenue
      - couponRedemptions
      - couponRolledbackRedemptions
      - couponsCreated
      - date
      - deductedLoyaltyPoints
      - referralRedemptions
      - referralsCreated
      - totalAddedLoyaltyPoints
      - totalCampaignDiscountCosts
      - totalCampaignFreeItems
      - totalCampaignRefund
      - totalCampaignRefundedDiscounts
      - totalCampaignRevenue
      - totalCouponRedemptions
      - totalCouponRolledbackRedemptions
      - totalCouponsCreated
      - totalDeductedLoyaltyPoints
      - totalReferralRedemptions
      - totalReferralsCreated
      type: object
    LoyaltyStatistics:
      description: ""
      example:
        date: 2000-01-23T04:56:07.000+00:00
        totalMembers: 5.637376656633329
        totalSpentPoints: 1.4658129805029452
        spentPoints:
          createdManually: 7.061401241503109
          createdViaRuleEngine: 9.301444243932576
        totalActivePoints: 0.8008281904610115
        totalPendingPoints: 6.027456183070403
        totalExpiredPoints: 5.962133916683182
        newMembers: 2.3021358869347655
        earnedPoints:
          createdManually: 7.061401241503109
          createdViaRuleEngine: 9.301444243932576
      properties:
        date:
          description: Date at which data point was collected.
          format: date-time
          type: string
        totalActivePoints:
          description: Total of active points for this loyalty program.
          type: number
        totalPendingPoints:
          description: Total of pending points for this loyalty program.
          type: number
        totalSpentPoints:
          description: Total of spent points for this loyalty program.
          type: number
        totalExpiredPoints:
          description: Total of expired points for this loyalty program.
          type: number
        totalMembers:
          description: Number of loyalty program members.
          type: number
        newMembers:
          description: Number of members who joined on this day.
          type: number
        spentPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
        earnedPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
      required:
      - date
      - earnedPoints
      - newMembers
      - spentPoints
      - totalActivePoints
      - totalExpiredPoints
      - totalMembers
      - totalPendingPoints
      - totalSpentPoints
      type: object
    LoyaltyDashboardData:
      description: Datapoint for the graphs and cards on a loyalty program dashboard.
      properties:
        date:
          description: Date at which data point was collected.
          format: date-time
          type: string
        totalActivePoints:
          description: Total of active points for this loyalty program.
          type: number
        totalPendingPoints:
          description: Total of pending points for this loyalty program.
          type: number
        totalSpentPoints:
          description: Total of spent points for this loyalty program.
          type: number
        totalExpiredPoints:
          description: Total of expired points for this loyalty program.
          type: number
        totalMembers:
          description: Number of loyalty program members.
          type: number
        newMembers:
          description: Number of members who joined on this day.
          type: number
        spentPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
        earnedPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
      required:
      - date
      - earnedPoints
      - newMembers
      - spentPoints
      - totalActivePoints
      - totalExpiredPoints
      - totalMembers
      - totalPendingPoints
      - totalSpentPoints
      type: object
    LoyaltyDashboardPointsBreakdown:
      example:
        createdManually: 7.061401241503109
        createdViaRuleEngine: 9.301444243932576
      properties:
        createdManually:
          type: number
        createdViaRuleEngine:
          type: number
      required:
      - createdManually
      - createdViaRuleEngine
      type: object
    ApplicationApiHealth:
      description: Report of health of the API connection of an application.
      example:
        summary: OK
        lastUsed: 2021-09-12T10:12:42Z
      properties:
        summary:
          description: One-word summary of the health of the API connection of an
            application.
          enum:
          - OK
          - WARNING
          - ERROR
          - CRITICAL
          - NONE
          type: string
        lastUsed:
          description: time of last request relevant to the API health test.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
      required:
      - lastUsed
      - summary
      type: object
    AccessLogEntry:
      description: Log of application accesses.
      example:
        method: method
        requestPayload: requestPayload
        responsePayload: responsePayload
        requestUri: requestUri
        time: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        status: 0
      properties:
        uuid:
          description: UUID reference of request.
          type: string
        status:
          description: HTTP status code of response.
          type: integer
        method:
          description: HTTP method of request.
          type: string
        requestUri:
          description: target URI of request
          type: string
        time:
          description: timestamp of request
          format: date-time
          type: string
        requestPayload:
          description: payload of request
          type: string
        responsePayload:
          description: payload of response
          type: string
      required:
      - method
      - requestPayload
      - requestUri
      - responsePayload
      - status
      - time
      - uuid
      type: object
    WebhookLogEntry:
      description: Log of webhook api calls.
      example:
        requestTime: 2000-01-23T04:56:07.000+00:00
        request: request
        webhookId: 6
        response: response
        responseTime: 2000-01-23T04:56:07.000+00:00
        integrationRequestUuid: integrationRequestUuid
        id: id
        applicationId: 1
        url: url
        status: 5
      properties:
        id:
          description: UUID reference of the webhook request.
          type: string
        integrationRequestUuid:
          description: UUID reference of the integration request linked to this webhook
            request.
          type: string
        webhookId:
          description: ID of the webhook that triggered the request.
          type: integer
        applicationId:
          description: ID of the application that triggered the webhook.
          type: integer
        url:
          description: Target url of request
          type: string
        request:
          description: Request message
          type: string
        response:
          description: Response message
          type: string
        status:
          description: HTTP status code of response.
          type: integer
        requestTime:
          description: Timestamp of request
          format: date-time
          type: string
        responseTime:
          description: Timestamp of response
          format: date-time
          type: string
      required:
      - id
      - integrationRequestUuid
      - request
      - requestTime
      - url
      - webhookId
      type: object
    WebhookActivationLogEntry:
      description: Log of activated webhooks.
      example:
        webhookId: 6
        campaignId: 5
        created: 2000-01-23T04:56:07.000+00:00
        integrationRequestUuid: integrationRequestUuid
        applicationId: 1
      properties:
        integrationRequestUuid:
          description: UUID reference of the integration request that triggered the
            effect with the webhook.
          type: string
        webhookId:
          description: ID of the webhook that triggered the request.
          type: integer
        applicationId:
          description: ID of the application that triggered the webhook.
          type: integer
        campaignId:
          description: ID of the campaign that triggered the webhook.
          type: integer
        created:
          description: Timestamp of request
          format: date-time
          type: string
      required:
      - applicationId
      - campaignId
      - created
      - integrationRequestUuid
      - webhookId
      type: object
    User:
      description: ""
      example:
        created: 2020-06-10T09:05:27.993483Z
        roles:
        - 71
        accountId: 3886
        applicationNotificationSubscriptions: '{}'
        inviteToken: Gy9b8w1irmQtEPo5RmbMmSPheL5h4
        name: John Doe
        modified: 2021-09-12T10:12:42Z
        id: 6
        state: invited
        latestFeedTimestamp: 2020-06-01T00:00:00Z
        authMethod: basic_auth
        email: john.doe@example.com
        policy:
          Role: 127
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        inviteToken:
          description: Invite token, empty if the user as already accepted their invite.
          example: Gy9b8w1irmQtEPo5RmbMmSPheL5h4
          type: string
        state:
          description: Current user state.
          enum:
          - invited
          - active
          - deactivated
          example: invited
          type: string
        name:
          description: Full name
          example: John Doe
          type: string
        policy:
          description: User ACL Policy
          example:
            Role: 127
          properties: {}
          type: object
        latestFeedTimestamp:
          description: Latest timestamp the user has been notified for feed.
          example: 2020-06-01T00:00:00Z
          format: date-time
          type: string
        roles:
          description: Contains a list of all roles the user is a member of.
          example:
          - 71
          items:
            type: integer
          type: array
        applicationNotificationSubscriptions:
          properties: {}
          type: object
        authMethod:
          description: The Authentication method for this user.
          example: basic_auth
          type: string
      required:
      - accountId
      - created
      - email
      - id
      - inviteToken
      - modified
      - name
      - policy
      - state
      type: object
    NewInvitation:
      description: Parameters for inviting a new user.
      properties:
        name:
          description: Name of the user being invited.
          example: John Doe
          type: string
        email:
          example: john.doe@example.com
          format: email
          type: string
        acl:
          description: |
            The `Access Control List` json defining the role of the user. This represents the actual access control on the user level.
            Use one of the following:
            - normal user: `{"Role": 0}`
            - admin: `{"Role": 127}`
          example: '{"Role":0}'
          type: string
        roles:
          description: An array of roleIDs to assign the new user to.
          items:
            type: integer
          type: array
      required:
      - acl
      - email
      type: object
    Change:
      description: ""
      example:
        new:
          applicationId": 359
          attributes": {}
          campaignGroups": []
          created": 2022-07-08T13:04:02.972762328Z
          description": ""
          features":
          - referrals
          - loyalty
          id: 6727
        created: 2020-06-10T09:05:27.993483Z
        old: '{}'
        id: 6
        applicationId: 359
        userId: 6
        entity: /v1/applications/359/campaigns/6727
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        applicationId:
          description: ID of application associated with change.
          example: 359
          type: integer
        entity:
          description: API endpoint on which the change was initiated.
          example: /v1/applications/359/campaigns/6727
          type: string
        old:
          description: Resource before the change occurred.
          properties: {}
          type: object
        new:
          description: Resource after the change occurred.
          example:
            applicationId": 359
            attributes": {}
            campaignGroups": []
            created": 2022-07-08T13:04:02.972762328Z
            description": ""
            features":
            - referrals
            - loyalty
            id: 6727
          properties: {}
          type: object
      required:
      - created
      - entity
      - id
      - userId
      type: object
    LoyaltyPoints:
      description: Points to add or deduct.
      example:
        name: name
        validityDuration: validityDuration
        pendingDuration: pendingDuration
        subLedgerID: subLedgerID
        points: 300.0
      properties:
        points:
          description: Amount of loyalty points.
          example: 300.0
          exclusiveMaximum: false
          exclusiveMinimum: true
          maximum: 999999999999.99
          minimum: 0
          type: number
        name:
          description: Allows to specify a name/reason for the point addition or deduction.
          type: string
        validityDuration:
          description: Indicates the duration after which the added loyalty points
            should expire. The format is a number followed by one letter indicating
            the time unit, like '1h' or '40m' (defined by Go time package).
          type: string
        pendingDuration:
          description: Indicates the amount of time before the points are considered
            valid. The format is a number followed by one letter indicating the time
            unit, like '1h' or '40m' (defined by Go time package).
          type: string
        subLedgerID:
          description: This specifies if we are adding loyalty points to the main
            ledger or a subledger.
          type: string
      required:
      - points
      type: object
    LoyaltyProgram:
      description: ""
      example:
        cardBased: true
        tiers:
        - name: Gold
          minPoints: 300
          id: 3
          created: 2021-06-10T09:05:27.993483Z
          programID: 139
        - name: Silver
          minPoints: 200
          id: 2
          created: 2021-06-10T09:04:59.355258Z
          programId: 139
        - name: Bronze
          minPoints: 100
          id: 1
          created: 2021-06-10T09:04:39.355258Z
          programId: 139
        usersPerCardLimit: 111
        created: 2020-06-10T09:05:27.993483Z
        timezone: Europe/Berlin
        description: Customers collect 10 points per 1$ spent
        title: Point collection
        subscribedApplications:
        - 132
        - 97
        accountID: 1
        defaultValidity: unlimited
        defaultPending: immediate
        allowSubledger: false
        name: my_program
        id: 6
      properties:
        id:
          description: The ID of loyalty program. Unique ID for this entity. Not to
            be confused with the Integration ID, which is set by your integration
            layer and used in most endpoints.
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        title:
          description: The display title for the Loyalty Program.
          example: Point collection
          type: string
        description:
          description: Description of our Loyalty Program.
          example: Customers collect 10 points per 1$ spent
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          example:
          - 132
          - 97
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          example: unlimited
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          example: immediate
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program.
          example: false
          type: boolean
        usersPerCardLimit:
          description: |
            The max amount of user profiles with whom a card can be shared. This can be set to 0 for no limit.
            This property is only used when `cardBased` is `true`.
          example: 111
          minimum: 0
          type: integer
        accountID:
          description: The ID of the Talon.One account that owns this program.
          example: 1
          type: integer
        name:
          description: The internal name for the Loyalty Program. This is an immutable
            value.
          example: my_program
          type: string
        tiers:
          description: The tiers in this loyalty program.
          example:
          - name: Gold
            minPoints: 300
            id: 3
            created: 2021-06-10T09:05:27.993483Z
            programID: 139
          - name: Silver
            minPoints: 200
            id: 2
            created: 2021-06-10T09:04:59.355258Z
            programId: 139
          - name: Bronze
            minPoints: 100
            id: 1
            created: 2021-06-10T09:04:39.355258Z
            programId: 139
          items:
            $ref: '#/components/schemas/LoyaltyTier'
          type: array
        timezone:
          description: A string containing an IANA timezone descriptor.
          example: Europe/Berlin
          minLength: 1
          type: string
        cardBased:
          default: false
          description: |
            Defines the type of loyalty program:
            - `true`: the program is a card-based.
            - `false`: the program is profile-based.
          example: true
          type: boolean
      required:
      - accountID
      - allowSubledger
      - cardBased
      - created
      - defaultPending
      - defaultValidity
      - description
      - id
      - name
      - subscribedApplications
      - timezone
      - title
      type: object
    LoyaltyTier:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        programID:
          description: The ID of the loyalty program that owns this entity.
          example: 125
          type: integer
        name:
          description: The name of the tier
          example: Gold
          type: string
        minPoints:
          description: The minimum amount of points required to be eligible for the
            tier.
          example: 300.0
          exclusiveMaximum: false
          maximum: 999999999999.99
          minimum: 0
          type: number
      required:
      - created
      - id
      - minPoints
      - name
      - programID
      type: object
    NewLoyaltyTier:
      description: A tier in a loyalty program.
      properties:
        name:
          description: The name of the tier
          example: Gold
          type: string
        minPoints:
          description: The minimum amount of points required to be eligible for the
            tier.
          example: 300.0
          exclusiveMaximum: false
          maximum: 999999999999.99
          minimum: 0
          type: number
      required:
      - minPoints
      - name
      type: object
    BaseLoyaltyProgram:
      properties:
        title:
          description: The display title for the Loyalty Program.
          example: Point collection
          type: string
        description:
          description: Description of our Loyalty Program.
          example: Customers collect 10 points per 1$ spent
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          example:
          - 132
          - 97
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          example: unlimited
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          example: immediate
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program.
          example: false
          type: boolean
        usersPerCardLimit:
          description: |
            The max amount of user profiles with whom a card can be shared. This can be set to 0 for no limit.
            This property is only used when `cardBased` is `true`.
          example: 111
          minimum: 0
          type: integer
      type: object
    NewLoyaltyProgram:
      description: ""
      properties:
        title:
          description: The display title for the Loyalty Program.
          example: Point collection
          type: string
        description:
          description: Description of our Loyalty Program.
          example: Customers collect 10 points per 1$ spent
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          example:
          - 132
          - 97
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          example: unlimited
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          example: immediate
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program.
          example: false
          type: boolean
        usersPerCardLimit:
          description: |
            The max amount of user profiles with whom a card can be shared. This can be set to 0 for no limit.
            This property is only used when `cardBased` is `true`.
          example: 111
          minimum: 0
          type: integer
        name:
          description: The internal name for the Loyalty Program. This is an immutable
            value.
          example: GeneralPointCollection
          type: string
        tiers:
          description: The tiers in this loyalty program.
          items:
            $ref: '#/components/schemas/NewLoyaltyTier'
          type: array
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        cardBased:
          default: false
          description: |
            Defines the type of loyalty program:
            - `true`: the program is a card-based.
            - `false`: the program is profile-based.
          example: true
          type: boolean
      required:
      - allowSubledger
      - cardBased
      - defaultPending
      - defaultValidity
      - name
      - timezone
      - title
      type: object
    UpdateLoyaltyProgram:
      description: ""
      properties:
        title:
          description: The display title for the Loyalty Program.
          example: Point collection
          type: string
        description:
          description: Description of our Loyalty Program.
          example: Customers collect 10 points per 1$ spent
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          example:
          - 132
          - 97
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          example: unlimited
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          example: immediate
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program.
          example: false
          type: boolean
        usersPerCardLimit:
          description: |
            The max amount of user profiles with whom a card can be shared. This can be set to 0 for no limit.
            This property is only used when `cardBased` is `true`.
          example: 111
          minimum: 0
          type: integer
        tiers:
          description: The tiers in this loyalty program.
          items:
            $ref: '#/components/schemas/NewLoyaltyTier'
          type: array
      type: object
    LoyaltyLedgerTransactions:
      description: List of loyalty ledger transactions.
      properties:
        hasMore:
          description: true means there is more data in the source collection to request.
          example: true
          type: boolean
        data:
          description: List of transaction entries from a loyalty ledger.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
      type: object
    LoyaltyLedgerEntry:
      description: A single row of the ledger, describing one addition or deduction.
      example:
        eventID: 9
        amount: 3.616076749251911
        created: 2000-01-23T04:56:07.000+00:00
        subLedgerID: subLedgerID
        customerSessionID: customerSessionID
        type: type
        userID: 2
        expiryDate: 2000-01-23T04:56:07.000+00:00
        customerProfileID: customerProfileID
        cardID: 7
        name: name
        programID: 2
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          format: date-time
          type: string
        programID:
          type: integer
        customerProfileID:
          type: string
        cardID:
          type: integer
        customerSessionID:
          type: string
        eventID:
          type: integer
        type:
          description: |
            The type of the ledger transaction. Possible values are addition, subtraction, expire or expiring (for expiring points ledgers)
          type: string
        amount:
          type: number
        startDate:
          format: date-time
          type: string
        expiryDate:
          format: date-time
          type: string
        name:
          description: A name referencing the condition or effect that added this
            entry, or the specific name provided in an API call.
          type: string
        subLedgerID:
          description: This specifies if we are adding loyalty points to the main
            ledger or a subledger.
          type: string
        userID:
          description: This is the ID of the user who created this entry, if the addition
            or subtraction was done manually.
          type: integer
      required:
      - amount
      - created
      - name
      - programID
      - subLedgerID
      - type
      type: object
    LoyaltyBalances:
      description: List of loyalty balances for a ledger and its subledgers.
      properties:
        balance:
          $ref: '#/components/schemas/LoyaltyBalance'
        subledgerBalances:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltyBalance'
          description: Map of the loyalty balances of the subledgers of a ledger.
          type: object
      type: object
    LoyaltyBalance:
      description: Point balance of a ledger in the Loyalty Program.
      properties:
        activePoints:
          description: Total amount of points awarded to this customer and available
            to spend.
          title: Current Balance
          type: number
        pendingPoints:
          description: Total amount of points awarded to this customer but not available
            until their start date.
          title: Total pending points
          type: number
        spentPoints:
          description: Total amount of points already spent by this customer.
          title: Total spent points
          type: number
        expiredPoints:
          description: Total amount of points awarded but never redeemed. They cannot
            be used anymore.
          title: Total expired points
          type: number
      type: object
    LoyaltyLedger:
      description: Ledger of Balance in Loyalty Program for a Customer.
      example:
        ledger:
          total: 0.8008281904610115
          totalSpentPoints: 5.962133916683182
          activePoints:
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          expiringPoints:
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          totalActivePoints: 6.027456183070403
          totalPendingPoints: 1.4658129805029452
          totalExpiredPoints: 5.637376656633329
          transactions:
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          expiredPoints:
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          currentTier:
            name: bronze
            id: 11
          pendingPoints:
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - eventID: 9
            amount: 3.616076749251911
            created: 2000-01-23T04:56:07.000+00:00
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 2
            expiryDate: 2000-01-23T04:56:07.000+00:00
            customerProfileID: customerProfileID
            cardID: 7
            name: name
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
        subLedgers:
          key:
            total: 0.8008281904610115
            totalSpentPoints: 5.962133916683182
            activePoints:
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            expiringPoints:
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            totalActivePoints: 6.027456183070403
            totalPendingPoints: 1.4658129805029452
            totalExpiredPoints: 5.637376656633329
            transactions:
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            expiredPoints:
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            currentTier:
              name: bronze
              id: 11
            pendingPoints:
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - eventID: 9
              amount: 3.616076749251911
              created: 2000-01-23T04:56:07.000+00:00
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 2
              expiryDate: 2000-01-23T04:56:07.000+00:00
              customerProfileID: customerProfileID
              cardID: 7
              name: name
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        ledger:
          $ref: '#/components/schemas/LoyaltySubLedger'
        subLedgers:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltySubLedger'
          description: A map containing a list of all loyalty subledger balances.
          type: object
      required:
      - ledger
      type: object
    LoyaltySubLedger:
      description: Ledger of Balance in Loyalty Program for a Customer.
      example:
        total: 0.8008281904610115
        totalSpentPoints: 5.962133916683182
        activePoints:
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        expiringPoints:
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        totalActivePoints: 6.027456183070403
        totalPendingPoints: 1.4658129805029452
        totalExpiredPoints: 5.637376656633329
        transactions:
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        expiredPoints:
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        currentTier:
          name: bronze
          id: 11
        pendingPoints:
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - eventID: 9
          amount: 3.616076749251911
          created: 2000-01-23T04:56:07.000+00:00
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 2
          expiryDate: 2000-01-23T04:56:07.000+00:00
          customerProfileID: customerProfileID
          cardID: 7
          name: name
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          description: |
            **DEPRECATED** Use `totalActivePoints` property instead. Total amount of currently active and available points in the customer's balance.
          title: Current Balance (Deprecated)
          type: number
        totalActivePoints:
          description: Total amount of currently active and available points in the
            customer's balance.
          title: Current Balance
          type: number
        totalPendingPoints:
          description: Total amount of pending points, which are not active yet but
            will become active in the future.
          title: Total pending points
          type: number
        totalSpentPoints:
          description: Total amount of points already spent by this customer.
          title: Total spent points
          type: number
        totalExpiredPoints:
          description: Total amount of points, that expired without ever being spent.
          title: Total expired points
          type: number
        transactions:
          description: List of all events that have happened such as additions, subtractions
            and expiries.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        expiringPoints:
          description: List of all points that will expire.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        activePoints:
          description: List of all currently active points.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        pendingPoints:
          description: List of all points pending activation.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        expiredPoints:
          description: List of expired points.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        currentTier:
          $ref: '#/components/schemas/Tier'
      required:
      - total
      - totalActivePoints
      - totalExpiredPoints
      - totalPendingPoints
      - totalSpentPoints
      type: object
    Loyalty:
      description: Customer specific information about loyalty points.
      example:
        cards:
        - ledger:
            pendingBalance: 10.0
            currentBalance: 46.0
            spentBalance: 84.0
            tentativeCurrentBalance: 56.0
            pointsToNextTier: 20.0
            projection:
              projections:
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              totalActivatingPoints: 40.0
              totalExpiringPoints: 10.0
            expiredBalance: 30.0
            currentTier:
              name: bronze
              id: 11
          identifier: identifier
          usersPerCardLimit: 111
          created: 2020-06-10T09:05:27.993483Z
          profiles:
          - integrationId: integrationId
            timestamp: 2021-09-12T10:12:42Z
          - integrationId: integrationId
            timestamp: 2021-09-12T10:12:42Z
          subledgers:
            key:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
          modified: 2021-09-12T10:12:42Z
          id: 6
          programID: 125
          status: status
        - ledger:
            pendingBalance: 10.0
            currentBalance: 46.0
            spentBalance: 84.0
            tentativeCurrentBalance: 56.0
            pointsToNextTier: 20.0
            projection:
              projections:
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              totalActivatingPoints: 40.0
              totalExpiringPoints: 10.0
            expiredBalance: 30.0
            currentTier:
              name: bronze
              id: 11
          identifier: identifier
          usersPerCardLimit: 111
          created: 2020-06-10T09:05:27.993483Z
          profiles:
          - integrationId: integrationId
            timestamp: 2021-09-12T10:12:42Z
          - integrationId: integrationId
            timestamp: 2021-09-12T10:12:42Z
          subledgers:
            key:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
          modified: 2021-09-12T10:12:42Z
          id: 6
          programID: 125
          status: status
        programs:
          key:
            ledger:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
            subLedgers:
              key:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
            name: program1
            id: 5
            title: My loyalty program
      properties:
        cards:
          description: Displays information about the balances of the loyalty cards.
          items:
            $ref: '#/components/schemas/LoyaltyCard'
          title: Point balances of the loyalty cards used.
          type: array
        programs:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltyProgramLedgers'
          description: Displays information about point balances in profile-based
            programs.
          title: Customer's current loyalty program balance.
          type: object
      required:
      - programs
      type: object
    LoyaltyProgramLedgers:
      description: Customer specific information about loyalty points.
      example:
        ledger:
          pendingBalance: 10.0
          currentBalance: 46.0
          spentBalance: 84.0
          tentativeCurrentBalance: 56.0
          pointsToNextTier: 20.0
          projection:
            projections:
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            totalActivatingPoints: 40.0
            totalExpiringPoints: 10.0
          expiredBalance: 30.0
          currentTier:
            name: bronze
            id: 11
        subLedgers:
          key:
            pendingBalance: 10.0
            currentBalance: 46.0
            spentBalance: 84.0
            tentativeCurrentBalance: 56.0
            pointsToNextTier: 20.0
            projection:
              projections:
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              totalActivatingPoints: 40.0
              totalExpiringPoints: 10.0
            expiredBalance: 30.0
            currentTier:
              name: bronze
              id: 11
        name: program1
        id: 5
        title: My loyalty program
      properties:
        id:
          description: The internal ID of loyalty program.
          example: 5
          type: integer
        title:
          description: Visible name of loyalty program.
          example: My loyalty program
          type: string
        name:
          description: Internal name of loyalty program.
          example: program1
          type: string
        ledger:
          $ref: '#/components/schemas/LedgerInfo'
        subLedgers:
          additionalProperties:
            $ref: '#/components/schemas/LedgerInfo'
          description: A map containing information about each loyalty subledger.
          type: object
      required:
      - id
      - ledger
      - name
      - title
      type: object
    LedgerInfo:
      description: ""
      example:
        pendingBalance: 10.0
        currentBalance: 46.0
        spentBalance: 84.0
        tentativeCurrentBalance: 56.0
        pointsToNextTier: 20.0
        projection:
          projections:
          - date: 2000-01-23T04:56:07.000+00:00
            activatingPoints: 25.0
            projectedBalance: 57.0
            expiringPoints: 14.0
          - date: 2000-01-23T04:56:07.000+00:00
            activatingPoints: 25.0
            projectedBalance: 57.0
            expiringPoints: 14.0
          - date: 2000-01-23T04:56:07.000+00:00
            activatingPoints: 25.0
            projectedBalance: 57.0
            expiringPoints: 14.0
          - date: 2000-01-23T04:56:07.000+00:00
            activatingPoints: 25.0
            projectedBalance: 57.0
            expiringPoints: 14.0
          - date: 2000-01-23T04:56:07.000+00:00
            activatingPoints: 25.0
            projectedBalance: 57.0
            expiringPoints: 14.0
          totalActivatingPoints: 40.0
          totalExpiringPoints: 10.0
        expiredBalance: 30.0
        currentTier:
          name: bronze
          id: 11
      properties:
        currentBalance:
          description: Sum of currently active points.
          example: 46.0
          title: Current balance
          type: number
        pendingBalance:
          description: Sum of pending points.
          example: 10.0
          title: Pending balance
          type: number
        expiredBalance:
          description: Sum of expired points.
          example: 30.0
          title: Expired balance
          type: number
        spentBalance:
          description: Sum of spent points.
          example: 84.0
          title: Spent balance
          type: number
        tentativeCurrentBalance:
          description: Sum of currently active points, including points added and
            deducted in open sessions.
          example: 56.0
          title: Tentative current balance
          type: number
        currentTier:
          $ref: '#/components/schemas/Tier'
        pointsToNextTier:
          description: Points required to move up a tier.
          example: 20.0
          type: number
        projection:
          $ref: '#/components/schemas/LoyaltyProjection'
      required:
      - currentBalance
      - expiredBalance
      - pendingBalance
      - spentBalance
      - tentativeCurrentBalance
      type: object
    Tier:
      example:
        name: bronze
        id: 11
      properties:
        id:
          description: The internal ID of the tier.
          example: 11
          type: integer
        name:
          description: The name of the tier.
          example: bronze
          type: string
      required:
      - id
      - name
      type: object
    LoyaltyCard:
      description: ""
      example:
        ledger:
          pendingBalance: 10.0
          currentBalance: 46.0
          spentBalance: 84.0
          tentativeCurrentBalance: 56.0
          pointsToNextTier: 20.0
          projection:
            projections:
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            - date: 2000-01-23T04:56:07.000+00:00
              activatingPoints: 25.0
              projectedBalance: 57.0
              expiringPoints: 14.0
            totalActivatingPoints: 40.0
            totalExpiringPoints: 10.0
          expiredBalance: 30.0
          currentTier:
            name: bronze
            id: 11
        identifier: identifier
        usersPerCardLimit: 111
        created: 2020-06-10T09:05:27.993483Z
        profiles:
        - integrationId: integrationId
          timestamp: 2021-09-12T10:12:42Z
        - integrationId: integrationId
          timestamp: 2021-09-12T10:12:42Z
        subledgers:
          key:
            pendingBalance: 10.0
            currentBalance: 46.0
            spentBalance: 84.0
            tentativeCurrentBalance: 56.0
            pointsToNextTier: 20.0
            projection:
              projections:
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              - date: 2000-01-23T04:56:07.000+00:00
                activatingPoints: 25.0
                projectedBalance: 57.0
                expiringPoints: 14.0
              totalActivatingPoints: 40.0
              totalExpiringPoints: 10.0
            expiredBalance: 30.0
            currentTier:
              name: bronze
              id: 11
        modified: 2021-09-12T10:12:42Z
        id: 6
        programID: 125
        status: status
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        programID:
          description: The ID of the loyalty program that owns this entity.
          example: 125
          type: integer
        status:
          description: |
            Status of the loyalty card. Can be one of: ['active', 'disabled']
          type: string
        identifier:
          description: The alphanumeric identifier of the loyalty card.
          type: string
        usersPerCardLimit:
          description: |
            The max amount of user profiles a card can be shared with. 0 means unlimited.
          example: 111
          minimum: 0
          type: integer
        profiles:
          description: Integration IDs of the customers associated with the card.
          items:
            $ref: '#/components/schemas/LoyaltyCardProfileRegistration'
          type: array
        ledger:
          $ref: '#/components/schemas/LedgerInfo'
        subledgers:
          additionalProperties:
            $ref: '#/components/schemas/LedgerInfo'
          description: Displays point balances of the card in the subledgers of the
            loyalty program.
          type: object
        modified:
          description: Timestamp of the most recent update of the loyalty card.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
      required:
      - created
      - id
      - identifier
      - programID
      - status
      - usersPerCardLimit
      type: object
    CardLedgerTransactionLogEntry:
      description: Log entry for a given loyalty card transaction.
      properties:
        created:
          description: Date and time the loyalty card transaction occurred.
          format: date-time
          type: string
        programId:
          description: ID of the loyalty program.
          example: 324
          type: integer
        cardIdentifier:
          description: Identifier of the loyalty card.
          example: summer-loyalty-card-0543
          maxLength: 255
          type: string
        applicationId:
          description: The ID of the Application that owns this entity.
          example: 322
          type: integer
        sessionId:
          description: |
            The **internal** ID of the session.
          example: 233
          type: integer
        customerSessionId:
          description: ID of the customer session where the transaction occurred.
          example: 05c2da0d-48fa-4aa1-b629-898f58f1584d
          maxLength: 255
          type: string
        type:
          description: |
            Type of transaction. Possible values are:
              - `addition`: Points were added.
              - `subtraction`: Points were subtracted.
          enum:
          - addition
          - subtraction
          example: addition
          maxLength: 255
          type: string
        name:
          description: Name or reason of the loyalty ledger transaction.
          example: Reward 10% points of a purchase's current total
          maxLength: 255
          type: string
        startDate:
          description: |
            Date when points become active. Possible values are:
              - `immediate`: Points are active immediately.
              - `timestamp value`: Points become active from the given date.
          example: 2022-01-02T15:04:05Z07:00
          maxLength: 64
          type: string
        expiryDate:
          description: |
            Date when points expire. Possible values are:
              - `unlimited`: Points have no expiration date.
              - `timestamp value`: Points become active from the given date.
          example: 2022-01-02T15:04:05Z07:00
          type: string
        subledgerId:
          description: ID of the subledger.
          example: sub-123
          maxLength: 64
          type: string
        amount:
          description: Amount of loyalty points added or deducted in the transaction.
          example: 10.25
          type: number
        id:
          description: ID of the loyalty ledger entry.
          example: 123
          type: integer
      required:
      - amount
      - cardIdentifier
      - created
      - customerSessionId
      - expiryDate
      - id
      - name
      - programId
      - startDate
      - subledgerId
      - type
      type: object
    CardLedgerTransactionLogEntryIntegrationAPI:
      description: Log entry for a given loyalty card transaction.
      properties:
        created:
          description: Date and time the loyalty card transaction occurred.
          format: date-time
          type: string
        programId:
          description: ID of the loyalty program.
          example: 324
          type: integer
        cardIdentifier:
          description: Identifier of the loyalty card.
          example: summer-loyalty-card-0543
          maxLength: 255
          type: string
        customerSessionId:
          description: ID of the customer session where the transaction occurred.
          example: 05c2da0d-48fa-4aa1-b629-898f58f1584d
          maxLength: 255
          type: string
        type:
          description: |
            Type of transaction. Possible values are:
              - `addition`: Points were added.
              - `subtraction`: Points were subtracted.
          enum:
          - addition
          - subtraction
          example: addition
          maxLength: 255
          type: string
        name:
          description: Name or reason of the loyalty ledger transaction.
          example: Reward 10% points of a purchase's current total
          maxLength: 255
          type: string
        startDate:
          description: |
            Date when points become active. Possible values are:
              - `immediate`: Points are active immediately.
              - `timestamp value`: Points become active from the given date.
          example: 2022-01-02T15:04:05Z07:00
          maxLength: 64
          type: string
        expiryDate:
          description: |
            Date when points expire. Possible values are:
              - `unlimited`: Points have no expiration date.
              - `timestamp value`: Points expire on the given date.
          example: 2022-01-02T15:04:05Z07:00
          type: string
        subledgerId:
          description: ID of the subledger.
          example: sub-123
          maxLength: 64
          type: string
        amount:
          description: Amount of loyalty points added or deducted in the transaction.
          example: 10.25
          type: number
        id:
          description: ID of the loyalty ledger transaction.
          example: 123
          type: integer
        rulesetId:
          description: The ID of the ruleset containing the rule that triggered this
            effect.
          example: 11
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect.
          example: Add 2 points
          type: string
      required:
      - amount
      - cardIdentifier
      - created
      - customerSessionId
      - expiryDate
      - id
      - name
      - programId
      - startDate
      - subledgerId
      - type
      type: object
    LedgerTransactionLogEntryIntegrationAPI:
      description: Log entry for a given loyalty card transaction.
      example:
        expiryDate: 2022-01-02T15:04:05Z07:00
        rulesetId: 11
        amount: 10.25
        created: 2000-01-23T04:56:07.000+00:00
        subledgerId: sub-123
        name: Reward 10% points of a purchase's current total
        ruleName: Add 2 points
        customerSessionId: 05c2da0d-48fa-4aa1-b629-898f58f1584d
        id: 123
        type: addition
        programId: 324
        startDate: 2022-01-02T15:04:05Z07:00
      properties:
        created:
          description: Date and time the loyalty card transaction occurred.
          format: date-time
          type: string
        programId:
          description: ID of the loyalty program.
          example: 324
          type: integer
        customerSessionId:
          description: ID of the customer session where the transaction occurred.
          example: 05c2da0d-48fa-4aa1-b629-898f58f1584d
          maxLength: 255
          type: string
        type:
          description: |
            Type of transaction. Possible values are:
              - `addition`: Points were added.
              - `subtraction`: Points were subtracted.
          enum:
          - addition
          - subtraction
          example: addition
          maxLength: 255
          type: string
        name:
          description: Name or reason of the loyalty ledger transaction.
          example: Reward 10% points of a purchase's current total
          maxLength: 255
          type: string
        startDate:
          description: |
            Date when points become active. Possible values are:
              - `immediate`: Points are active immediately.
              - `timestamp value`: Points become active from the given date.
          example: 2022-01-02T15:04:05Z07:00
          maxLength: 64
          type: string
        expiryDate:
          description: |
            Date when points expire. Possible values are:
              - `unlimited`: Points have no expiration date.
              - `timestamp value`: Points expire on the given date.
          example: 2022-01-02T15:04:05Z07:00
          type: string
        subledgerId:
          description: ID of the subledger.
          example: sub-123
          maxLength: 64
          type: string
        amount:
          description: Amount of loyalty points added or deducted in the transaction.
          example: 10.25
          type: number
        id:
          description: ID of the loyalty ledger transaction.
          example: 123
          type: integer
        rulesetId:
          description: The ID of the ruleset containing the rule that triggered this
            effect.
          example: 11
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect.
          example: Add 2 points
          type: string
      required:
      - amount
      - created
      - customerSessionId
      - expiryDate
      - id
      - name
      - programId
      - startDate
      - subledgerId
      - type
      type: object
    UpdateLoyaltyCard:
      properties:
        status:
          description: |
            Status of the loyalty card. Can be one of: ['active', 'disabled']
          type: string
      required:
      - status
      type: object
    LoyaltyCardProfileRegistration:
      example:
        integrationId: integrationId
        timestamp: 2021-09-12T10:12:42Z
      properties:
        integrationId:
          description: Integration ID of the customer associated with the card.
          maxLength: 1000
          type: string
        timestamp:
          description: Timestamp of the registration to the card.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
      required:
      - integrationId
      - timestamp
      type: object
    LoyaltyCardRegistration:
      properties:
        integrationId:
          description: The integrationId of the customer profile.
          example: my_customer_profile
          title: Customer Profile Id
          type: string
      required:
      - integrationId
      type: object
    LoyaltyProgramBalance:
      description: The balance in a Loyalty Program for some Customer.
      properties:
        currentBalance:
          description: Sum of currently active points.
          example: 46.0
          title: Current balance
          type: number
        pendingBalance:
          description: Sum of pending points.
          example: 10.0
          title: Pending balance
          type: number
        expiredBalance:
          description: Sum of expired points.
          example: 30.0
          title: Expired balance
          type: number
        spentBalance:
          description: Sum of spent points.
          example: 84.0
          title: Spent balance
          type: number
        tentativeCurrentBalance:
          description: Sum of currently active points, including points added and
            deducted in open sessions.
          example: 56.0
          title: Tentative current balance
          type: number
      required:
      - currentBalance
      - expiredBalance
      - pendingBalance
      - spentBalance
      - tentativeCurrentBalance
      type: object
    LoyaltyProjection:
      description: Group of all loyalty points expected in the future.
      example:
        projections:
        - date: 2000-01-23T04:56:07.000+00:00
          activatingPoints: 25.0
          projectedBalance: 57.0
          expiringPoints: 14.0
        - date: 2000-01-23T04:56:07.000+00:00
          activatingPoints: 25.0
          projectedBalance: 57.0
          expiringPoints: 14.0
        - date: 2000-01-23T04:56:07.000+00:00
          activatingPoints: 25.0
          projectedBalance: 57.0
          expiringPoints: 14.0
        - date: 2000-01-23T04:56:07.000+00:00
          activatingPoints: 25.0
          projectedBalance: 57.0
          expiringPoints: 14.0
        - date: 2000-01-23T04:56:07.000+00:00
          activatingPoints: 25.0
          projectedBalance: 57.0
          expiringPoints: 14.0
        totalActivatingPoints: 40.0
        totalExpiringPoints: 10.0
      properties:
        projections:
          items:
            $ref: '#/components/schemas/LoyaltyProjectionData'
          maxItems: 31
          type: array
        totalExpiringPoints:
          description: Sum of points to be expired by the projection date set in the
            query parameter.
          example: 10.0
          type: number
        totalActivatingPoints:
          description: Sum of points to be active by the projection date set in the
            query parameter.
          example: 40.0
          type: number
      required:
      - totalActivatingPoints
      - totalExpiringPoints
      type: object
    LoyaltyProjectionData:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        activatingPoints: 25.0
        projectedBalance: 57.0
        expiringPoints: 14.0
      properties:
        date:
          description: Specific date of projection.
          format: date-time
          type: string
        expiringPoints:
          description: Points that will be expired by the specified date.
          example: 14.0
          type: number
        activatingPoints:
          description: Points that will be active by the specified date.
          example: 25.0
          type: number
        projectedBalance:
          description: Current balance plus projected active points, minus expiring
            points.
          example: 57.0
          type: number
      required:
      - activatingPoints
      - date
      - expiringPoints
      - projectedBalance
      type: object
    CustomerProfileSearchQuery:
      example:
        integrationIDs:
        - integrationIDs
        - integrationIDs
        profileIDs:
        - 0
        - 0
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a customer profile. All provided
            attributes will be exactly matched against profile attributes.
          properties: {}
          type: object
        integrationIDs:
          items:
            type: string
          type: array
        profileIDs:
          items:
            type: integer
          type: array
      type: object
    NewCustomerProfile:
      properties:
        attributes:
          description: Arbitrary properties associated with this item.
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
      type: object
    CustomerProfile:
      description: ""
      example:
        accountId: 31
        closedSessions: 3
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: URNGV8294NV
        attributes:
          Language: english
          ShippingCountry: DE
        totalSales: 299.99
        lastActivity: 2020-02-08T14:15:20Z
        id: 6
        loyaltyMemberships:
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 323414846
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 323414846
        audienceMemberships:
        - name: Travel audience
          id: 2
        - name: Travel audience
          id: 2
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created.
          format: date-time
          type: string
        integrationId:
          description: The integration ID set by your integration layer.
          example: URNGV8294NV
          format: string
          maxLength: 1000
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        accountId:
          description: The ID of the Talon.One account that owns this profile.
          example: 31
          title: Profile belongs to Account
          type: integer
        closedSessions:
          description: The total amount of closed sessions by a customer. A closed
            session is a successful purchase.
          example: 3
          title: Closed sessions
          type: integer
        totalSales:
          description: Sum of all purchases made by this customer.
          example: 299.99
          title: Total Sales
          type: number
        loyaltyMemberships:
          description: |
            **DEPRECATED** A list of loyalty programs joined by the customer.
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          title: Loyalty programed joined
          type: array
        audienceMemberships:
          description: A list of audiences the customer belongs to.
          items:
            $ref: '#/components/schemas/AudienceMembership'
          title: Audience memberships
          type: array
        lastActivity:
          description: |
            Timestamp of the most recent event received from this customer.
            This field is updated on calls that trigger the rule-engine and that are
            not [dry requests](https://docs.talon.one/docs/dev/integration-api/dry-requests/#overlay).

            For example, [reserving a coupon](https://docs.talon.one/integration-api/#operation/createCouponReservation)
            for a customer doesn't impact this field.
          example: 2020-02-08T14:15:20Z
          format: date-time
          type: string
      required:
      - accountId
      - attributes
      - closedSessions
      - created
      - id
      - integrationId
      - lastActivity
      - totalSales
      type: object
    CustomerInventory:
      example:
        coupons:
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          profileRedemptionCount: 5
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 0.8008281904610115
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: false
          attributes: '{}'
          id: 6
          state: active
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 6.027456183070403
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          profileRedemptionCount: 5
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 0.8008281904610115
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: false
          attributes: '{}'
          id: 6
          state: active
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 6.027456183070403
        referrals:
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 5
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          referredCustomers:
          - referredCustomers
          - referredCustomers
          id: 6
          startDate: 2020-11-10T23:00:00Z
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 5
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          referredCustomers:
          - referredCustomers
          - referredCustomers
          id: 6
          startDate: 2020-11-10T23:00:00Z
        profile:
          accountId: 31
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        loyalty:
          cards:
          - ledger:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
            identifier: identifier
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            profiles:
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            subledgers:
              key:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
            modified: 2021-09-12T10:12:42Z
            id: 6
            programID: 125
            status: status
          - ledger:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
            identifier: identifier
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            profiles:
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            subledgers:
              key:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
            modified: 2021-09-12T10:12:42Z
            id: 6
            programID: 125
            status: status
          programs:
            key:
              ledger:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
              subLedgers:
                key:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
              name: program1
              id: 5
              title: My loyalty program
        giveaways:
        - code: code
          importId: 5
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2020-06-10T09:05:27.993483Z
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          importId: 5
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2020-06-10T09:05:27.993483Z
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        profile:
          $ref: '#/components/schemas/CustomerProfile'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        referrals:
          items:
            $ref: '#/components/schemas/InventoryReferral'
          type: array
        coupons:
          description: |
            The coupons reserved by this profile. This array includes hard and soft reservations. See each coupon's `reservation` property.
          items:
            $ref: '#/components/schemas/InventoryCoupon'
          type: array
        giveaways:
          items:
            $ref: '#/components/schemas/Giveaway'
          type: array
      type: object
    NewCustomerSession:
      description: ""
      properties:
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        coupon:
          description: Any coupon code entered.
          maxLength: 100
          title: Coupon entered in session
          type: string
        referral:
          description: Any referral code entered.
          maxLength: 100
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. `closed` → `cancelled` or `partially_returned`
            4. `partially_returned` → `cancelled`

            For more information, see [Customer session states](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - partially_returned
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Items in customer's cart
          type: array
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts. See the [tutorial](https://docs.talon.one/docs/dev/tutorials/using-identifiers/).
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        total:
          description: The total sum of the cart in one session.
          title: Session Total
          type: number
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
      type: object
    NewCustomerSessionV2:
      description: ""
      example:
        couponCodes:
        - XMAS-20-2021
        loyaltyCards:
        - loyalty-card-1
        additionalCosts:
          shipping:
            price: 9
        profileId: URNGV8294NV
        identifiers:
        - 91.11.156.141
        referralCode: NT2K54D9
        attributes:
          ShippingCity: Berlin
        state: open
        cartItems:
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
      properties:
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        couponCodes:
          description: |
            Any coupon codes entered.

            **Important**: If you [create a coupon budget](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/#budget-types)
            for your campaign, ensure the session contains a coupon code by the time you close it.
          example:
          - XMAS-20-2021
          items:
            maxLength: 100
            type: string
          title: Coupons entered in session
          type: array
        referralCode:
          description: |
            Any referral code entered.

            **Important**: If you [create a referral budget](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/#budget-types)
            for your campaign, ensure the session contains a referral code by the time you close it.
          example: NT2K54D9
          maxLength: 100
          title: Referral code entered in session
          type: string
        loyaltyCards:
          description: Any loyalty cards used.
          example:
          - loyalty-card-1
          items:
            type: string
          maxItems: 1
          type: array
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. Either:
               - `closed` → `cancelled` (**only** via [Update customer session](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/updateCustomerSessionV2)) or
               - `closed` → `partially_returned` (**only** via [Return cart items](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/returnCartItems))
            4. `partially_returned` → `cancelled`

            For more information, see [Customer session states](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - partially_returned
          - cancelled
          example: open
          title: Customer's session state
          type: string
        cartItems:
          description: |
            The items to add to this sessions.
            - If cart item flattening is disabled: **Do not exceed 1000 items** (regardless of their `quantity`) per request.
            - If cart item flattening is enabled: **Do not exceed 1000 items** and ensure the sum of all cart item's `quantity` **does not exceed 10.000** per request.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Customer session's cart items
          type: array
        additionalCosts:
          additionalProperties:
            $ref: '#/components/schemas/AdditionalCost'
          description: |
            Use this property to set a value for the additional costs of this session, such as a shipping cost.

            They must be created in the Campaign Manager
            before you set them with this property. See [Managing additional costs](https://docs.talon.one/docs/product/account/dev-tools/managing-additional-costs/).
          example:
            shipping:
              price: 9
          type: object
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts.
            See the [tutorial](https://docs.talon.one/docs/dev/tutorials/using-identifiers/).

            **Important**: If you [create a unique identifier budget](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/#budget-types)
            for your campaign, ensure the session contains an identifier by the time you close it.
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        attributes:
          description: |
            Use this property to set a value for the attributes of your choice. Attributes represent any information to attach to your session, like the shipping city.

            You can use [built-in attributes](https://docs.talon.one/docs/dev/concepts/attributes#built-in-attributes) or [custom ones](https://docs.talon.one/docs/dev/concepts/attributes#custom-attributes).
            Custom attributes must be created in the Campaign Manager before you set them with this property.
          example:
            ShippingCity: Berlin
          properties: {}
          type: object
      type: object
    CustomerAnalytics:
      description: A summary report of customer activity for a given time range.
      example:
        freeItems: 1
        acceptedCoupons: 0
        totalDiscounts: 7.061401241503109
        totalDiscountedOrders: 5
        totalOrders: 5
        totalRevenue: 2.3021358869347655
        createdCoupons: 6
      properties:
        acceptedCoupons:
          description: Total accepted coupons for this customer.
          type: integer
        createdCoupons:
          description: Total created coupons for this customer.
          type: integer
        freeItems:
          description: Total free items given to this customer.
          type: integer
        totalOrders:
          description: Total orders made by this customer.
          type: integer
        totalDiscountedOrders:
          description: Total orders made by this customer that had a discount.
          type: integer
        totalRevenue:
          description: Total Revenue across all closed sessions.
          type: number
        totalDiscounts:
          description: The sum of discounts that were given across all closed sessions.
          type: number
      required:
      - acceptedCoupons
      - createdCoupons
      - freeItems
      - totalDiscountedOrders
      - totalDiscounts
      - totalOrders
      - totalRevenue
      type: object
    CustomerActivityReport:
      description: A summary report of customer activity for a given time range.
      example:
        couponUseAttempts: 1
        created: 2020-02-07T08:15:22Z
        totalOrdersNoCoupon: 9
        integrationId: URNGV8294NV
        couponRedemptions: 6
        couponFailedAttempts: 5
        accruedRevenue: 2.3021358869347655
        name: name
        customerId: 0
        lastActivity: 2000-01-23T04:56:07.000+00:00
        totalOrders: 7
        campaignName: campaignName
        accruedDiscounts: 5.637376656633329
      properties:
        integrationId:
          description: The integration ID set by your integration layer.
          example: URNGV8294NV
          format: string
          maxLength: 1000
          type: string
        created:
          description: The exact moment this entity was created.
          example: 2020-02-07T08:15:22Z
          format: date-time
          type: string
        name:
          description: The name for this customer profile.
          type: string
        customerId:
          description: The internal Talon.One ID of the customer.
          type: integer
        lastActivity:
          description: The last activity of the customer.
          format: date-time
          type: string
        couponRedemptions:
          description: Number of coupon redemptions in all customer campaigns.
          type: integer
        couponUseAttempts:
          description: Number of coupon use attempts in all customer campaigns.
          type: integer
        couponFailedAttempts:
          description: Number of failed coupon use attempts in all customer campaigns.
          type: integer
        accruedDiscounts:
          description: Number of accrued discounts in all customer campaigns.
          type: number
        accruedRevenue:
          description: Amount of accrued revenue in all customer campaigns.
          type: number
        totalOrders:
          description: Number of orders in all customer campaigns.
          type: integer
        totalOrdersNoCoupon:
          description: Number of orders without coupon used in all customer campaigns.
          type: integer
        campaignName:
          description: The name of the campaign this customer belongs to.
          type: string
      required:
      - accruedDiscounts
      - accruedRevenue
      - campaignName
      - couponFailedAttempts
      - couponRedemptions
      - couponUseAttempts
      - created
      - customerId
      - integrationId
      - name
      - totalOrders
      - totalOrdersNoCoupon
      type: object
    CustomerSession:
      description: ""
      example:
        coupon: coupon
        created: 2020-02-07T08:15:22Z
        identifiers:
        - 91.11.156.141
        integrationId: integrationId
        total: 0.8008281904610115
        referral: referral
        discounts:
          key: 6.027456183070403
        profileId: URNGV8294NV
        attributes: '{}'
        state: open
        applicationId: 322
        cartItems:
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
        updated: 2021-09-12T10:12:42Z
        firstSession: true
      properties:
        integrationId:
          description: The integration ID set by your integration layer.
          format: string
          maxLength: 1000
          type: string
        created:
          description: The exact moment this entity was created.
          example: 2020-02-07T08:15:22Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        coupon:
          description: Any coupon code entered.
          maxLength: 100
          title: Coupon entered in session
          type: string
        referral:
          description: Any referral code entered.
          maxLength: 100
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. `closed` → `cancelled` or `partially_returned`
            4. `partially_returned` → `cancelled`

            For more information, see [Customer session states](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - partially_returned
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Items in customer's cart
          type: array
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts. See the [tutorial](https://docs.talon.one/docs/dev/tutorials/using-identifiers/).
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        total:
          description: The total sum of the cart in one session.
          title: Session Total
          type: number
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
        firstSession:
          description: Indicates whether this is the first session for the customer's
            profile. Will always be true for anonymous sessions.
          example: true
          title: First session ever?
          type: boolean
        discounts:
          additionalProperties:
            type: number
          description: A map of labelled discount values, values will be in the same
            currency as the application associated with the session.
          title: Customer's current discounts
          type: object
        updated:
          description: Timestamp of the most recent event received on this session.
          example: 2021-09-12T10:12:42Z
          format: date-time
          title: Last activity on the session
          type: string
      required:
      - applicationId
      - attributes
      - cartItems
      - coupon
      - created
      - discounts
      - firstSession
      - integrationId
      - profileId
      - referral
      - state
      - total
      - updated
      type: object
    CustomerSessionV2:
      description: ""
      example:
        couponCodes:
        - XMAS-20-2021
        created: 2000-01-23T04:56:07.000+00:00
        identifiers:
        - 91.11.156.141
        integrationId: URNGV8294NV
        total: 119.99
        loyaltyCards:
        - loyalty-card-1
        additionalCosts:
          shipping:
            price: 9
        additionalCostTotal: 20.0
        profileId: URNGV8294NV
        referralCode: NT2K54D9
        attributes:
          ShippingCity: Berlin
        id: 6
        state: open
        applicationId: 322
        cartItems:
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
        updated: 2020-02-08T14:15:22Z
        firstSession: true
        cartItemTotal: 99.99
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created.
          format: date-time
          type: string
        integrationId:
          description: The integration ID set by your integration layer.
          example: URNGV8294NV
          format: string
          maxLength: 1000
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        couponCodes:
          description: |
            Any coupon codes entered.

            **Important**: If you [create a coupon budget](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/#budget-types)
            for your campaign, ensure the session contains a coupon code by the time you close it.
          example:
          - XMAS-20-2021
          items:
            maxLength: 100
            type: string
          title: Coupons entered in session
          type: array
        referralCode:
          description: |
            Any referral code entered.

            **Important**: If you [create a referral budget](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/#budget-types)
            for your campaign, ensure the session contains a referral code by the time you close it.
          example: NT2K54D9
          maxLength: 100
          title: Referral code entered in session
          type: string
        loyaltyCards:
          description: Any loyalty cards used.
          example:
          - loyalty-card-1
          items:
            type: string
          maxItems: 1
          type: array
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. Either:
               - `closed` → `cancelled` (**only** via [Update customer session](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/updateCustomerSessionV2)) or
               - `closed` → `partially_returned` (**only** via [Return cart items](https://docs.talon.one/integration-api#tag/Customer-sessions/operation/returnCartItems))
            4. `partially_returned` → `cancelled`

            For more information, see [Customer session states](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - partially_returned
          - cancelled
          example: open
          title: Customer's session state
          type: string
        cartItems:
          description: |
            The items to add to this sessions.
            - If cart item flattening is disabled: **Do not exceed 1000 items** (regardless of their `quantity`) per request.
            - If cart item flattening is enabled: **Do not exceed 1000 items** and ensure the sum of all cart item's `quantity` **does not exceed 10.000** per request.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Customer session's cart items
          type: array
        additionalCosts:
          additionalProperties:
            $ref: '#/components/schemas/AdditionalCost'
          description: |
            Use this property to set a value for the additional costs of this session, such as a shipping cost.

            They must be created in the Campaign Manager
            before you set them with this property. See [Managing additional costs](https://docs.talon.one/docs/product/account/dev-tools/managing-additional-costs/).
          example:
            shipping:
              price: 9
          type: object
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts.
            See the [tutorial](https://docs.talon.one/docs/dev/tutorials/using-identifiers/).

            **Important**: If you [create a unique identifier budget](https://docs.talon.one/docs/product/campaigns/settings/managing-campaign-budgets/#budget-types)
            for your campaign, ensure the session contains an identifier by the time you close it.
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        attributes:
          description: |
            Use this property to set a value for the attributes of your choice. Attributes represent any information to attach to your session, like the shipping city.

            You can use [built-in attributes](https://docs.talon.one/docs/dev/concepts/attributes#built-in-attributes) or [custom ones](https://docs.talon.one/docs/dev/concepts/attributes#custom-attributes).
            Custom attributes must be created in the Campaign Manager before you set them with this property.
          example:
            ShippingCity: Berlin
          properties: {}
          type: object
        firstSession:
          description: Indicates whether this is the first session for the customer's
            profile. Will always be true for anonymous sessions.
          example: true
          title: First session ever?
          type: boolean
        total:
          description: The total sum of cart-items, as well as additional costs, before
            any discounts applied.
          example: 119.99
          title: Session Total
          type: number
        cartItemTotal:
          description: The total sum of cart-items before any discounts applied.
          example: 99.99
          title: Cart Items Total
          type: number
        additionalCostTotal:
          description: The total sum of additional costs before any discounts applied.
          example: 20.0
          title: Additional Costs Total
          type: number
        updated:
          description: Timestamp of the most recent event received on this session.
          example: 2020-02-08T14:15:22Z
          format: date-time
          title: Last activity on the session
          type: string
      required:
      - additionalCostTotal
      - applicationId
      - attributes
      - cartItemTotal
      - cartItems
      - created
      - firstSession
      - id
      - integrationId
      - profileId
      - state
      - total
      - updated
      type: object
    CartItem:
      example:
        remainingQuantity: 1
        quantity: 1
        returnedQuantity: 1
        length: 1.4658129805029452
        weight: 1130.0
        catalogItemID: 5
        additionalCosts:
          shipping:
            price: 9
        price: 99.99
        name: Air Glide
        width: 6.027456183070403
        attributes:
          image: 11.jpeg
          material: leather
        position: 5.962133916683182
        sku: SKU1241028
        category: shoes
        height: 0.8008281904610115
      properties:
        name:
          description: Name of item.
          example: Air Glide
          minLength: 1
          title: Name of item
          type: string
        sku:
          description: Stock keeping unit of item.
          example: SKU1241028
          minLength: 1
          title: SKU of item
          type: string
        quantity:
          description: |
            Quantity of item. **Important:** If you enabled [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items),
            the quantity is always one and the same cart item might receive multiple per-item discounts. Ensure you can process multiple discounts on one cart item correctly.
          example: 1
          minimum: 1
          title: Quantity of item
          type: integer
        returnedQuantity:
          description: Number of returned items, calculated internally based on returns
            of this item.
          example: 1
          title: Returned quantity of item
          type: integer
        remainingQuantity:
          description: Remaining quantity of the item, calculated internally based
            on returns of this item.
          example: 1
          title: Remaining quantity of item
          type: integer
        price:
          description: |
            Price of the item in the currency defined by your Application. This field is required if this item is not part of a [catalog](https://docs.talon.one/docs/product/account/dev-tools/managing-cart-item-catalogs/). If it is part of a catalog, setting a price here overrides the price from the catalog.
          example: 99.99
          title: Price of item
          type: number
        category:
          description: Type, group or model of the item.
          example: shoes
          title: Item category
          type: string
        weight:
          description: Weight of item in grams.
          example: 1130.0
          title: Weight of item
          type: number
        height:
          description: Height of item in mm.
          title: Height of item
          type: number
        width:
          description: Width of item in mm.
          title: Width of item
          type: number
        length:
          description: Length of item in mm.
          title: Length of item
          type: number
        position:
          description: Position of the Cart Item in the Cart (calculated internally).
          title: Position of Cart Item
          type: number
        attributes:
          description: |
            Use this property to set a value for the attributes of your choice. [Attributes](https://docs.talon.one/docs/dev/concepts/attributes) represent any information to attach to this cart item.

            Custom _cart item_ attributes must be created in the Campaign Manager before you set them with this property.
          example:
            image: 11.jpeg
            material: leather
          properties: {}
          title: Item attributes
          type: object
        additionalCosts:
          additionalProperties:
            $ref: '#/components/schemas/AdditionalCost'
          description: |
            Use this property to set a value for the additional costs of this item, such as a shipping cost. They must be created in the Campaign Manager
            before you set them with this property. See [Managing additional costs](https://docs.talon.one/docs/product/account/dev-tools/managing-additional-costs/).
          example:
            shipping:
              price: 9
          type: object
        catalogItemID:
          description: The [catalog item ID](https://docs.talon.one/docs/product/account/dev-tools/managing-cart-item-catalogs/#synchronizing-cart-item-catalogs).
          title: The catalog item ID
          type: integer
      required:
      - name
      - price
      - quantity
      - sku
      type: object
      x-attributable: true
    AdditionalCost:
      properties:
        price:
          example: 4.5
          title: Price of additional cost
          type: number
      required:
      - price
      type: object
    IntegrationEvent:
      description: ""
      properties:
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          example: pageViews
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          example:
            myAttribute: myValue
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    NewEvent:
      description: ""
      example:
        profileId: URNGV8294NV
        attributes:
          myAttribute: myValue
        sessionId: 175KJPS947296
        type: pageViews
      properties:
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          example: pageViews
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          example:
            myAttribute: myValue
          properties: {}
          type: object
        sessionId:
          description: The ID of the session that this event occurred in.
          example: 175KJPS947296
          minLength: 1
          type: string
      required:
      - attributes
      - sessionId
      - type
      type: object
    Event:
      description: ""
      example:
        effects:
        - '{}'
        - '{}'
        created: 2020-06-10T09:05:27.993483Z
        profileId: URNGV8294NV
        meta:
          campaigns: '{}'
          coupons: '{}'
          referralRejectionReason:
            reason: ReferralNotFound
            campaignId: 1
            referralId: 5
          warnings: '{}'
          couponRejectionReason:
            reason: CouponNotFound
            campaignId: 244
            couponId: 4928
        ledgerEntries:
        - expiryDate: 2022-04-26T11:02:38Z
          accountId: 0
          eventId: 3
          reason: Customer appeasement.
          amount: 100
          created: 2020-06-10T09:05:27.993483Z
          profileId: URNGV8294NV
          loyaltyProgramId: 323414846
          id: 6
          referenceId: 6
        - expiryDate: 2022-04-26T11:02:38Z
          accountId: 0
          eventId: 3
          reason: Customer appeasement.
          amount: 100
          created: 2020-06-10T09:05:27.993483Z
          profileId: URNGV8294NV
          loyaltyProgramId: 323414846
          id: 6
          referenceId: 6
        attributes:
          myAttribute: myValue
        id: 6
        sessionId: 175KJPS947296
        applicationId: 322
        type: pageViews
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          example: pageViews
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          example:
            myAttribute: myValue
          properties: {}
          type: object
        sessionId:
          description: The ID of the session that this event occurred in.
          example: 175KJPS947296
          title: Session ID of Event
          type: string
        effects:
          description: |
            An array of effects generated by the rules of the enabled campaigns of the Application.

            You decide how to apply them in your system. See the list of [API effects](/docs/dev/integration-api/api-effects).
          items:
            properties: {}
            type: object
          type: array
        ledgerEntries:
          description: Ledger entries for the event.
          items:
            $ref: '#/components/schemas/LedgerEntry'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - applicationId
      - attributes
      - created
      - effects
      - id
      - ledgerEntries
      - type
      type: object
    IntegrationState:
      description: |
        Contains all state that might interest application integration plugins. This is the response type returned by all of the Integration API operations.
      example:
        coupon:
          recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        session:
          coupon: coupon
          created: 2020-02-07T08:15:22Z
          identifiers:
          - 91.11.156.141
          integrationId: integrationId
          total: 0.8008281904610115
          referral: referral
          discounts:
            key: 6.027456183070403
          profileId: URNGV8294NV
          attributes: '{}'
          state: open
          applicationId: 322
          cartItems:
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          updated: 2021-09-12T10:12:42Z
          firstSession: true
        profile:
          accountId: 31
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        loyalty:
          cards:
          - ledger:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
            identifier: identifier
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            profiles:
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            subledgers:
              key:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
            modified: 2021-09-12T10:12:42Z
            id: 6
            programID: 125
            status: status
          - ledger:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
            identifier: identifier
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            profiles:
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            subledgers:
              key:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
            modified: 2021-09-12T10:12:42Z
            id: 6
            programID: 125
            status: status
          programs:
            key:
              ledger:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
              subLedgers:
                key:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
              name: program1
              id: 5
              title: My loyalty program
        event:
          effects:
          - '{}'
          - '{}'
          created: 2020-06-10T09:05:27.993483Z
          profileId: URNGV8294NV
          meta:
            campaigns: '{}'
            coupons: '{}'
            referralRejectionReason:
              reason: ReferralNotFound
              campaignId: 1
              referralId: 5
            warnings: '{}'
            couponRejectionReason:
              reason: CouponNotFound
              campaignId: 244
              couponId: 4928
          ledgerEntries:
          - expiryDate: 2022-04-26T11:02:38Z
            accountId: 0
            eventId: 3
            reason: Customer appeasement.
            amount: 100
            created: 2020-06-10T09:05:27.993483Z
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 6
          - expiryDate: 2022-04-26T11:02:38Z
            accountId: 0
            eventId: 3
            reason: Customer appeasement.
            amount: 100
            created: 2020-06-10T09:05:27.993483Z
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 6
          attributes:
            myAttribute: myValue
          id: 6
          sessionId: 175KJPS947296
          applicationId: 322
          type: pageViews
      properties:
        session:
          $ref: '#/components/schemas/CustomerSession'
        profile:
          $ref: '#/components/schemas/CustomerProfile'
        event:
          $ref: '#/components/schemas/Event'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        coupon:
          $ref: '#/components/schemas/Coupon'
      required:
      - event
      - profile
      - session
      type: object
    IntegrationStateV2:
      description: |
        Contains all entities that might interest Talon.One integrations. This is the response type returned by the V2 PUT customer_session endpoint
      example:
        customerProfile:
          accountId: 31
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        loyalty:
          cards:
          - ledger:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
            identifier: identifier
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            profiles:
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            subledgers:
              key:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
            modified: 2021-09-12T10:12:42Z
            id: 6
            programID: 125
            status: status
          - ledger:
              pendingBalance: 10.0
              currentBalance: 46.0
              spentBalance: 84.0
              tentativeCurrentBalance: 56.0
              pointsToNextTier: 20.0
              projection:
                projections:
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                - date: 2000-01-23T04:56:07.000+00:00
                  activatingPoints: 25.0
                  projectedBalance: 57.0
                  expiringPoints: 14.0
                totalActivatingPoints: 40.0
                totalExpiringPoints: 10.0
              expiredBalance: 30.0
              currentTier:
                name: bronze
                id: 11
            identifier: identifier
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            profiles:
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            - integrationId: integrationId
              timestamp: 2021-09-12T10:12:42Z
            subledgers:
              key:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
            modified: 2021-09-12T10:12:42Z
            id: 6
            programID: 125
            status: status
          programs:
            key:
              ledger:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
              subLedgers:
                key:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
              name: program1
              id: 5
              title: My loyalty program
        awardedGiveaways:
        - code: code
          importId: 5
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2020-06-10T09:05:27.993483Z
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          importId: 5
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2020-06-10T09:05:27.993483Z
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
        createdCoupons:
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        createdReferrals:
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 1
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          id: 6
          startDate: 2020-11-10T23:00:00Z
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 1
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          id: 6
          startDate: 2020-11-10T23:00:00Z
        effects:
        - rulesetId: 73
          ruleIndex: 2
          triggeredForCatalogItem: 786
          campaignId: 244
          ruleName: Give 20% discount
          triggeredByCoupon: 4928
          effectType: rejectCoupon
          props: '{}'
        - rulesetId: 73
          ruleIndex: 2
          triggeredForCatalogItem: 786
          campaignId: 244
          ruleName: Give 20% discount
          triggeredByCoupon: 4928
          effectType: rejectCoupon
          props: '{}'
        referral:
          code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 5
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          referredCustomers:
          - referredCustomers
          - referredCustomers
          id: 6
          startDate: 2020-11-10T23:00:00Z
        triggeredCampaigns:
        - callApiEffectCount: 0
          createdLoyaltyPointsEffectCount: 2
          discountCount: 288.0
          description: Campaign for all summer 2021 promotions
          templateId: 3
          customEffectCount: 0
          features:
          - coupons
          - referrals
          createdLoyaltyPointsCount: 9.0
          couponSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          startTime: 2021-07-20T22:00:00Z
          id: 3
          state: enabled
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          activeRulesetId: 4
          updatedBy: Jane Doe
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 8
          couponRedemptionCount: 163
          userId: 2
          couponCreationCount: 16
          campaignGroups:
          - 1
          - 3
          tags:
          - summer
          awardedGiveawaysCount: 9
          redeemedLoyaltyPointsEffectCount: 9
          discountEffectCount: 343
          createdBy: John Doe
          redeemedLoyaltyPointsCount: 8.0
          addFreeItemEffectCount: 0
          name: Summer promotions
          referralSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          attributes: '{}'
          lastActivity: 2022-11-10T23:00:00Z
          endTime: 2021-09-22T22:00:00Z
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        - callApiEffectCount: 0
          createdLoyaltyPointsEffectCount: 2
          discountCount: 288.0
          description: Campaign for all summer 2021 promotions
          templateId: 3
          customEffectCount: 0
          features:
          - coupons
          - referrals
          createdLoyaltyPointsCount: 9.0
          couponSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          startTime: 2021-07-20T22:00:00Z
          id: 3
          state: enabled
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          activeRulesetId: 4
          updatedBy: Jane Doe
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 8
          couponRedemptionCount: 163
          userId: 2
          couponCreationCount: 16
          campaignGroups:
          - 1
          - 3
          tags:
          - summer
          awardedGiveawaysCount: 9
          redeemedLoyaltyPointsEffectCount: 9
          discountEffectCount: 343
          createdBy: John Doe
          redeemedLoyaltyPointsCount: 8.0
          addFreeItemEffectCount: 0
          name: Summer promotions
          referralSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          attributes: '{}'
          lastActivity: 2022-11-10T23:00:00Z
          endTime: 2021-09-22T22:00:00Z
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        coupons:
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        customerSession:
          couponCodes:
          - XMAS-20-2021
          created: 2000-01-23T04:56:07.000+00:00
          identifiers:
          - 91.11.156.141
          integrationId: URNGV8294NV
          total: 119.99
          loyaltyCards:
          - loyalty-card-1
          additionalCosts:
            shipping:
              price: 9
          additionalCostTotal: 20.0
          profileId: URNGV8294NV
          referralCode: NT2K54D9
          attributes:
            ShippingCity: Berlin
          id: 6
          state: open
          applicationId: 322
          cartItems:
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          updated: 2020-02-08T14:15:22Z
          firstSession: true
          cartItemTotal: 99.99
        previousReturns:
        - returnedCartItems:
          - quantity: 1
            position: 2
          - quantity: 1
            position: 2
          accountId: 3886
          eventId: 123
          profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          createdBy: 123
          created: 2020-06-10T09:05:27.993483Z
          profileId: 123
          id: 6
          sessionId: 123
          applicationId: 322
        - returnedCartItems:
          - quantity: 1
            position: 2
          - quantity: 1
            position: 2
          accountId: 3886
          eventId: 123
          profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          createdBy: 123
          created: 2020-06-10T09:05:27.993483Z
          profileId: 123
          id: 6
          sessionId: 123
          applicationId: 322
        event:
          effects:
          - '{}'
          - '{}'
          created: 2020-06-10T09:05:27.993483Z
          profileId: URNGV8294NV
          meta:
            campaigns: '{}'
            coupons: '{}'
            referralRejectionReason:
              reason: ReferralNotFound
              campaignId: 1
              referralId: 5
            warnings: '{}'
            couponRejectionReason:
              reason: CouponNotFound
              campaignId: 244
              couponId: 4928
          ledgerEntries:
          - expiryDate: 2022-04-26T11:02:38Z
            accountId: 0
            eventId: 3
            reason: Customer appeasement.
            amount: 100
            created: 2020-06-10T09:05:27.993483Z
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 6
          - expiryDate: 2022-04-26T11:02:38Z
            accountId: 0
            eventId: 3
            reason: Customer appeasement.
            amount: 100
            created: 2020-06-10T09:05:27.993483Z
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 6
          attributes:
            myAttribute: myValue
          id: 6
          sessionId: 175KJPS947296
          applicationId: 322
          type: pageViews
        ruleFailureReasons:
        - rulesetID: 1
          ruleIndex: 1
          campaignID: 7
          referralID: 1
          ruleName: ruleName
          conditionIndex: 6
          effectIndex: 7
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
        - rulesetID: 1
          ruleIndex: 1
          campaignID: 7
          referralID: 1
          ruleName: ruleName
          conditionIndex: 6
          effectIndex: 7
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
        return:
          returnedCartItems:
          - quantity: 1
            position: 2
          - quantity: 1
            position: 2
          accountId: 3886
          eventId: 123
          profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          createdBy: 123
          created: 2020-06-10T09:05:27.993483Z
          profileId: 123
          id: 6
          sessionId: 123
          applicationId: 322
      properties:
        customerSession:
          $ref: '#/components/schemas/CustomerSessionV2'
        customerProfile:
          $ref: '#/components/schemas/CustomerProfile'
        event:
          $ref: '#/components/schemas/Event'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        referral:
          $ref: '#/components/schemas/InventoryReferral'
        coupons:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
        triggeredCampaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          type: array
        ruleFailureReasons:
          items:
            $ref: '#/components/schemas/RuleFailureReason'
          type: array
        createdCoupons:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
        createdReferrals:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
        awardedGiveaways:
          items:
            $ref: '#/components/schemas/Giveaway'
          type: array
        return:
          $ref: '#/components/schemas/Return'
        previousReturns:
          items:
            $ref: '#/components/schemas/Return'
          type: array
      required:
      - createdCoupons
      - createdReferrals
      - effects
      type: object
    IntegrationCustomerSessionResponse:
      example:
        effects:
        - rulesetId: 73
          ruleIndex: 2
          triggeredForCatalogItem: 786
          campaignId: 244
          ruleName: Give 20% discount
          triggeredByCoupon: 4928
          effectType: rejectCoupon
          props: '{}'
        - rulesetId: 73
          ruleIndex: 2
          triggeredForCatalogItem: 786
          campaignId: 244
          ruleName: Give 20% discount
          triggeredByCoupon: 4928
          effectType: rejectCoupon
          props: '{}'
        customerSession:
          couponCodes:
          - XMAS-20-2021
          created: 2000-01-23T04:56:07.000+00:00
          identifiers:
          - 91.11.156.141
          integrationId: URNGV8294NV
          total: 119.99
          loyaltyCards:
          - loyalty-card-1
          additionalCosts:
            shipping:
              price: 9
          additionalCostTotal: 20.0
          profileId: URNGV8294NV
          referralCode: NT2K54D9
          attributes:
            ShippingCity: Berlin
          id: 6
          state: open
          applicationId: 322
          cartItems:
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          updated: 2020-02-08T14:15:22Z
          firstSession: true
          cartItemTotal: 99.99
      properties:
        customerSession:
          $ref: '#/components/schemas/CustomerSessionV2'
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          type: array
      type: object
    ApplicationCustomer:
      description: ""
      example:
        accountId: 1
        closedSessions: 3
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: integrationId
        attributes:
          Language: english
          ShippingCountry: DE
        totalSales: 299.99
        lastActivity: 2020-02-08T14:15:20Z
        id: 6
        loyaltyMemberships:
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 323414846
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 323414846
        advocateIntegrationId: advocateIntegrationId
        audienceMemberships:
        - name: Travel audience
          id: 2
        - name: Travel audience
          id: 2
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
            Unique ID for this entity. Not to be confused with the Integration ID,
            which is set by your integration layer and used in most endpoints.
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created. The exact moment this entity was created. The
            exact moment this entity was created.
          format: date-time
          type: string
        integrationId:
          description: The integration ID set by your integration layer. The integration
            ID set by your integration layer.
          format: string
          maxLength: 1000
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        accountId:
          description: The ID of the Talon.One account that owns this profile. The
            ID of the Talon.One account that owns this profile.
          type: integer
        closedSessions:
          description: The total amount of closed sessions by a customer. A closed
            session is a successful purchase.
          example: 3
          title: Closed sessions
          type: integer
        totalSales:
          description: Sum of all purchases made by this customer.
          example: 299.99
          title: Total Sales
          type: number
        loyaltyMemberships:
          description: |
            **DEPRECATED** A list of loyalty programs joined by the customer.
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          title: Loyalty programed joined
          type: array
        audienceMemberships:
          description: A list of audiences the customer belongs to.
          items:
            $ref: '#/components/schemas/AudienceMembership'
          title: Audience memberships
          type: array
        lastActivity:
          description: |
            Timestamp of the most recent event received from this customer.
            This field is updated on calls that trigger the rule-engine and that are
            not [dry requests](https://docs.talon.one/docs/dev/integration-api/dry-requests/#overlay).

            For example, [reserving a coupon](https://docs.talon.one/integration-api/#operation/createCouponReservation)
            for a customer doesn't impact this field.
          example: 2020-02-08T14:15:20Z
          format: date-time
          type: string
        advocateIntegrationId:
          description: The Integration ID of the Customer Profile that referred this
            Customer in the Application.
          maxLength: 1000
          type: string
      required:
      - accountId
      - attributes
      - closedSessions
      - created
      - id
      - integrationId
      - lastActivity
      - totalSales
      type: object
    ApplicationReferee:
      description: ""
      example:
        friendIntegrationId: friendIntegrationId
        code: code
        created: 2000-01-23T04:56:07.000+00:00
        sessionId: sessionId
        advocateIntegrationId: advocateIntegrationId
        applicationId: 322
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        sessionId:
          description: Integration ID of the session in which the customer redeemed
            the referral.
          type: string
        advocateIntegrationId:
          description: Integration ID of the Advocate's Profile.
          maxLength: 1000
          title: Advocate's Profile ID
          type: string
        friendIntegrationId:
          description: Integration ID of the Friend's Profile.
          maxLength: 1000
          title: Friend's Profile ID
          type: string
        code:
          description: Advocate's referral code.
          type: string
        created:
          description: Timestamp of the moment the customer redeemed the referral.
          format: date-time
          type: string
      required:
      - advocateIntegrationId
      - applicationId
      - code
      - created
      - friendIntegrationId
      - sessionId
      type: object
    ApplicationSession:
      description: ""
      example:
        coupon: BKDB946
        created: 2000-01-23T04:56:07.000+00:00
        totalDiscounts: 100.0
        integrationId: URNGV8294NV
        profileintegrationid: 382370BKDB946
        total: 200.0
        referral: BKDB946
        discounts:
          key: 0.8008281904610115
        profileId: 138
        attributes: '{}'
        id: 6
        state: closed
        applicationId: 322
        cartItems:
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
        - remainingQuantity: 1
          quantity: 1
          returnedQuantity: 1
          length: 1.4658129805029452
          weight: 1130.0
          catalogItemID: 5
          additionalCosts:
            shipping:
              price: 9
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: SKU1241028
          category: shoes
          height: 0.8008281904610115
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          example: 138
          type: integer
        integrationId:
          description: The integration ID set by your integration layer.
          example: URNGV8294NV
          format: string
          maxLength: 1000
          type: string
        profileintegrationid:
          description: Integration ID of the customer for the session.
          example: 382370BKDB946
          maxLength: 1000
          type: string
        coupon:
          description: Any coupon code entered.
          example: BKDB946
          type: string
        referral:
          description: Any referral code entered.
          example: BKDB946
          type: string
        state:
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`. The state transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. `closed` → `cancelled` or `partially_returned`
            4. `partially_returned` → `cancelled`

            For more information, see [Customer session states](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - partially_returned
          - cancelled
          example: closed
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          type: array
        discounts:
          additionalProperties:
            type: number
          description: |
            **API V1 only.** A map of labeled discount values, in the same currency as the session.

            If you are using the V2 endpoints, refer to the `totalDiscounts` property instead.
          type: object
        totalDiscounts:
          description: The total sum of the discounts applied to this session.
          example: 100.0
          type: number
        total:
          description: The total sum of the session before any discounts applied.
          example: 200.0
          type: number
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
      required:
      - applicationId
      - cartItems
      - coupon
      - created
      - discounts
      - id
      - integrationId
      - referral
      - state
      - total
      - totalDiscounts
      type: object
    ApplicationEvent:
      description: ""
      example:
        effects:
        - '{}'
        - '{}'
        created: 2020-06-10T09:05:27.993483Z
        profileId: 138
        attributes: '{}'
        id: 6
        sessionId: 0
        applicationId: 322
        type: type
        ruleFailureReasons:
        - rulesetID: 1
          ruleIndex: 1
          campaignID: 7
          referralID: 1
          ruleName: ruleName
          conditionIndex: 6
          effectIndex: 7
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
        - rulesetID: 1
          ruleIndex: 1
          campaignID: 7
          referralID: 1
          ruleName: ruleName
          conditionIndex: 6
          effectIndex: 7
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          example: 138
          type: integer
        sessionId:
          description: The globally unique Talon.One ID of the session that contains
            this event.
          type: integer
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          type: string
        attributes:
          description: Additional JSON serialized data associated with the event.
          properties: {}
          type: object
        effects:
          description: An array containing the effects that were applied as a result
            of this event.
          items:
            properties: {}
            type: object
          type: array
        ruleFailureReasons:
          description: An array containing the rule failure reasons which happened
            during this event.
          items:
            $ref: '#/components/schemas/RuleFailureReason'
          type: array
      required:
      - applicationId
      - attributes
      - created
      - effects
      - id
      - type
      type: object
    NewAccount:
      properties:
        companyName:
          minLength: 1
          type: string
      required:
      - companyName
      type: object
    AccountAnalytics:
      example:
        liveActiveCampaigns: 10
        expiredCoupons: 200
        roles: 10
        activeCampaigns: 15
        activeCoupons: 650
        liveLoyaltyPrograms: 5
        sandboxApplications: 2
        activeRules: 35
        users: 0
        liveApplications: 6
        campaigns: 35
        coupons: 850
        expiredReferralCodes: 400
        webhooks: 2
        loyaltyPrograms: 5
        referralCodes: 500
        applications: 11
        activeReferralCodes: 100
        customAttributes: 18
      properties:
        applications:
          description: Total number of applications in the account.
          example: 11
          type: integer
        liveApplications:
          description: Total number of live applications in the account.
          example: 6
          type: integer
        sandboxApplications:
          description: Total number of sandbox applications in the account.
          example: 2
          type: integer
        campaigns:
          description: Total number of campaigns in the account.
          example: 35
          type: integer
        activeCampaigns:
          description: Total number of active campaigns in the account.
          example: 15
          type: integer
        liveActiveCampaigns:
          description: Total number of active campaigns in live applications in the
            account.
          example: 10
          type: integer
        coupons:
          description: Total number of coupons in the account.
          example: 850
          type: integer
        activeCoupons:
          description: Total number of active coupons in the account.
          example: 650
          type: integer
        expiredCoupons:
          description: Total number of expired coupons in the account.
          example: 200
          type: integer
        referralCodes:
          description: Total number of referral codes in the account.
          example: 500
          type: integer
        activeReferralCodes:
          description: Total number of active referral codes in the account.
          example: 100
          type: integer
        expiredReferralCodes:
          description: Total number of expired referral codes in the account.
          example: 400
          type: integer
        activeRules:
          description: Total number of active rules in the account.
          example: 35
          type: integer
        users:
          description: Total number of users in the account.
          type: integer
        roles:
          description: Total number of roles in the account.
          example: 10
          type: integer
        customAttributes:
          description: Total number of custom attributes in the account.
          example: 18
          type: integer
        webhooks:
          description: Total number of webhooks in the account.
          example: 2
          type: integer
        loyaltyPrograms:
          description: Total number of all loyalty programs in the account.
          example: 5
          type: integer
        liveLoyaltyPrograms:
          description: Total number of live loyalty programs in the account.
          example: 5
          type: integer
      required:
      - activeCampaigns
      - activeCoupons
      - activeReferralCodes
      - activeRules
      - applications
      - campaigns
      - coupons
      - customAttributes
      - expiredCoupons
      - expiredReferralCodes
      - liveActiveCampaigns
      - liveApplications
      - liveLoyaltyPrograms
      - loyaltyPrograms
      - referralCodes
      - roles
      - sandboxApplications
      - users
      - webhooks
      type: object
    AccountLimits:
      properties:
        liveApplications:
          description: Total number of allowed live applications in the account.
          type: integer
        sandboxApplications:
          description: Total number of allowed sandbox applications in the account.
          type: integer
        activeCampaigns:
          description: Total number of allowed active campaigns in live applications
            in the account.
          type: integer
        coupons:
          description: Total number of allowed coupons in the account.
          type: integer
        referralCodes:
          description: Total number of allowed referral codes in the account.
          type: integer
        activeRules:
          description: Total number of allowed active rulesets in the account.
          type: integer
        liveLoyaltyPrograms:
          description: Total number of allowed live loyalty programs in the account.
          type: integer
        sandboxLoyaltyPrograms:
          description: Total number of allowed sandbox loyalty programs in the account.
          type: integer
        webhooks:
          description: Total number of allowed webhooks in the account.
          type: integer
        users:
          description: Total number of allowed users in the account.
          type: integer
        apiVolume:
          description: Allowed volume of API requests to the account.
          type: integer
        promotionTypes:
          description: Array of promotion types that are employed in the account.
          items:
            type: string
          type: array
      required:
      - activeCampaigns
      - activeRules
      - apiVolume
      - coupons
      - liveApplications
      - liveLoyaltyPrograms
      - promotionTypes
      - referralCodes
      - sandboxApplications
      - sandboxLoyaltyPrograms
      - users
      - webhooks
      type: object
    UpdateAccount:
      properties:
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
        companyName:
          description: Name of your company.
          minLength: 1
          type: string
        billingEmail:
          description: The billing email address associated with your company account.
          format: email
          type: string
        state:
          description: State of the account (active, deactivated).
          enum:
          - active
          - deactivated
          type: string
        planExpires:
          description: The point in time at which your current plan expires.
          format: date-time
          type: string
      required:
      - billingEmail
      - companyName
      type: object
    Account:
      description: ""
      example:
        applicationCount: 5
        planExpires: 2000-01-23T04:56:07.000+00:00
        created: 2020-06-10T09:05:27.993483Z
        campaignsActiveCount: 7
        companyName: companyName
        campaignsInactiveCount: 9
        planName: planName
        applicationLimit: 0
        userCount: 2
        billingEmail: billingEmail
        campaignLimit: 1
        domainName: domainName
        apiLimit: 5
        modified: 2021-09-12T10:12:42Z
        attributes: '{}'
        id: 6
        state: active
        userLimit: 6
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        companyName:
          minLength: 1
          type: string
        domainName:
          description: Subdomain Name for yourcompany.talon.one.
          type: string
        state:
          description: State of the account (active, deactivated).
          enum:
          - active
          - deactivated
          type: string
        billingEmail:
          description: The billing email address associated with your company account.
          format: email
          type: string
        planName:
          description: The name of your booked plan.
          type: string
        planExpires:
          description: The point in time at which your current plan expires.
          format: date-time
          type: string
        applicationLimit:
          description: The maximum number of Applications covered by your plan.
          type: integer
        userLimit:
          description: The maximum number of Campaign Manager Users covered by your
            plan.
          type: integer
        campaignLimit:
          description: The maximum number of Campaigns covered by your plan.
          type: integer
        apiLimit:
          description: The maximum number of Integration API calls covered by your
            plan per billing period.
          type: integer
        applicationCount:
          description: The current number of Applications in your account.
          type: integer
        userCount:
          description: The current number of Campaign Manager Users in your account.
          type: integer
        campaignsActiveCount:
          description: The current number of active Campaigns in your account.
          type: integer
        campaignsInactiveCount:
          description: The current number of inactive Campaigns in your account.
          type: integer
        attributes:
          description: Arbitrary properties associated with this campaign.
          properties: {}
          type: object
      required:
      - applicationCount
      - billingEmail
      - campaignsActiveCount
      - campaignsInactiveCount
      - companyName
      - created
      - domainName
      - id
      - modified
      - state
      - userCount
      type: object
    NewAccountSignUp:
      description: ""
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        password:
          description: The password for your account.
          example: admin123456
          type: string
        companyName:
          minLength: 1
          type: string
      required:
      - companyName
      - email
      - password
      type: object
    NewUser:
      description: ""
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        password:
          description: The password for your account.
          example: admin123456
          type: string
        name:
          description: Your name.
          type: string
        inviteToken:
          example: Gy9b8w1irmQtEPo5RmbMmSPheL5h4
          minLength: 1
          type: string
      required:
      - email
      - inviteToken
      - password
      type: object
    UpdateUser:
      properties:
        name:
          description: The user name.
          type: string
        policy:
          description: ACL Json.
          example: ""
          type: string
        state:
          description: New state ("deactivated" or "active") for the user. Only usable
            by admins for the user.
          enum:
          - deactivated
          - active
          example: deactivated
          type: string
        roles:
          description: List of roles to assign to the user.
          example:
          - 1
          - 3
          items:
            type: integer
          type: array
        applicationNotificationSubscriptions:
          properties: {}
          type: object
      type: object
    ChangeProfilePassword:
      properties:
        password:
          description: Your old password.
          type: string
        newPassword:
          description: Your new password.
          type: string
      required:
      - newPassword
      - password
      type: object
    NewInviteEmail:
      properties:
        email:
          format: email
          minLength: 1
          type: string
        token:
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    NewPasswordEmail:
      example:
        email: email
      properties:
        email:
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    NewPassword:
      example:
        password: password
        resetToken: resetToken
      properties:
        password:
          description: The new password for your account.
          type: string
        resetToken:
          minLength: 1
          type: string
      required:
      - password
      - resetToken
      type: object
    Environment:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        slots:
          description: The slots defined for this application.
          items:
            $ref: '#/components/schemas/SlotDef'
          type: array
        functions:
          description: The functions defined for this application.
          items:
            $ref: '#/components/schemas/FunctionDef'
          type: array
        templates:
          description: The templates defined for this application.
          items:
            $ref: '#/components/schemas/TemplateDef'
          type: array
        variables:
          description: A stringified version of the environment's Talang variables
            scope.
          type: string
        giveawaysPools:
          description: The giveaways pools that the application is subscribed to.
          items:
            $ref: '#/components/schemas/GiveawaysPool'
          type: array
        loyaltyPrograms:
          description: The loyalty programs that the application is subscribed to.
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
        attributes:
          description: The attributes that the application is subscribed to.
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
        additionalCosts:
          description: The additional costs that the application is subscribed to.
          items:
            $ref: '#/components/schemas/AccountAdditionalCost'
          type: array
        audiences:
          description: The audiences contained in the account which the application
            belongs to.
          items:
            $ref: '#/components/schemas/Audience'
          type: array
        collections:
          description: The account-level collections that the application is subscribed
            to.
          items:
            $ref: '#/components/schemas/Collection'
          type: array
      required:
      - applicationId
      - created
      - functions
      - id
      - slots
      - templates
      - variables
      type: object
    SlotDef:
      properties:
        name:
          description: The dot-separated path to this slot for use in Talang.
          type: string
        type:
          description: The type of this slot, one of string, number, boolean, or list[type].
          type: string
        title:
          description: Campaigner-friendly name for the slot.
          type: string
        description:
          description: A short description of the slot.
          type: string
        help:
          description: Extended help text for the slot.
          type: string
        writable:
          description: Whether or not this slot can be updated by rule effects.
          type: boolean
      required:
      - name
      - title
      - type
      - writable
      type: object
    FuncArgDef:
      properties:
        type:
          description: The type of value this argument expects.
          enum:
          - string
          - boolean
          - number
          - time
          minLength: 1
          type: string
        description:
          description: A campaigner-friendly description of the argument, this will
            also be shown in the rule editor.
          type: string
      required:
      - description
      - type
      type: object
    TemplateArgDef:
      description: ""
      example:
        ui: '{}'
        description: description
        type: string
        title: title
      properties:
        type:
          description: The type of value this argument expects.
          enum:
          - string
          - boolean
          - number
          - time
          minLength: 1
          type: string
        description:
          description: A campaigner-friendly description of the argument, this will
            also be shown in the rule editor.
          type: string
        title:
          description: A campaigner friendly name for the argument, this will be shown
            in the rule editor.
          minLength: 1
          type: string
        ui:
          description: Arbitrary metadata that may be used to render an input for
            this argument.
          properties: {}
          type: object
      required:
      - description
      - title
      - type
      - ui
      type: object
    FunctionDef:
      properties:
        name:
          description: The function name used in Talang.
          minLength: 1
          type: string
        type:
          description: The type of this function argument.
          type: string
        description:
          description: A short description of the function.
          type: string
        help:
          description: Extended help text for the function.
          type: string
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/FuncArgDef'
          type: array
      required:
      - args
      - name
      - type
      type: object
    CampaignTemplateParams:
      properties:
        name:
          description: Name of the campaign template parameter.
          minLength: 1
          type: string
        type:
          description: Defines the type of parameter value.
          enum:
          - string
          - number
          - boolean
          - percent
          - (list string)
          - time
          type: string
        description:
          description: Explains the meaning of this template parameter and the placeholder
            value that will define it. It is used on campaign creation from this template.
          type: string
        attributeId:
          description: ID of the corresponding attribute.
          example: 42
          type: integer
      required:
      - description
      - name
      - type
      type: object
    NewCampaignTemplate:
      properties:
        name:
          description: The campaign template name.
          minLength: 1
          type: string
        description:
          description: Customer-facing text that explains the objective of the template.
          type: string
        instructions:
          description: Customer-facing text that explains how to use the template.
            For example, you can use this property to explain the available attributes
            of this template, and how they can be modified when a user uses this template
            to create a new campaign.
          type: string
        campaignAttributes:
          description: The Campaign Attributes that Campaigns created from this template
            will have by default.
          properties: {}
          type: object
        couponAttributes:
          description: The Campaign Attributes that Coupons created from this template
            will have by default.
          properties: {}
          type: object
        state:
          description: Only Campaign Templates in 'available' state may be used to
            create Campaigns.
          enum:
          - draft
          - enabled
          - disabled
          type: string
        tags:
          description: A list of tags for the campaign template.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign template.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign template.
          items:
            $ref: '#/components/schemas/TemplateLimitConfig'
          type: array
        templateParams:
          description: Template parameters are fields which can be used to replace
            values in a rule.
          items:
            $ref: '#/components/schemas/CampaignTemplateParams'
          type: array
        campaignCollections:
          description: The campaign collections from the blueprint campaign for the
            template.
          items:
            $ref: '#/components/schemas/CampaignTemplateCollection'
          type: array
        defaultCampaignGroupId:
          description: The default campaignGroupId.
          example: 42
          type: integer
      required:
      - description
      - instructions
      - name
      - state
      type: object
    UpdateCampaignTemplate:
      properties:
        name:
          description: The campaign template name.
          minLength: 1
          type: string
        description:
          description: Customer-facing text that explains the objective of the template.
          type: string
        instructions:
          description: Customer-facing text that explains how to use the template.
            For example, you can use this property to explain the available attributes
            of this template, and how they can be modified when a user uses this template
            to create a new campaign.
          type: string
        campaignAttributes:
          description: The Campaign Attributes that Campaigns created from this template
            will have by default.
          properties: {}
          type: object
        couponAttributes:
          description: The Campaign Attributes that Coupons created from this template
            will have by default.
          properties: {}
          type: object
        state:
          description: Only Campaign Templates in 'available' state may be used to
            create Campaigns.
          enum:
          - draft
          - enabled
          - disabled
          type: string
        activeRulesetId:
          description: The ID of the Ruleset this Campaign Template will use.
          type: integer
        tags:
          description: A list of tags for the campaign template.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign template.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign template.
          items:
            $ref: '#/components/schemas/TemplateLimitConfig'
          type: array
        templateParams:
          description: Template parameters are fields which can be used to replace
            values in a rule.
          items:
            $ref: '#/components/schemas/CampaignTemplateParams'
          type: array
        applicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this campaign template.
          items:
            type: integer
          type: array
        campaignCollections:
          description: The campaign collections from the blueprint campaign for the
            template.
          items:
            $ref: '#/components/schemas/CampaignTemplateCollection'
          type: array
        defaultCampaignGroupId:
          description: The default campaignGroupId.
          example: 42
          type: integer
      required:
      - applicationsIds
      - description
      - instructions
      - name
      - state
      type: object
    CampaignTemplateCollection:
      properties:
        name:
          description: The name of this collection.
          example: My collection
          minLength: 1
          pattern: ^[A-Za-z](\w|\s)*$
          type: string
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
      required:
      - name
      type: object
    CampaignTemplate:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: The campaign template name.
          minLength: 1
          type: string
        description:
          description: Customer-facing text that explains the objective of the template.
          type: string
        instructions:
          description: Customer-facing text that explains how to use the template.
            For example, you can use this property to explain the available attributes
            of this template, and how they can be modified when a user uses this template
            to create a new campaign.
          type: string
        campaignAttributes:
          description: The Campaign Attributes that Campaigns created from this template
            will have by default.
          properties: {}
          type: object
        couponAttributes:
          description: The Campaign Attributes that Coupons created from this template
            will have by default.
          properties: {}
          type: object
        state:
          description: Only Campaign Templates in 'available' state may be used to
            create Campaigns.
          enum:
          - draft
          - enabled
          - disabled
          type: string
        activeRulesetId:
          description: The ID of the Ruleset this Campaign Template will use.
          type: integer
        tags:
          description: A list of tags for the campaign template.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign template.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign template.
          items:
            $ref: '#/components/schemas/TemplateLimitConfig'
          type: array
        templateParams:
          description: Template parameters are fields which can be used to replace
            values in a rule.
          items:
            $ref: '#/components/schemas/CampaignTemplateParams'
          type: array
        applicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this campaign template. A list of the IDs of the applications that are
            subscribed to this campaign template.
          items:
            description: ""
            type: integer
          type: array
        campaignCollections:
          description: The campaign collections from the blueprint campaign for the
            template.
          items:
            $ref: '#/components/schemas/CampaignTemplateCollection'
          type: array
        defaultCampaignGroupId:
          description: The default campaignGroupId.
          example: 42
          type: integer
        updated:
          description: Timestamp of the most recent update to the campaign template
            or any of its elements.
          format: date-time
          type: string
        updatedBy:
          description: Name of the user who last updated this campaign template if
            available.
          type: string
        validApplicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          type: array
      required:
      - accountId
      - applicationsIds
      - created
      - description
      - id
      - instructions
      - name
      - state
      - userId
      - validApplicationIds
      type: object
    CreateTemplateCampaign:
      example:
        campaignAttributesOverrides: '{}'
        name: Discount campaign
        description: This template is for discount campaigns.
        limitOverrides:
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        - period: yearly
          entities:
          - Coupon
          limit: 1000.0
          action: createCoupon
        templateParamValues:
        - expression:
          - '{}'
          - '{}'
          valueType: string
          name: my property
          type: templateParameter
        - expression:
          - '{}'
          - '{}'
          valueType: string
          name: my property
          type: templateParameter
        templateId: 4
        campaignGroups:
        - 1
        - 3
        tags:
        - summer
      properties:
        name:
          description: A user-facing name for this campaign.
          example: Discount campaign
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          example: This template is for discount campaigns.
          title: Campaign Description
          type: string
        templateId:
          description: The ID of the Campaign Template which will be used in order
            to create the Campaign.
          example: 4
          type: integer
        campaignAttributesOverrides:
          description: Custom Campaign Attributes. If the Campaign Template defines
            the same values, they will be overridden.
          properties: {}
          type: object
        templateParamValues:
          description: Actual values to replace the template placeholder values in
            the Ruleset bindings. Values for all Template Parameters must be provided.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        limitOverrides:
          description: Limits for this Campaign. If the Campaign Template or Application
            define default values for the same limits, they will be overridden.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignGroups:
          description: |
            The IDs of the [campaign groups](https://docs.talon.one/docs/product/account/managing-campaign-groups/) this campaign belongs to.
          example:
          - 1
          - 3
          items:
            type: integer
          type: array
        tags:
          description: A list of tags for the campaign. If the campaign template has
            tags, they will be overridden by this list.
          example:
          - summer
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
      required:
      - name
      - templateId
      type: object
    CreateTemplateCampaignResponse:
      example:
        collections:
        - accountId: 3886
          createdBy: 134
          payload:
          - KTL-WH-ET-1
          - KTL-BL-ET-1
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 7
          subscribedApplicationsIds:
          - 1
          - 2
          - 3
          name: My collection
          modified: 2021-09-12T10:12:42Z
          description: My collection of SKUs
          modifiedBy: 48
          id: 6
          applicationId: 1
        - accountId: 3886
          createdBy: 134
          payload:
          - KTL-WH-ET-1
          - KTL-BL-ET-1
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 7
          subscribedApplicationsIds:
          - 1
          - 2
          - 3
          name: My collection
          modified: 2021-09-12T10:12:42Z
          description: My collection of SKUs
          modifiedBy: 48
          id: 6
          applicationId: 1
        ruleset:
          rbVersion: v2
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 320
          bindings: []
          activatedAt: 2000-01-23T04:56:07.000+00:00
          activate: true
          rules:
          - condition:
            - and
            - - couponValid
            effects:
            - catch
            - - noop
            - - setDiscount
              - 10% off
              - - '*'
                - - "."
                  - Session
                  - Total
                - - /
                  - 10
                  - 100
            bindings:
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            description: Creates a discount when a coupon is valid
            title: Give discount via coupon
          - condition:
            - and
            - - couponValid
            effects:
            - catch
            - - noop
            - - setDiscount
              - 10% off
              - - '*'
                - - "."
                  - Session
                  - Total
                - - /
                  - 10
                  - 100
            bindings:
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            description: Creates a discount when a coupon is valid
            title: Give discount via coupon
          id: 6
          templateId: 3
          userId: 6
        campaign:
          callApiEffectCount: 0
          createdLoyaltyPointsEffectCount: 2
          discountCount: 288.0
          description: Campaign for all summer 2021 promotions
          templateId: 3
          customEffectCount: 0
          features:
          - coupons
          - referrals
          createdLoyaltyPointsCount: 9.0
          couponSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          startTime: 2021-07-20T22:00:00Z
          id: 3
          state: enabled
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          activeRulesetId: 4
          updatedBy: Jane Doe
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 8
          couponRedemptionCount: 163
          userId: 2
          couponCreationCount: 16
          campaignGroups:
          - 1
          - 3
          tags:
          - summer
          awardedGiveawaysCount: 9
          redeemedLoyaltyPointsEffectCount: 9
          discountEffectCount: 343
          createdBy: John Doe
          redeemedLoyaltyPointsCount: 8.0
          addFreeItemEffectCount: 0
          name: Summer promotions
          referralSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          attributes: '{}'
          lastActivity: 2022-11-10T23:00:00Z
          endTime: 2021-09-22T22:00:00Z
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        ruleset:
          $ref: '#/components/schemas/Ruleset'
        collections:
          items:
            $ref: '#/components/schemas/Collection'
          type: array
      required:
      - campaign
      - ruleset
      type: object
    NewTemplateDef:
      properties:
        title:
          description: Campaigner-friendly name for the template that will be shown
            in the rule editor.
          minLength: 1
          type: string
        description:
          description: A short description of the template that will be shown in the
            rule editor.
          type: string
        help:
          description: Extended help text for the template.
          type: string
        category:
          description: Used for grouping templates in the rule editor sidebar.
          minLength: 1
          type: string
        expr:
          description: A Talang expression that contains variable bindings referring
            to args.
          items:
            properties: {}
            type: object
          type: array
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        expose:
          default: false
          description: A flag to control exposure in Rule Builder.
          type: boolean
      required:
      - args
      - category
      - expr
      - title
      type: object
    TemplateDef:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        title:
          description: Campaigner-friendly name for the template that will be shown
            in the rule editor.
          minLength: 1
          type: string
        description:
          description: A short description of the template that will be shown in the
            rule editor.
          type: string
        help:
          description: Extended help text for the template.
          type: string
        category:
          description: Used for grouping templates in the rule editor sidebar.
          minLength: 1
          type: string
        expr:
          description: A Talang expression that contains variable bindings referring
            to args.
          items:
            properties: {}
            type: object
          type: array
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        expose:
          default: false
          description: A flag to control exposure in Rule Builder.
          type: boolean
        name:
          description: The template name used in Talang.
          minLength: 1
          type: string
      required:
      - applicationId
      - args
      - category
      - created
      - description
      - expr
      - help
      - id
      - name
      - title
      type: object
    NewAttribute:
      description: ""
      example:
        editable: true
        subscribedApplicationsIds:
        - 0
        - 0
        description: description
        restrictedBySuggestions: false
        eventType: eventType
        title: title
        type: string
        hasAllowedList: false
        allowedSubscriptions:
        - application
        - application
        name: name
        suggestions:
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        subscribedCatalogsIds:
        - 6
        - 6
        entity: Account
      properties:
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Account
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          - Giveaway
          - Referral
          type: string
        eventType:
          type: string
        name:
          description: The attribute name that will be used in API requests and Talang.
            E.g. if `name == "region"` then you would set the region attribute by
            including an `attributes.region` property in your request payload.
          pattern: ^[A-Za-z]\w*$
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          pattern: ^[A-Za-z][A-Za-z0-9_.!~*'() -]*$
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
          - (list location)
          type: string
        description:
          description: A description of this attribute.
          type: string
        suggestions:
          description: A list of suggestions for the attribute.
          items:
            minLength: 1
            type: string
          maxItems: 50
          type: array
        hasAllowedList:
          default: false
          description: Whether or not this attribute has an allowed list of values
            associated with it.
          type: boolean
        restrictedBySuggestions:
          default: false
          description: |
            Whether or not this attribute's value is restricted by suggestions (`suggestions` property)
            or by an allowed list of value (`hasAllowedList` property).
          type: boolean
        editable:
          description: Whether or not this attribute can be edited.
          type: boolean
        subscribedApplicationsIds:
          description: A list of the IDs of the applications where this attribute
            is available.
          items:
            type: integer
          type: array
        subscribedCatalogsIds:
          description: A list of the IDs of the catalogs where this attribute is available.
          items:
            type: integer
          type: array
        allowedSubscriptions:
          description: |
            A list of allowed subscription types for this attribute.

            **Note:** This only applies to attributes associated with the `CartItem` entity.
          items:
            enum:
            - application
            - catalog
            type: string
          maxItems: 2
          type: array
      required:
      - description
      - editable
      - entity
      - name
      - suggestions
      - title
      - type
      type: object
    Attribute:
      description: ""
      example:
        created: 2020-06-10T09:05:27.993483Z
        editable: true
        subscribedApplicationsIds:
        - 6
        - 6
        description: description
        restrictedBySuggestions: false
        eventType: eventType
        title: title
        type: string
        accountId: 3886
        eventTypeId: 22
        hasAllowedList: false
        allowedSubscriptions:
        - application
        - application
        name: name
        suggestions:
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        id: 6
        subscribedCatalogsIds:
        - 1
        - 1
        entity: Account
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Account
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          - Giveaway
          - Referral
          type: string
        eventType:
          type: string
        name:
          description: The attribute name that will be used in API requests and Talang.
            E.g. if `name == "region"` then you would set the region attribute by
            including an `attributes.region` property in your request payload.
          pattern: ^[A-Za-z]\w*$
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          pattern: ^[A-Za-z][A-Za-z0-9_.!~*'() -]*$
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
          - (list location)
          type: string
        description:
          description: A description of this attribute.
          type: string
        suggestions:
          description: A list of suggestions for the attribute.
          items:
            minLength: 1
            type: string
          maxItems: 50
          type: array
        hasAllowedList:
          default: false
          description: Whether or not this attribute has an allowed list of values
            associated with it.
          type: boolean
        restrictedBySuggestions:
          default: false
          description: |
            Whether or not this attribute's value is restricted by suggestions (`suggestions` property)
            or by an allowed list of value (`hasAllowedList` property).
          type: boolean
        editable:
          description: Whether or not this attribute can be edited.
          type: boolean
        subscribedApplicationsIds:
          description: A list of the IDs of the applications where this attribute
            is available.
          items:
            type: integer
          type: array
        subscribedCatalogsIds:
          description: A list of the IDs of the catalogs where this attribute is available.
          items:
            type: integer
          type: array
        allowedSubscriptions:
          description: |
            A list of allowed subscription types for this attribute.

            **Note:** This only applies to attributes associated with the `CartItem` entity.
          items:
            enum:
            - application
            - catalog
            type: string
          maxItems: 2
          type: array
        eventTypeId:
          example: 22
          type: integer
      required:
      - accountId
      - created
      - description
      - editable
      - entity
      - id
      - name
      - suggestions
      - title
      - type
      type: object
    NewAdditionalCost:
      description: ""
      example:
        name: name
        subscribedApplicationsIds:
        - 0
        - 0
        description: description
        title: title
        type: session
      properties:
        name:
          description: The additional cost name that will be used in API requests
            and Talang. E.g. if `name == "shipping"` then you would set the shipping
            additional cost by including an `additionalCosts.shipping` property in
            your request payload.
          pattern: ^[A-Za-z](\w|\s)*$
          type: string
        title:
          description: The human-readable name for the additional cost that will be
            shown in the Campaign Manager. Like `name`, the combination of entity
            and title must also be unique.
          pattern: ^[A-Za-z][A-Za-z0-9_.!~*'() -]*$
          type: string
        description:
          description: A description of this additional cost.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this additional cost.
          items:
            type: integer
          type: array
        type:
          default: session
          description: |
            The type of additional cost. The following options can be chosen:
            - `session`: Additional cost will be added per session,
            - `item`: Additional cost will be added per item,
            - `both`: Additional cost will be added per item and session.
          enum:
          - session
          - item
          - both
          type: string
      required:
      - description
      - name
      - title
      type: object
    AccountAdditionalCost:
      description: ""
      example:
        accountId: 3886
        created: 2020-06-10T09:05:27.993483Z
        name: name
        subscribedApplicationsIds:
        - 6
        - 6
        description: description
        id: 6
        title: title
        type: session
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The additional cost name that will be used in API requests
            and Talang. E.g. if `name == "shipping"` then you would set the shipping
            additional cost by including an `additionalCosts.shipping` property in
            your request payload.
          pattern: ^[A-Za-z](\w|\s)*$
          type: string
        title:
          description: The human-readable name for the additional cost that will be
            shown in the Campaign Manager. Like `name`, the combination of entity
            and title must also be unique.
          pattern: ^[A-Za-z][A-Za-z0-9_.!~*'() -]*$
          type: string
        description:
          description: A description of this additional cost.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this additional cost.
          items:
            type: integer
          type: array
        type:
          default: session
          description: |
            The type of additional cost. The following options can be chosen:
            - `session`: Additional cost will be added per session,
            - `item`: Additional cost will be added per item,
            - `both`: Additional cost will be added per item and session.
          enum:
          - session
          - item
          - both
          type: string
      required:
      - accountId
      - created
      - description
      - id
      - name
      - title
      type: object
    NewEventType:
      description: ""
      properties:
        title:
          description: The human-friendly display name for this event type. Use a
            short, past-tense, description of the event.
          minLength: 1
          type: string
        name:
          description: The machine-friendly canonical name for this event type. This
            will be used in URLs, and cannot be changed after an event type has been
            created.
          minLength: 1
          type: string
        description:
          description: |
            An explanation of when the event type is triggered. Write this with a campaign manager in mind. For example:

            > The "Payment Accepted" event is triggered after successful processing of a payment by our payment gateway.
          type: string
      required:
      - name
      - title
      type: object
    EventType:
      description: ""
      example:
        created: 2020-06-10T09:05:27.993483Z
        name: name
        description: description
        id: 6
        title: title
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        title:
          description: The human-friendly display name for this event type. Use a
            short, past-tense, description of the event.
          minLength: 1
          type: string
        name:
          description: The machine-friendly canonical name for this event type. This
            will be used in URLs, and cannot be changed after an event type has been
            created.
          minLength: 1
          type: string
        description:
          description: |
            An explanation of when the event type is triggered. Write this with a campaign manager in mind. For example:

            > The "Payment Accepted" event is triggered after successful processing of a payment by our payment gateway.
          type: string
      required:
      - created
      - id
      - name
      - title
      type: object
    NewWebhook:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        title:
          description: Friendly title for this webhook.
          pattern: ^[A-Za-z][A-Za-z0-9_.!~*'() -]*$
          type: string
        verb:
          description: API method for this webhook.
          enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
          type: string
        url:
          description: API url (supports templating using parameters) for this webhook.
          type: string
        headers:
          description: List of API HTTP headers for this webhook.
          items:
            pattern: ^([^:,]*):([^]*|[^,]*)$
            type: string
          type: array
        payload:
          description: API payload (supports templating using parameters) for this
            webhook.
          type: string
        params:
          description: Array of template argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        enabled:
          description: Enables or disables webhook from showing in rule builder.
          type: boolean
      required:
      - applicationIds
      - enabled
      - headers
      - params
      - title
      - url
      - verb
      type: object
    Webhook:
      description: ""
      example:
        headers:
        - headers
        - headers
        payload: payload
        created: 2020-06-10T09:05:27.993483Z
        verb: POST
        modified: 2021-09-12T10:12:42Z
        id: 6
        title: title
        params:
        - ui: '{}'
          description: description
          type: string
          title: title
        - ui: '{}'
          description: description
          type: string
          title: title
        url: url
        enabled: true
        applicationIds:
        - 6
        - 6
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        applicationIds:
          description: The IDs of the applications that are related to this entity.
            The IDs of the applications that are related to this entity.
          items:
            description: ""
            type: integer
          minItems: 1
          type: array
        title:
          description: Friendly title for this webhook.
          pattern: ^[A-Za-z][A-Za-z0-9_.!~*'() -]*$
          type: string
        verb:
          description: API method for this webhook.
          enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
          type: string
        url:
          description: API url (supports templating using parameters) for this webhook.
          type: string
        headers:
          description: List of API HTTP headers for this webhook.
          items:
            pattern: ^([^:,]*):([^]*|[^,]*)$
            type: string
          type: array
        payload:
          description: API payload (supports templating using parameters) for this
            webhook.
          type: string
        params:
          description: Array of template argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        enabled:
          description: Enables or disables webhook from showing in rule builder.
          type: boolean
      required:
      - applicationIds
      - created
      - enabled
      - headers
      - id
      - modified
      - params
      - title
      - url
      - verb
      type: object
    MultipleNewAudiences:
      properties:
        audiences:
          items:
            $ref: '#/components/schemas/NewMultipleAudiencesItem'
          type: array
      required:
      - audiences
      type: object
    MultipleAudiences:
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        audiences:
          items:
            $ref: '#/components/schemas/MultipleAudiencesItem'
          type: array
      required:
      - accountId
      - audiences
      type: object
    AudienceIntegrationID:
      properties:
        integrationId:
          description: The ID of this audience in the third-party integration.
          example: 382370BKDB946
          maxLength: 1000
          minLength: 1
          type: string
      type: object
    NewMultipleAudiencesItem:
      description: ""
      properties:
        name:
          description: The human-friendly display name for this audience.
          example: Travel audience
          minLength: 1
          type: string
        integrationId:
          description: The ID of this audience in the third-party integration.
          example: 382370BKDB946
          maxLength: 1000
          minLength: 1
          type: string
      required:
      - name
      type: object
    MultipleAudiencesItem:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        name:
          description: The human-friendly display name for this audience.
          example: Travel audience
          minLength: 1
          type: string
        integrationId:
          description: The ID of this audience in the third-party integration.
          example: 382370BKDB946
          maxLength: 1000
          minLength: 1
          type: string
        status:
          description: |
            Indicates whether the audience is new, updated or unmodified by the request.
          enum:
          - unmodified
          - updated
          - new
          example: new
          type: string
      required:
      - created
      - id
      - integrationId
      - name
      - status
      type: object
    NewInternalAudience:
      properties:
        name:
          description: The human-friendly display name for this audience.
          example: Travel audience
          minLength: 1
          type: string
        sandbox:
          description: Indicates if this is a live or sandbox Application.
          example: true
          type: boolean
        description:
          description: A description of the audience.
          example: Travel audience 18-25
          type: string
      required:
      - name
      type: object
    NewAudience:
      description: ""
      example:
        name: Travel audience
        sandbox: true
        integration: mparticle
        description: Travel audience 18-25
        integrationId: 382370BKDB946
        createdIn3rdParty: false
      properties:
        name:
          description: The human-friendly display name for this audience.
          example: Travel audience
          minLength: 1
          type: string
        sandbox:
          description: Indicates if this is a live or sandbox Application.
          example: true
          type: boolean
        description:
          description: A description of the audience.
          example: Travel audience 18-25
          type: string
        integration:
          description: |
            The Talon.One-supported [3rd-party platform](https://docs.talon.one/docs/dev/technology-partners/overview) that this audience was created in.

            For example, `mParticle`, `Segment`, `Selligent`, `Braze`, or `Iterable`.

            **Note:** If you do not integrate with any of these platforms, do not use this property.
          example: mparticle
          type: string
        integrationId:
          description: |
            The ID of this audience in the third-party integration.

            **Note:** To create an audience that doesn't come from a 3rd party platform, do not use this property.
          example: 382370BKDB946
          maxLength: 1000
          minLength: 1
          type: string
        createdIn3rdParty:
          description: Determines if this audience is a 3rd party audience or not.
          example: false
          type: boolean
      required:
      - name
      type: object
    UpdateAudience:
      example:
        name: Travel audience
      properties:
        name:
          description: The human-friendly display name for this audience.
          example: Travel audience
          minLength: 1
          type: string
      required:
      - name
      type: object
    Audience:
      description: ""
      example:
        accountId: 3886
        created: 2020-06-10T09:05:27.993483Z
        name: Travel audience
        sandbox: true
        integration: mparticle
        description: Travel audience 18-25
        integrationId: 382370BKDB946
        id: 6
        createdIn3rdParty: false
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        name:
          description: The human-friendly display name for this audience.
          example: Travel audience
          minLength: 1
          type: string
        sandbox:
          description: Indicates if this is a live or sandbox Application.
          example: true
          type: boolean
        description:
          description: A description of the audience.
          example: Travel audience 18-25
          type: string
        integration:
          description: |
            The Talon.One-supported [3rd-party platform](https://docs.talon.one/docs/dev/technology-partners/overview) that this audience was created in.

            For example, `mParticle`, `Segment`, `Selligent`, `Braze`, or `Iterable`.

            **Note:** If you do not integrate with any of these platforms, do not use this property.
          example: mparticle
          type: string
        integrationId:
          description: |
            The ID of this audience in the third-party integration.

            **Note:** To create an audience that doesn't come from a 3rd party platform, do not use this property.
          example: 382370BKDB946
          maxLength: 1000
          minLength: 1
          type: string
        createdIn3rdParty:
          description: Determines if this audience is a 3rd party audience or not.
          example: false
          type: boolean
      required:
      - accountId
      - created
      - id
      - name
      type: object
    AudienceAnalytics:
      description: The audiences and their members count.
      properties:
        audienceId:
          description: The ID of the audience.
          example: 1
          type: integer
        membersCount:
          description: The count of members under a single audience.
          example: 1234
          type: integer
      type: object
    ManagerConfig:
      properties:
        schemaVersion:
          type: integer
      required:
      - schemaVersion
      type: object
    Export:
      description: ""
      example:
        filter: '{}'
        accountId: 3886
        created: 2020-06-10T09:05:27.993483Z
        id: 6
        userId: 6
        entity: Coupon
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: The name of the entity that was exported.
          enum:
          - Coupon
          - Referral
          - Effect
          - CustomerSession
          - LoyaltyLedger
          - LoyaltyLedgerLog
          - Collection
          type: string
        filter:
          description: Map of keys and values that were used to filter the exported
            rows.
          properties: {}
          type: object
      required:
      - accountId
      - created
      - entity
      - filter
      - id
      - userId
      type: object
    Import:
      description: ""
      example:
        accountId: 3886
        amount: 10
        created: 2020-06-10T09:05:27.993483Z
        id: 6
        userId: 0
        entity: AttributeAllowedList
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: |
            The name of the entity that was imported.
          example: AttributeAllowedList
          type: string
        amount:
          description: The number of values that were imported.
          example: 10
          minimum: 0
          type: integer
      required:
      - accountId
      - amount
      - created
      - entity
      - id
      - userId
      type: object
    FeaturesFeed:
      description: ""
      properties:
        title:
          type: string
        pubDate:
          type: string
      type: object
    LibraryAttribute:
      description: ""
      properties:
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          type: string
        name:
          description: |
            The attribute name that will be used in API requests and Talang. E.g. if `name == "region"` then you would set the region attribute by including an `attributes.region` property in your request payload.
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          type: string
        description:
          description: A description of the attribute.
          type: string
        presets:
          description: The presets that indicate to which industry the attribute applies
            to.
          items:
            type: string
          type: array
        suggestions:
          description: Short suggestions that are used to group attributes.
          items:
            type: string
          type: array
      required:
      - description
      - entity
      - name
      - presets
      - suggestions
      - title
      - type
      type: object
    Role:
      description: ""
      example:
        accountId: 3886
        created: 2020-06-10T09:05:27.993483Z
        campaignGroupID: 6
        members:
        - 1
        - 1
        name: name
        modified: 2021-09-12T10:12:42Z
        description: description
        id: 6
        acl: '{}'
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        campaignGroupID:
          description: |
            The ID of the [Campaign Group](https://docs.talon.one/docs/product/account/managing-campaign-groups/)
            this role was created for.
          type: integer
        name:
          description: Name of the role.
          type: string
        description:
          description: Description of the role.
          type: string
        members:
          description: A list of user identifiers assigned to this role.
          items:
            type: integer
          type: array
        acl:
          description: Role ACL Policy.
          properties: {}
          type: object
      required:
      - accountId
      - acl
      - created
      - id
      - modified
      - name
      type: object
    NewRole:
      description: ""
      properties:
        name:
          description: Name of the role.
          type: string
        description:
          description: Description of the role.
          type: string
        acl:
          description: Role Policy this should be a stringified blob of json.
          type: string
        members:
          description: An array of user identifiers.
          items:
            type: integer
          type: array
      required:
      - acl
      - members
      - name
      type: object
    UpdateRole:
      properties:
        name:
          description: Name of the role.
          type: string
        description:
          description: Description of the role.
          type: string
        acl:
          description: Role Policy this should be a stringified blob of json.
          type: string
        members:
          description: An array of user identifiers.
          items:
            type: integer
          type: array
      type: object
    RoleAssign:
      description: ""
      properties:
        users:
          description: An array of userIDs.
          items:
            type: integer
          type: array
        roles:
          description: An array of roleIDs.
          items:
            type: integer
          type: array
      required:
      - roles
      - users
      type: object
    RoleMembership:
      properties:
        RoleID:
          description: ID of role.
          type: integer
        UserID:
          description: ID of User.
          type: integer
      required:
      - RoleID
      - UserID
      type: object
    CouponReservations:
      example:
        integrationIDs:
        - ty238-32fke9
        - 3gy32-008ye9
      properties:
        integrationIDs:
          description: List of customer integration IDs.
          example:
          - ty238-32fke9
          - 3gy32-008ye9
          items:
            type: string
          type: array
      required:
      - integrationIDs
      type: object
    LedgerEntry:
      description: ""
      example:
        expiryDate: 2022-04-26T11:02:38Z
        accountId: 0
        eventId: 3
        reason: Customer appeasement.
        amount: 100
        created: 2020-06-10T09:05:27.993483Z
        profileId: URNGV8294NV
        loyaltyProgramId: 323414846
        id: 6
        referenceId: 6
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        accountId:
          description: The ID of the Talon.One account that owns this profile.
          type: integer
        loyaltyProgramId:
          description: ID of the ledger.
          example: 323414846
          type: integer
        eventId:
          description: ID of the related event.
          example: 3
          type: integer
        amount:
          description: Amount of loyalty points.
          example: 100
          type: integer
        reason:
          description: reason for awarding/deducting points.
          example: Customer appeasement.
          type: string
        expiryDate:
          description: Expiry date of the points.
          example: 2022-04-26T11:02:38Z
          format: date-time
          type: string
        referenceId:
          description: The ID of the balancing ledgerEntry.
          type: integer
      required:
      - accountId
      - amount
      - created
      - eventId
      - expiryDate
      - id
      - loyaltyProgramId
      - profileId
      - reason
      type: object
    LoyaltyMembership:
      example:
        joined: 2000-01-23T04:56:07.000+00:00
        loyaltyProgramId: 323414846
      properties:
        joined:
          description: The moment in which the loyalty program was joined.
          format: date-time
          title: Loyalty program joined at
          type: string
        loyaltyProgramId:
          description: The ID of the loyalty program belonging to this entity.
          example: 323414846
          title: Loyalty program ID
          type: integer
      required:
      - loyaltyProgramId
      type: object
    Meta:
      example:
        campaigns: '{}'
        coupons: '{}'
        referralRejectionReason:
          reason: ReferralNotFound
          campaignId: 1
          referralId: 5
        warnings: '{}'
        couponRejectionReason:
          reason: CouponNotFound
          campaignId: 244
          couponId: 4928
      properties:
        campaigns:
          description: Maps each evaluated campaign ID to a key-value list of that
            campaigns attributes. Campaigns without attributes will be omitted.
          properties: {}
          type: object
        coupons:
          description: Maps the coupon value to a key-value list of that coupons attributes.
          properties: {}
          type: object
        couponRejectionReason:
          $ref: '#/components/schemas/CouponRejectionReason'
        referralRejectionReason:
          $ref: '#/components/schemas/ReferralRejectionReason'
        warnings:
          description: Contains warnings about possible misuse.
          properties: {}
          type: object
      type: object
    CouponRejectionReason:
      description: Holds a reference to the campaign, the coupon and the reason for
        which that coupon was rejected. Should only be present when there is a 'rejectCoupon'
        effect.
      example:
        reason: CouponNotFound
        campaignId: 244
        couponId: 4928
      properties:
        campaignId:
          example: 244
          type: integer
        couponId:
          example: 4928
          type: integer
        reason:
          enum:
          - CouponNotFound
          - CouponPartOfNotRunningCampaign
          - CouponLimitReached
          - CampaignLimitReached
          - ProfileLimitReached
          - CouponRecipientDoesNotMatch
          - CouponExpired
          - CouponStartDateInFuture
          - CouponRejectedByCondition
          - EffectCouldNotBeApplied
          example: CouponNotFound
          type: string
      required:
      - campaignId
      - couponId
      - reason
      type: object
    ReferralRejectionReason:
      description: Holds a reference to the campaign, the referral and the reason
        for which that referral was rejected. Should only be present when there is
        a 'rejectReferral' effect.
      example:
        reason: ReferralNotFound
        campaignId: 1
        referralId: 5
      properties:
        campaignId:
          type: integer
        referralId:
          type: integer
        reason:
          enum:
          - ReferralNotFound
          - ReferralRecipientIdSameAsAdvocate
          - ReferralPartOfNotRunningCampaign
          - ReferralLimitReached
          - CampaignLimitReached
          - ProfileLimitReached
          - ReferralRecipientDoesNotMatch
          - ReferralExpired
          - ReferralStartDateInFuture
          - ReferralRejectedByCondition
          - EffectCouldNotBeApplied
          type: string
      required:
      - campaignId
      - reason
      - referralId
      type: object
    ApplicationAPIKey:
      description: ""
      properties:
        title:
          description: Title for API Key.
          example: My generated key
          type: string
        expires:
          description: The date the API key expired.
          example: 2023-08-24T14:00:00Z
          format: date-time
          type: string
        platform:
          description: |
            The third-party platform the API key is valid for. Use `none` for a generic API key to be used
            from your own integration layer.
          enum:
          - none
          - segment
          - braze
          - mparticle
          - selligent
          - iterable
          - customer_engagement
          - customer_data
          - salesforce
          example: none
          type: string
        id:
          description: ID of the API Key.
          example: 34
          type: integer
        createdBy:
          description: ID of user who created.
          example: 280
          type: integer
        accountID:
          description: ID of account the key is used for.
          example: 13
          type: integer
        applicationID:
          description: ID of application the key is used for.
          example: 54
          type: integer
        created:
          description: The date the API key was created.
          example: 2022-03-02T16:46:17.758585Z
          format: date-time
          type: string
      required:
      - accountID
      - applicationID
      - created
      - createdBy
      - expires
      - id
      - title
      type: object
    NewApplicationAPIKey:
      description: ""
      properties:
        title:
          description: Title for API Key.
          example: My generated key
          type: string
        expires:
          description: The date the API key expired.
          example: 2023-08-24T14:00:00Z
          format: date-time
          type: string
        platform:
          description: |
            The third-party platform the API key is valid for. Use `none` for a generic API key to be used
            from your own integration layer.
          enum:
          - none
          - segment
          - braze
          - mparticle
          - selligent
          - iterable
          - customer_engagement
          - customer_data
          - salesforce
          example: none
          type: string
        id:
          description: ID of the API Key.
          example: 34
          type: integer
        createdBy:
          description: ID of user who created.
          example: 280
          type: integer
        accountID:
          description: ID of account the key is used for.
          example: 13
          type: integer
        applicationID:
          description: ID of application the key is used for.
          example: 54
          type: integer
        created:
          description: The date the API key was created.
          example: 2022-03-02T16:46:17.758585Z
          format: date-time
          type: string
        key:
          description: The API key.
          example: f45f90d21dcd9bac965c45e547e9754a3196891d09948e35adbcbedc4e9e4b01
          type: string
      required:
      - accountID
      - applicationID
      - created
      - createdBy
      - expires
      - id
      - key
      - title
      type: object
    CreateApplicationAPIKey:
      properties:
        title:
          description: Title for API Key.
          example: My generated key
          type: string
        expires:
          description: The date the API key expired.
          example: 2023-08-24T14:00:00Z
          format: date-time
          type: string
        platform:
          description: |
            The third-party platform the API key is valid for. Use `none` for a generic API key to be used
            from your own integration layer.
          enum:
          - none
          - segment
          - braze
          - mparticle
          - selligent
          - iterable
          - customer_engagement
          - customer_data
          - salesforce
          example: none
          type: string
      required:
      - expires
      - title
      type: object
    CreateManagementKey:
      properties:
        name:
          description: Name for management key.
          example: My generated key
          type: string
        expiryDate:
          description: The date the management key expires.
          example: 2023-08-24T14:00:00Z
          format: date-time
          type: string
        endpoints:
          description: The list of endpoints that can be accessed with the key
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
      required:
      - endpoints
      - expiryDate
      - name
      type: object
    ManagementKey:
      description: ""
      properties:
        name:
          description: Name for management key.
          example: My generated key
          type: string
        expiryDate:
          description: The date the management key expires.
          example: 2023-08-24T14:00:00Z
          format: date-time
          type: string
        endpoints:
          description: The list of endpoints that can be accessed with the key
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
        id:
          description: ID of the management key.
          example: 34
          type: integer
        createdBy:
          description: ID of the user who created it.
          example: 280
          type: integer
        accountID:
          description: ID of account the key is used for.
          example: 13
          type: integer
        created:
          description: The date the management key was created.
          example: 2022-03-02T16:46:17.758585Z
          format: date-time
          type: string
      required:
      - accountID
      - created
      - createdBy
      - endpoints
      - expiryDate
      - id
      - name
      type: object
    NewManagementKey:
      description: ""
      properties:
        name:
          description: Name for management key.
          example: My generated key
          type: string
        expiryDate:
          description: The date the management key expires.
          example: 2023-08-24T14:00:00Z
          format: date-time
          type: string
        endpoints:
          description: The list of endpoints that can be accessed with the key
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
        id:
          description: ID of the management key.
          example: 34
          type: integer
        createdBy:
          description: ID of the user who created it.
          example: 280
          type: integer
        accountID:
          description: ID of account the key is used for.
          example: 13
          type: integer
        created:
          description: The date the management key was created.
          example: 2022-03-02T16:46:17.758585Z
          format: date-time
          type: string
        key:
          description: The management key.
          example: f45f90d21dcd9bac965c45e547e9754a3196891d09948e35adbcbedc4e9e4b01
          type: string
      required:
      - accountID
      - created
      - createdBy
      - endpoints
      - expiryDate
      - id
      - key
      - name
      type: object
    Endpoint:
      properties:
        path:
          description: allowed endpoint
          example: /coupons
          type: string
      required:
      - path
      type: object
    Notification:
      properties:
        id:
          description: id of the notification.
          type: integer
        name:
          description: name of the notification.
          type: string
        description:
          description: description of the notification.
          type: string
      required:
      - description
      - id
      - name
      type: object
    Notifications:
      items:
        $ref: '#/components/schemas/Notification'
      type: array
    SamlConnection:
      description: ""
      properties:
        assertionConsumerServiceURL:
          description: The location where the SAML assertion is sent with a HTTP POST.
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
      required:
      - accountId
      - assertionConsumerServiceURL
      - audienceURI
      - created
      - enabled
      - id
      - issuer
      - name
      - signOnURL
      type: object
    NewSamlConnection:
      description: ""
      properties:
        x509certificate:
          description: X.509 Certificate.
          minLength: 1
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
      required:
      - accountId
      - enabled
      - issuer
      - name
      - signOnURL
      - x509certificate
      type: object
    SamlConnectionMetadata:
      properties:
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        accountId:
          type: number
        metadataDocument:
          description: Identity Provider metadata XML document.
          minLength: 1
          type: string
      required:
      - accountId
      - enabled
      - metadataDocument
      - name
      type: object
    BaseSamlConnection:
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
      required:
      - accountId
      - enabled
      - issuer
      - name
      - signOnURL
      type: object
    SamlLoginEndpoint:
      properties:
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        loginURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
      required:
      - loginURL
      - name
      type: object
    Effect:
      description: ""
      example:
        rulesetId: 73
        ruleIndex: 2
        triggeredForCatalogItem: 786
        campaignId: 244
        ruleName: Give 20% discount
        triggeredByCoupon: 4928
        effectType: rejectCoupon
        props: '{}'
      properties:
        campaignId:
          description: The ID of the campaign that triggered this effect.
          example: 244
          type: integer
        rulesetId:
          description: The ID of the ruleset that was active in the campaign when
            this effect was triggered.
          example: 73
          type: integer
        ruleIndex:
          description: The position of the rule that triggered this effect within
            the ruleset.
          example: 2
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect.
          example: Give 20% discount
          type: string
        effectType:
          description: The type of effect that was triggered.
          example: rejectCoupon
          type: string
        triggeredByCoupon:
          description: The ID of the coupon that was being evaluated when this effect
            was triggered.
          example: 4928
          type: integer
        triggeredForCatalogItem:
          description: The ID of the catalog item that was being evaluated when this
            effect was triggered.
          example: 786
          type: integer
        props:
          type: object
      required:
      - campaignId
      - effectType
      - props
      - ruleIndex
      - ruleName
      - rulesetId
      type: object
    EffectEntity:
      description: Definition of all properties that are present on all effects, independent
        of their type.
      properties:
        campaignId:
          description: The ID of the campaign that triggered this effect.
          example: 244
          type: integer
        rulesetId:
          description: The ID of the ruleset that was active in the campaign when
            this effect was triggered.
          example: 73
          type: integer
        ruleIndex:
          description: The position of the rule that triggered this effect within
            the ruleset.
          example: 2
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect.
          example: Give 20% discount
          type: string
        effectType:
          description: The type of effect that was triggered.
          example: rejectCoupon
          type: string
        triggeredByCoupon:
          description: The ID of the coupon that was being evaluated when this effect
            was triggered.
          example: 4928
          type: integer
        triggeredForCatalogItem:
          description: The ID of the catalog item that was being evaluated when this
            effect was triggered.
          example: 786
          type: integer
      required:
      - campaignId
      - effectType
      - ruleIndex
      - ruleName
      - rulesetId
      type: object
    EffectProps:
      type: object
    AcceptCouponEffectProps:
      description: The properties specific to the "acceptCoupon" effect. This gets
        triggered whenever the coupon is valid and all other conditions in the rules
        of its campaign are met.
      properties:
        value:
          description: The coupon code that was accepted.
          type: string
      required:
      - value
      type: object
    AcceptReferralEffectProps:
      description: The properties specific to the "acceptReferral" effect. TThis gets
        triggered whenever the referral code is valid and all other conditions in
        the rules of its campaign are met.
      properties:
        value:
          description: The referral code that was accepted.
          type: string
      required:
      - value
      type: object
    RedeemReferralEffectProps:
      description: |
        This effect is **deprecated**. The properties specific to the "redeemReferral" effect.
        This gets triggered whenever the referral code is valid, and a rule was triggered that contains a "redeem referral" effect.
      properties:
        id:
          description: The id of the referral code that was redeemed.
          type: integer
        value:
          description: The referral code that was redeemed.
          type: string
      required:
      - id
      - value
      type: object
    RejectCouponEffectProps:
      description: The properties specific to the "rejectCoupon" effect. This gets
        triggered whenever the coupon was rejected. See rejectionReason for more info
        on why.
      properties:
        value:
          description: The coupon code that was rejected.
          type: string
        rejectionReason:
          description: The reason why this coupon was rejected.
          type: string
        conditionIndex:
          description: The index of the condition that caused the rejection of the
            coupon.
          type: integer
        effectIndex:
          description: The index of the effect that caused the rejection of the coupon.
          type: integer
        details:
          description: More details about the failure.
          type: string
      required:
      - rejectionReason
      - value
      type: object
    RejectReferralEffectProps:
      description: The properties specific to the "rejectReferral" effect. This gets
        triggered whenever the referral code was rejected. See rejectionReason for
        more info on why.
      properties:
        value:
          description: The referral code that was rejected.
          type: string
        rejectionReason:
          description: The reason why this referral code was rejected.
          type: string
        conditionIndex:
          description: The index of the condition that caused the rejection of the
            referral.
          type: integer
        effectIndex:
          description: The index of the effect that caused the rejection of the referral.
          type: integer
        details:
          description: More details about the failure.
          type: string
      required:
      - rejectionReason
      - value
      type: object
    CouponCreatedEffectProps:
      description: The properties specific to the "couponCreated" effect. This gets
        triggered whenever a validated rule contained a "create coupon" effect, and
        a coupon was created for a customer. See "createdCoupons" on the response
        for all details of this coupon.
      properties:
        value:
          description: The coupon code that was created.
          type: string
        profileId:
          description: The integration identifier of the customer for whom this coupon
            was created.
          type: string
      required:
      - profileId
      - value
      type: object
    ReferralCreatedEffectProps:
      description: The properties specific to the "referralCreated" effect. This gets
        triggered whenever a validated rule contained a "create referral" effect,
        and a referral code was created for a customer. See "createdReferrals" on
        the response for all details of this referral code.
      properties:
        value:
          description: The referral code that was created.
          type: string
      required:
      - value
      type: object
    SetDiscountEffectProps:
      description: The properties specific to the "setDiscount" effect. This gets
        triggered whenever a validated rule contained a "set discount" effect. This
        is a discount that should be applied on the scope of defined with it.
      properties:
        name:
          description: The name/description of this discount.
          type: string
        value:
          description: The total monetary value of the discount.
          type: number
        scope:
          description: The scope which the discount was applied on, can be one of
            (cartItems,additionalCosts,sessionTotal).
          type: string
        desiredValue:
          description: The original value of the discount.
          type: number
      required:
      - name
      - value
      type: object
    SetDiscountPerItemEffectProps:
      description: |
        The properties specific to the `setDiscountPerItem` effect, triggered whenever a validated rule contained a
        "set per item discount" effect.
        This is a discount that will be applied either on a specific item, on a specific item + additional cost or on all additional costs per item.
        This depends on the chosen scope.
      properties:
        name:
          description: |
            The name of the discount. Contains a hashtag character indicating the index of the position of the item the discount applies
            to. It is identical to the value of the `position` property.
          type: string
        value:
          description: The total monetary value of the discount.
          type: number
        position:
          description: The index of the item in the cart items list on which this
            discount should be applied.
          type: number
        subPosition:
          description: |
            Only used when [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items) is enabled.
            Indicates which item the discount applies to for cart items with `quantity` > 1.
          type: number
        desiredValue:
          description: The original value of the discount.
          type: number
        scope:
          description: |
            The scope of the discount:
            - `additionalCosts`: The discount applies to all the additional costs of the item.
            - `itemTotal`: The discount applies to the price of the item + the additional costs of the item.
            - `price`: The discount applies to the price of the item.
          type: string
        totalDiscount:
          description: The total discount given if this effect is a result of a prorated
            discount.
          type: number
        desiredTotalDiscount:
          description: The original total discount to give if this effect is a result
            of a prorated discount.
          type: number
        bundleIndex:
          description: The position of the bundle in a list of item bundles created
            from the same bundle definition.
          type: integer
        bundleName:
          description: The name of the bundle binding.
          type: string
      required:
      - name
      - position
      - value
      type: object
    SetDiscountPerAdditionalCostPerItemEffectProps:
      description: The properties specific to the "setDiscountPerAdditionalCostPerItem"
        effect. This gets triggered whenever a validated rule contained a "set discount
        per additional cost per item" effect. This is a discount that should be applied
        on a specific additional cost in a specific item.
      properties:
        name:
          description: The name/description of this discount.
          type: string
        additionalCostId:
          description: The ID of the additional cost.
          type: integer
        value:
          description: The total monetary value of the discount.
          type: number
        position:
          description: The index of the item in the cart item list containing the
            additional cost to be discounted.
          type: number
        subPosition:
          description: |
            Only used when [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items) is enabled.
            Indicates which item the discount applies to for cart items with `quantity` > 1.
          type: number
        additionalCost:
          description: The name of the additional cost.
          type: string
        desiredValue:
          description: |
            Only with [partial discounts enabled](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#partial-discounts).
            Represents the monetary value of the discount to be applied to additional discount without considering budget limitations.
          type: number
      required:
      - additionalCost
      - additionalCostId
      - name
      - position
      - value
      type: object
    SetDiscountPerAdditionalCostEffectProps:
      description: The properties specific to the "setDiscountPerAdditionalCost" effect.
        This gets triggered whenever a validated rule contained a "set per additional
        cost discount" effect. This is a discount that should be applied on a specific
        additional cost.
      properties:
        name:
          description: The name/description of this discount.
          type: string
        additionalCostId:
          description: The ID of the additional cost.
          type: integer
        additionalCost:
          description: The name of the additional cost.
          type: string
        value:
          description: The total monetary value of the discount.
          type: number
        desiredValue:
          description: The original value of the discount.
          type: number
      required:
      - additionalCost
      - additionalCostId
      - name
      - value
      type: object
    TriggerWebhookEffectProps:
      description: The properties specific to the "triggerWebhook" effect. This gets
        triggered whenever a validated rule contained a "trigger webhook" effect.
        This is communicated as an FYI and should usually not require action on your
        side.
      properties:
        webhookId:
          description: The ID of the webhook that was triggered.
          type: number
        webhookName:
          description: The name of the webhook that was triggered.
          type: string
      required:
      - webhookId
      - webhookName
      type: object
    AddLoyaltyPointsEffectProps:
      description: |
        The properties specific to the "addLoyaltyPoints" effect. This gets triggered whenever a validated rule contained an "add loyalty" effect. These points are automatically stored and managed inside Talon.One.
      properties:
        name:
          description: The reason of the point addition.
          type: string
        programId:
          description: The ID of the loyalty program where these points were added.
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were added.
          type: string
        value:
          description: The amount of points that were added.
          type: number
        desiredValue:
          description: The original amount of loyalty points to be awarded.
          type: number
        recipientIntegrationId:
          description: The user for whom these points were added.
          maxLength: 1000
          type: string
        startDate:
          description: Date after which points will be valid.
          format: date-time
          type: string
        expiryDate:
          description: Date after which points will expire.
          format: date-time
          type: string
        transactionUUID:
          description: The identifier of this addition in the loyalty ledger.
          type: string
        cartItemPosition:
          description: The index of the item in the cart items list on which the loyal
            points addition should be applied.
          type: number
        cartItemSubPosition:
          description: |
            The sub position is triggered when application flattening is enabled.
            It indicates to which item the loyalty points addition applies, for cart items with `quantity` > 1.
          type: number
        cardIdentifier:
          description: The card on which these points were added.
          type: string
      required:
      - name
      - programId
      - recipientIntegrationId
      - subLedgerId
      - transactionUUID
      - value
      type: object
    DeductLoyaltyPointsEffectProps:
      description: The properties specific to the "deductLoyaltyPoints" effect. This
        gets triggered whenever a validated rule contained a condition to only trigger
        when the given number of loyalty points could be deduced. These points are
        automatically stored and managed inside Talon.One.
      properties:
        ruleTitle:
          description: The title of the rule that contained triggered this points
            deduction.
          type: string
        programId:
          description: The ID of the loyalty program where these points were added.
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were added.
          type: string
        value:
          description: The amount of points that were deducted.
          type: number
        transactionUUID:
          description: The identifier of this deduction in the loyalty ledger.
          type: string
        name:
          description: |
            The name property gets one of the following two values. It can be the loyalty program name or it can represent a reason for the respective deduction of loyalty points. The latter is an optional value defined in a deduction rule.
          type: string
        cardIdentifier:
          description: The card on which these points were added.
          type: string
      required:
      - name
      - programId
      - ruleTitle
      - subLedgerId
      - transactionUUID
      - value
      type: object
    AddFreeItemEffectProps:
      description: The properties specific to the "addFreeItem" effect. This gets
        triggered whenever a validated rule contained an "add free item" effect.
      properties:
        sku:
          description: SKU of the item that needs to be added.
          example: SKU1241028
          type: string
        name:
          description: The name/description of the effect.
          type: string
      required:
      - name
      - sku
      type: object
    ShowNotificationEffectProps:
      description: The properties specific to the "showNotification" effect. This
        gets triggered whenever a validated rule contained a "show notification" effect.
      properties:
        notificationType:
          description: The type of notification that should be shown (e.g. error/warning/info).
          type: string
        title:
          description: Title of the notification.
          type: string
        body:
          description: Body of the notification.
          type: string
      required:
      - body
      - notificationType
      - title
      type: object
    UpdateAttributeEffectProps:
      description: The properties specific to the "updateAttribute" effect. This gets
        triggered whenever a validated rule contained an "update an attribute" effect.
      properties:
        path:
          description: The exact path of the attribute that was updated.
          type: string
        value:
          description: |
            The new value of this attribute. The value can be of the following types:
            - boolean
            - location
            - number
            - string
            - time
            - list of any of those types
          type: object
      required:
      - path
      - value
      type: object
    RollbackCouponEffectProps:
      description: The properties specific to the "rollbackCoupon" effect. This gets
        triggered whenever previously closed session is now cancelled and a coupon
        redemption was cancelled on our internal usage limit counters.
      properties:
        value:
          description: The coupon code whose usage has been rolled back.
          type: string
      required:
      - value
      type: object
    RollbackReferralEffectProps:
      description: The properties specific to the "rollbackReferral" effect. This
        gets triggered whenever previously closed session is now cancelled and a referral
        redemption was cancelled on our internal usage limit counters.
      properties:
        value:
          description: The referral code whose usage has been rolled back.
          type: string
      required:
      - value
      type: object
    RollbackDiscountEffectProps:
      description: The properties specific to the "rollbackDiscount" effect. This
        gets triggered whenever previously closed session is now cancelled or partially
        returned and a setDiscount effect was cancelled on our internal discount limit
        counters.
      properties:
        name:
          description: The name of the "setDiscount" effect that was rolled back.
          type: string
        value:
          description: The value of the discount that was rolled back.
          type: number
        cartItemPosition:
          description: The index of the item in the cart items for which the discount
            was rolled back.
          type: number
        cartItemSubPosition:
          description: |
            The index of the item unit in its line item. It is only used for cart items with `quantity` > 1 and is
            only returned when cart item flattening is enabled.
          type: number
        additionalCostId:
          description: The ID of the additional cost that was rolled back.
          type: integer
        additionalCost:
          description: The name of the additional cost that was rolled back.
          type: string
        scope:
          description: |
            The scope of the rolled back discount
            - For a discount per session, it can be one of `cartItems`, `additionalCosts` or `sessionTotal`
            - For a discount per item, it can be one of `price`, `additionalCosts` or `itemTotal`
          type: string
      required:
      - name
      - value
      type: object
    RollbackAddedLoyaltyPointsEffectProps:
      description: The properties specific to the "rollbackAddedLoyaltyPoints" effect.
        This gets triggered whenever previously a closed session with an addLoyaltyPoints
        effect is cancelled.
      properties:
        programId:
          description: The ID of the loyalty program where the points were originally
            added.
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were originally added.
          type: string
        value:
          description: The amount of points that were rolled back.
          type: number
        recipientIntegrationId:
          description: The user for whom these points were originally added.
          maxLength: 1000
          type: string
        transactionUUID:
          description: The identifier of 'deduction' entry added to the ledger as
            the `addLoyaltyPoints` effect is rolled back.
          type: string
        cartItemPosition:
          description: The index of the item in the cart items for which the loyalty
            points were rolled back.
          type: number
        cartItemSubPosition:
          description: |
            The sub-position is returned when [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items) is enabled.
            It indicates to which item the loyalty points were rolled back, for cart items with `quantity` > 1.
          type: number
        cardIdentifier:
          description: The card on which these points were originally added.
          type: string
      required:
      - programId
      - recipientIntegrationId
      - subLedgerId
      - transactionUUID
      - value
      type: object
    RollbackDeductedLoyaltyPointsEffectProps:
      description: The properties specific to the "rollbackDeductedLoyaltyPoints"
        effect. This effect is triggered whenever a previously closed session is cancelled
        and a deductLoyaltyPoints effect was revoked.
      properties:
        programId:
          description: The ID of the loyalty program where these points were reimbursed.
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were reimbursed.
          type: string
        value:
          description: The amount of reimbursed points that were added.
          type: number
        recipientIntegrationId:
          description: The user for whom these points were reimbursed.
          maxLength: 1000
          type: string
        startDate:
          description: Date after which the reimbursed points will be valid.
          format: date-time
          type: string
        expiryDate:
          description: Date after which the reimbursed points will expire.
          format: date-time
          type: string
        transactionUUID:
          description: The identifier of 'addition' entries added to the ledger as
            the `deductLoyaltyPoints` effect is rolled back.
          type: string
        cardIdentifier:
          description: The card on which these points were added.
          type: string
      required:
      - programId
      - recipientIntegrationId
      - subLedgerId
      - transactionUUID
      - value
      type: object
    ShowBundleMetadataEffectProps:
      description: |
        This effect is **deprecated**.
        The properties specific to the "ShowBundleMetadata" effect. This effect contains information that allows you to associate the discounts from a rule in a bundle campaign with specific cart items. This way you can distinguish from "normal" discounts that were not the result of a product bundle.
      properties:
        description:
          description: Description of the product bundle.
          type: string
        bundleAttributes:
          description: The cart item attributes that determined which items are being
            bundled together.
          items:
            type: string
          type: array
        itemsIndices:
          description: The indices in the cart items array of the bundled items.
          items:
            type: number
          type: array
      required:
      - bundleAttributes
      - description
      - itemsIndices
      type: object
    AwardGiveawayEffectProps:
      description: The properties specific to the "awardGiveaway" effect. This effect
        contains information on the giveaway item, and which profile it was awarded
        to.
      properties:
        poolId:
          description: The ID of the giveaways pool the code was taken from.
          type: integer
        poolName:
          description: The name of the giveaways pool the code was taken from.
          type: string
        recipientIntegrationId:
          description: The integration ID of the profile that was awarded the giveaway.
          maxLength: 1000
          type: string
        giveawayId:
          description: The internal ID for the giveaway that was awarded.
          type: integer
        code:
          description: The giveaway code that was awarded.
          type: string
      required:
      - code
      - giveawayId
      - poolId
      - poolName
      - recipientIntegrationId
      type: object
    WillAwardGiveawayEffectProps:
      description: The properties specific to the "awardGiveaway" effect when the
        session is not closed yet. This effect replaces "awardGiveaway" only when
        updating a session with any state other than "closed". This is to ensure no
        giveaway codes are leaked when they are still not guaranteed to be awarded.
      properties:
        poolId:
          description: The ID of the giveaways pool the code will be taken from.
          type: integer
        poolName:
          description: The name of the giveaways pool the code will be taken from.
          type: string
        recipientIntegrationId:
          description: The integration ID of the profile that will be awarded the
            giveaway.
          maxLength: 1000
          type: string
      required:
      - poolId
      - poolName
      - recipientIntegrationId
      type: object
    ErrorEffectProps:
      description: Whenever an error occurred during evaluation, we return an error
        effect. This should never happen for rules created in the rule builder.
      properties:
        message:
          description: The error message.
          type: string
      required:
      - message
      type: object
    CustomEffectProps:
      description: Effect containing custom payload.
      properties:
        effectId:
          description: The ID of the custom effect that was triggered.
          type: integer
        name:
          description: The type of the custom effect.
          type: string
        payload:
          description: The JSON payload of the custom effect.
          properties: {}
          type: object
          x-arbitraryJSON: true
      required:
      - effectId
      - name
      - payload
      type: object
    IntegrationRequest:
      description: The body of a V2 integration API request (customer session update).
        Next to the customer session details, this contains an optional listing of
        extra properties that should be returned in the response.
      example:
        customerSession:
          couponCodes:
          - XMAS-20-2021
          loyaltyCards:
          - loyalty-card-1
          additionalCosts:
            shipping:
              price: 9
          profileId: URNGV8294NV
          identifiers:
          - 91.11.156.141
          referralCode: NT2K54D9
          attributes:
            ShippingCity: Berlin
          state: open
          cartItems:
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
        responseContent:
        - customerSession
        - customerProfile
      properties:
        customerSession:
          $ref: '#/components/schemas/NewCustomerSessionV2'
        responseContent:
          description: |
            Optional list of extra data that you want to get in the response. Use this property to get as much data
            as you need in one request instead of sending extra requests to other endpoints.

            **Note:** `ruleFailureReasons` is always part of the response when the
            [Application type](https://docs.talon.one/docs/product/applications/overview#application-types) is `sandbox`.
          example:
          - customerSession
          - customerProfile
          items:
            enum:
            - customerSession
            - customerProfile
            - coupons
            - triggeredCampaigns
            - referral
            - loyalty
            - event
            - awardedGiveaways
            - ruleFailureReasons
            - previousReturns
            type: string
          type: array
      required:
      - customerSession
      type: object
    ReturnIntegrationRequest:
      description: The body of a return integration API request. Next to the cart
        items details, this contains an optional listing of extra properties that
        should be returned in the response.
      example:
        return:
          returnedCartItems:
          - quantity: 1
            position: 2
          - quantity: 1
            position: 2
        responseContent:
        - customerSession
        - customerProfile
      properties:
        return:
          $ref: '#/components/schemas/NewReturn'
        responseContent:
          description: |
            Optional list of extra data that you want to get in the response. Use this property to get as much data
            as you need in one request instead of sending extra requests to other endpoints.

            **Note:** `ruleFailureReasons` is always part of the response when the
            [Application type](https://docs.talon.one/docs/product/applications/overview#application-types) is `sandbox`.
          example:
          - customerSession
          - customerProfile
          items:
            enum:
            - customerSession
            - customerProfile
            - coupons
            - triggeredCampaigns
            - referral
            - loyalty
            - event
            - previousReturns
            type: string
          type: array
      required:
      - return
      type: object
    CustomerProfileIntegrationRequestV2:
      description: ""
      example:
        attributes:
          Language: english
          ShippingCountry: DE
        audiencesChanges:
          deletes:
          - 7
          adds:
          - 2
          - 4
        responseContent:
        - triggeredCampaigns
        - customerProfile
      properties:
        attributes:
          description: Arbitrary properties associated with this item.
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        audiencesChanges:
          $ref: '#/components/schemas/ProfileAudiencesChanges'
        responseContent:
          description: |
            Optional list of extra data that you want to get in the response. Use this property to get as much data
            as you need in one request instead of sending extra requests to other endpoints.

            **Note:** `ruleFailureReasons` is always part of the response when the
            [Application type](https://docs.talon.one/docs/product/applications/overview#application-types) is `sandbox`.
          example:
          - triggeredCampaigns
          - customerProfile
          items:
            enum:
            - customerProfile
            - triggeredCampaigns
            - loyalty
            - event
            - awardedGiveaways
            - ruleFailureReasons
            type: string
          type: array
      type: object
    ProfileAudiencesChanges:
      example:
        deletes:
        - 7
        adds:
        - 2
        - 4
      properties:
        adds:
          description: The IDs of the audiences for the customer to join.
          example:
          - 2
          - 4
          items:
            type: integer
          title: Audiences to join
          type: array
        deletes:
          description: The IDs of the audiences for the customer to leave.
          example:
          - 7
          items:
            type: integer
          title: Audiences to leave
          type: array
      required:
      - adds
      - deletes
      type: object
    AudienceMembership:
      example:
        name: Travel audience
        id: 2
      properties:
        id:
          description: The ID of the audience belonging to this entity.
          example: 2
          title: Audience ID
          type: integer
        name:
          description: The Name of the audience belonging to this entity.
          example: Travel audience
          title: Audience Name
          type: string
      required:
      - id
      - name
      type: object
    MultipleCustomerProfileIntegrationRequest:
      example:
        customerProfiles:
        - integrationId: R195412
          attributes:
            Language: english
            ShippingCountry: DE
        - integrationId: R195412
          attributes:
            Language: english
            ShippingCountry: DE
      properties:
        customerProfiles:
          items:
            $ref: '#/components/schemas/MultipleCustomerProfileIntegrationRequestItem'
          type: array
      type: object
    MultipleCustomerProfileIntegrationRequestItem:
      description: ""
      example:
        integrationId: R195412
        attributes:
          Language: english
          ShippingCountry: DE
      properties:
        attributes:
          description: Arbitrary properties associated with this item.
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        integrationId:
          description: |
            The identifier of this profile, set by your integration layer. It must be unique within the account.

            To get the `integrationId` of the profile from a `sessionId`, use the
            [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
          example: R195412
          maxLength: 1000
          type: string
      required:
      - integrationId
      type: object
    MultipleCustomerProfileIntegrationResponseV2:
      example:
        integrationStates:
        - customerProfile:
            accountId: 31
            closedSessions: 3
            created: 2000-01-23T04:56:07.000+00:00
            integrationId: URNGV8294NV
            attributes:
              Language: english
              ShippingCountry: DE
            totalSales: 299.99
            lastActivity: 2020-02-08T14:15:20Z
            id: 6
            loyaltyMemberships:
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 323414846
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 323414846
            audienceMemberships:
            - name: Travel audience
              id: 2
            - name: Travel audience
              id: 2
          loyalty:
            cards:
            - ledger:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
              identifier: identifier
              usersPerCardLimit: 111
              created: 2020-06-10T09:05:27.993483Z
              profiles:
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              subledgers:
                key:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
              modified: 2021-09-12T10:12:42Z
              id: 6
              programID: 125
              status: status
            - ledger:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
              identifier: identifier
              usersPerCardLimit: 111
              created: 2020-06-10T09:05:27.993483Z
              profiles:
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              subledgers:
                key:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
              modified: 2021-09-12T10:12:42Z
              id: 6
              programID: 125
              status: status
            programs:
              key:
                ledger:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
                subLedgers:
                  key:
                    pendingBalance: 10.0
                    currentBalance: 46.0
                    spentBalance: 84.0
                    tentativeCurrentBalance: 56.0
                    pointsToNextTier: 20.0
                    projection:
                      projections:
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      totalActivatingPoints: 40.0
                      totalExpiringPoints: 10.0
                    expiredBalance: 30.0
                    currentTier:
                      name: bronze
                      id: 11
                name: program1
                id: 5
                title: My loyalty program
          awardedGiveaways:
          - code: code
            importId: 5
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2020-06-10T09:05:27.993483Z
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          - code: code
            importId: 5
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2020-06-10T09:05:27.993483Z
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          createdCoupons:
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          createdReferrals:
          - code: 27G47Y54VH9L
            created: 2020-06-10T09:05:27.993483Z
            usageLimit: 1
            campaignId: 78
            usageCounter: 1
            batchId: tqyrgahe
            advocateProfileIntegrationId: URNGV8294NV
            expiryDate: 2021-11-10T23:00:00Z
            importId: 1
            friendProfileIntegrationId: BZGGC2454PA
            attributes: '{}'
            id: 6
            startDate: 2020-11-10T23:00:00Z
          - code: 27G47Y54VH9L
            created: 2020-06-10T09:05:27.993483Z
            usageLimit: 1
            campaignId: 78
            usageCounter: 1
            batchId: tqyrgahe
            advocateProfileIntegrationId: URNGV8294NV
            expiryDate: 2021-11-10T23:00:00Z
            importId: 1
            friendProfileIntegrationId: BZGGC2454PA
            attributes: '{}'
            id: 6
            startDate: 2020-11-10T23:00:00Z
          effects:
          - rulesetId: 73
            ruleIndex: 2
            triggeredForCatalogItem: 786
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          - rulesetId: 73
            ruleIndex: 2
            triggeredForCatalogItem: 786
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          referral:
            code: 27G47Y54VH9L
            created: 2020-06-10T09:05:27.993483Z
            usageLimit: 1
            campaignId: 78
            usageCounter: 1
            batchId: tqyrgahe
            advocateProfileIntegrationId: URNGV8294NV
            expiryDate: 2021-11-10T23:00:00Z
            importId: 5
            friendProfileIntegrationId: BZGGC2454PA
            attributes: '{}'
            referredCustomers:
            - referredCustomers
            - referredCustomers
            id: 6
            startDate: 2020-11-10T23:00:00Z
          triggeredCampaigns:
          - callApiEffectCount: 0
            createdLoyaltyPointsEffectCount: 2
            discountCount: 288.0
            description: Campaign for all summer 2021 promotions
            templateId: 3
            customEffectCount: 0
            features:
            - coupons
            - referrals
            createdLoyaltyPointsCount: 9.0
            couponSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            startTime: 2021-07-20T22:00:00Z
            id: 3
            state: enabled
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            activeRulesetId: 4
            updatedBy: Jane Doe
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 8
            couponRedemptionCount: 163
            userId: 2
            couponCreationCount: 16
            campaignGroups:
            - 1
            - 3
            tags:
            - summer
            awardedGiveawaysCount: 9
            redeemedLoyaltyPointsEffectCount: 9
            discountEffectCount: 343
            createdBy: John Doe
            redeemedLoyaltyPointsCount: 8.0
            addFreeItemEffectCount: 0
            name: Summer promotions
            referralSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            attributes: '{}'
            lastActivity: 2022-11-10T23:00:00Z
            endTime: 2021-09-22T22:00:00Z
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          - callApiEffectCount: 0
            createdLoyaltyPointsEffectCount: 2
            discountCount: 288.0
            description: Campaign for all summer 2021 promotions
            templateId: 3
            customEffectCount: 0
            features:
            - coupons
            - referrals
            createdLoyaltyPointsCount: 9.0
            couponSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            startTime: 2021-07-20T22:00:00Z
            id: 3
            state: enabled
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            activeRulesetId: 4
            updatedBy: Jane Doe
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 8
            couponRedemptionCount: 163
            userId: 2
            couponCreationCount: 16
            campaignGroups:
            - 1
            - 3
            tags:
            - summer
            awardedGiveawaysCount: 9
            redeemedLoyaltyPointsEffectCount: 9
            discountEffectCount: 343
            createdBy: John Doe
            redeemedLoyaltyPointsCount: 8.0
            addFreeItemEffectCount: 0
            name: Summer promotions
            referralSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            attributes: '{}'
            lastActivity: 2022-11-10T23:00:00Z
            endTime: 2021-09-22T22:00:00Z
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          coupons:
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          customerSession:
            couponCodes:
            - XMAS-20-2021
            created: 2000-01-23T04:56:07.000+00:00
            identifiers:
            - 91.11.156.141
            integrationId: URNGV8294NV
            total: 119.99
            loyaltyCards:
            - loyalty-card-1
            additionalCosts:
              shipping:
                price: 9
            additionalCostTotal: 20.0
            profileId: URNGV8294NV
            referralCode: NT2K54D9
            attributes:
              ShippingCity: Berlin
            id: 6
            state: open
            applicationId: 322
            cartItems:
            - remainingQuantity: 1
              quantity: 1
              returnedQuantity: 1
              length: 1.4658129805029452
              weight: 1130.0
              catalogItemID: 5
              additionalCosts:
                shipping:
                  price: 9
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: SKU1241028
              category: shoes
              height: 0.8008281904610115
            - remainingQuantity: 1
              quantity: 1
              returnedQuantity: 1
              length: 1.4658129805029452
              weight: 1130.0
              catalogItemID: 5
              additionalCosts:
                shipping:
                  price: 9
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: SKU1241028
              category: shoes
              height: 0.8008281904610115
            updated: 2020-02-08T14:15:22Z
            firstSession: true
            cartItemTotal: 99.99
          previousReturns:
          - returnedCartItems:
            - quantity: 1
              position: 2
            - quantity: 1
              position: 2
            accountId: 3886
            eventId: 123
            profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            createdBy: 123
            created: 2020-06-10T09:05:27.993483Z
            profileId: 123
            id: 6
            sessionId: 123
            applicationId: 322
          - returnedCartItems:
            - quantity: 1
              position: 2
            - quantity: 1
              position: 2
            accountId: 3886
            eventId: 123
            profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            createdBy: 123
            created: 2020-06-10T09:05:27.993483Z
            profileId: 123
            id: 6
            sessionId: 123
            applicationId: 322
          event:
            effects:
            - '{}'
            - '{}'
            created: 2020-06-10T09:05:27.993483Z
            profileId: URNGV8294NV
            meta:
              campaigns: '{}'
              coupons: '{}'
              referralRejectionReason:
                reason: ReferralNotFound
                campaignId: 1
                referralId: 5
              warnings: '{}'
              couponRejectionReason:
                reason: CouponNotFound
                campaignId: 244
                couponId: 4928
            ledgerEntries:
            - expiryDate: 2022-04-26T11:02:38Z
              accountId: 0
              eventId: 3
              reason: Customer appeasement.
              amount: 100
              created: 2020-06-10T09:05:27.993483Z
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 6
            - expiryDate: 2022-04-26T11:02:38Z
              accountId: 0
              eventId: 3
              reason: Customer appeasement.
              amount: 100
              created: 2020-06-10T09:05:27.993483Z
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 6
            attributes:
              myAttribute: myValue
            id: 6
            sessionId: 175KJPS947296
            applicationId: 322
            type: pageViews
          ruleFailureReasons:
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          return:
            returnedCartItems:
            - quantity: 1
              position: 2
            - quantity: 1
              position: 2
            accountId: 3886
            eventId: 123
            profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            createdBy: 123
            created: 2020-06-10T09:05:27.993483Z
            profileId: 123
            id: 6
            sessionId: 123
            applicationId: 322
        - customerProfile:
            accountId: 31
            closedSessions: 3
            created: 2000-01-23T04:56:07.000+00:00
            integrationId: URNGV8294NV
            attributes:
              Language: english
              ShippingCountry: DE
            totalSales: 299.99
            lastActivity: 2020-02-08T14:15:20Z
            id: 6
            loyaltyMemberships:
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 323414846
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 323414846
            audienceMemberships:
            - name: Travel audience
              id: 2
            - name: Travel audience
              id: 2
          loyalty:
            cards:
            - ledger:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
              identifier: identifier
              usersPerCardLimit: 111
              created: 2020-06-10T09:05:27.993483Z
              profiles:
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              subledgers:
                key:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
              modified: 2021-09-12T10:12:42Z
              id: 6
              programID: 125
              status: status
            - ledger:
                pendingBalance: 10.0
                currentBalance: 46.0
                spentBalance: 84.0
                tentativeCurrentBalance: 56.0
                pointsToNextTier: 20.0
                projection:
                  projections:
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  - date: 2000-01-23T04:56:07.000+00:00
                    activatingPoints: 25.0
                    projectedBalance: 57.0
                    expiringPoints: 14.0
                  totalActivatingPoints: 40.0
                  totalExpiringPoints: 10.0
                expiredBalance: 30.0
                currentTier:
                  name: bronze
                  id: 11
              identifier: identifier
              usersPerCardLimit: 111
              created: 2020-06-10T09:05:27.993483Z
              profiles:
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              - integrationId: integrationId
                timestamp: 2021-09-12T10:12:42Z
              subledgers:
                key:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
              modified: 2021-09-12T10:12:42Z
              id: 6
              programID: 125
              status: status
            programs:
              key:
                ledger:
                  pendingBalance: 10.0
                  currentBalance: 46.0
                  spentBalance: 84.0
                  tentativeCurrentBalance: 56.0
                  pointsToNextTier: 20.0
                  projection:
                    projections:
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    - date: 2000-01-23T04:56:07.000+00:00
                      activatingPoints: 25.0
                      projectedBalance: 57.0
                      expiringPoints: 14.0
                    totalActivatingPoints: 40.0
                    totalExpiringPoints: 10.0
                  expiredBalance: 30.0
                  currentTier:
                    name: bronze
                    id: 11
                subLedgers:
                  key:
                    pendingBalance: 10.0
                    currentBalance: 46.0
                    spentBalance: 84.0
                    tentativeCurrentBalance: 56.0
                    pointsToNextTier: 20.0
                    projection:
                      projections:
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      - date: 2000-01-23T04:56:07.000+00:00
                        activatingPoints: 25.0
                        projectedBalance: 57.0
                        expiringPoints: 14.0
                      totalActivatingPoints: 40.0
                      totalExpiringPoints: 10.0
                    expiredBalance: 30.0
                    currentTier:
                      name: bronze
                      id: 11
                name: program1
                id: 5
                title: My loyalty program
          awardedGiveaways:
          - code: code
            importId: 5
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2020-06-10T09:05:27.993483Z
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          - code: code
            importId: 5
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2020-06-10T09:05:27.993483Z
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          createdCoupons:
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          createdReferrals:
          - code: 27G47Y54VH9L
            created: 2020-06-10T09:05:27.993483Z
            usageLimit: 1
            campaignId: 78
            usageCounter: 1
            batchId: tqyrgahe
            advocateProfileIntegrationId: URNGV8294NV
            expiryDate: 2021-11-10T23:00:00Z
            importId: 1
            friendProfileIntegrationId: BZGGC2454PA
            attributes: '{}'
            id: 6
            startDate: 2020-11-10T23:00:00Z
          - code: 27G47Y54VH9L
            created: 2020-06-10T09:05:27.993483Z
            usageLimit: 1
            campaignId: 78
            usageCounter: 1
            batchId: tqyrgahe
            advocateProfileIntegrationId: URNGV8294NV
            expiryDate: 2021-11-10T23:00:00Z
            importId: 1
            friendProfileIntegrationId: BZGGC2454PA
            attributes: '{}'
            id: 6
            startDate: 2020-11-10T23:00:00Z
          effects:
          - rulesetId: 73
            ruleIndex: 2
            triggeredForCatalogItem: 786
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          - rulesetId: 73
            ruleIndex: 2
            triggeredForCatalogItem: 786
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          referral:
            code: 27G47Y54VH9L
            created: 2020-06-10T09:05:27.993483Z
            usageLimit: 1
            campaignId: 78
            usageCounter: 1
            batchId: tqyrgahe
            advocateProfileIntegrationId: URNGV8294NV
            expiryDate: 2021-11-10T23:00:00Z
            importId: 5
            friendProfileIntegrationId: BZGGC2454PA
            attributes: '{}'
            referredCustomers:
            - referredCustomers
            - referredCustomers
            id: 6
            startDate: 2020-11-10T23:00:00Z
          triggeredCampaigns:
          - callApiEffectCount: 0
            createdLoyaltyPointsEffectCount: 2
            discountCount: 288.0
            description: Campaign for all summer 2021 promotions
            templateId: 3
            customEffectCount: 0
            features:
            - coupons
            - referrals
            createdLoyaltyPointsCount: 9.0
            couponSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            startTime: 2021-07-20T22:00:00Z
            id: 3
            state: enabled
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            activeRulesetId: 4
            updatedBy: Jane Doe
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 8
            couponRedemptionCount: 163
            userId: 2
            couponCreationCount: 16
            campaignGroups:
            - 1
            - 3
            tags:
            - summer
            awardedGiveawaysCount: 9
            redeemedLoyaltyPointsEffectCount: 9
            discountEffectCount: 343
            createdBy: John Doe
            redeemedLoyaltyPointsCount: 8.0
            addFreeItemEffectCount: 0
            name: Summer promotions
            referralSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            attributes: '{}'
            lastActivity: 2022-11-10T23:00:00Z
            endTime: 2021-09-22T22:00:00Z
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          - callApiEffectCount: 0
            createdLoyaltyPointsEffectCount: 2
            discountCount: 288.0
            description: Campaign for all summer 2021 promotions
            templateId: 3
            customEffectCount: 0
            features:
            - coupons
            - referrals
            createdLoyaltyPointsCount: 9.0
            couponSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            startTime: 2021-07-20T22:00:00Z
            id: 3
            state: enabled
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            activeRulesetId: 4
            updatedBy: Jane Doe
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 8
            couponRedemptionCount: 163
            userId: 2
            couponCreationCount: 16
            campaignGroups:
            - 1
            - 3
            tags:
            - summer
            awardedGiveawaysCount: 9
            redeemedLoyaltyPointsEffectCount: 9
            discountEffectCount: 343
            createdBy: John Doe
            redeemedLoyaltyPointsCount: 8.0
            addFreeItemEffectCount: 0
            name: Summer promotions
            referralSettings:
              couponPattern: SUMMER-####-####
              validCharacters:
              - A
              - B
              - C
              - D
              - E
              - "2"
              - "0"
            attributes: '{}'
            lastActivity: 2022-11-10T23:00:00Z
            endTime: 2021-09-22T22:00:00Z
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          coupons:
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          - recipientIntegrationId: URNGV8294NV
            created: 2020-06-10T09:05:27.993483Z
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 2.3021358869347655
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            reservation: false
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            limits:
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            - period: yearly
              entities:
              - Coupon
              limit: 1000.0
              action: createCoupon
            discountRemainder: 7.061401241503109
          customerSession:
            couponCodes:
            - XMAS-20-2021
            created: 2000-01-23T04:56:07.000+00:00
            identifiers:
            - 91.11.156.141
            integrationId: URNGV8294NV
            total: 119.99
            loyaltyCards:
            - loyalty-card-1
            additionalCosts:
              shipping:
                price: 9
            additionalCostTotal: 20.0
            profileId: URNGV8294NV
            referralCode: NT2K54D9
            attributes:
              ShippingCity: Berlin
            id: 6
            state: open
            applicationId: 322
            cartItems:
            - remainingQuantity: 1
              quantity: 1
              returnedQuantity: 1
              length: 1.4658129805029452
              weight: 1130.0
              catalogItemID: 5
              additionalCosts:
                shipping:
                  price: 9
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: SKU1241028
              category: shoes
              height: 0.8008281904610115
            - remainingQuantity: 1
              quantity: 1
              returnedQuantity: 1
              length: 1.4658129805029452
              weight: 1130.0
              catalogItemID: 5
              additionalCosts:
                shipping:
                  price: 9
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: SKU1241028
              category: shoes
              height: 0.8008281904610115
            updated: 2020-02-08T14:15:22Z
            firstSession: true
            cartItemTotal: 99.99
          previousReturns:
          - returnedCartItems:
            - quantity: 1
              position: 2
            - quantity: 1
              position: 2
            accountId: 3886
            eventId: 123
            profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            createdBy: 123
            created: 2020-06-10T09:05:27.993483Z
            profileId: 123
            id: 6
            sessionId: 123
            applicationId: 322
          - returnedCartItems:
            - quantity: 1
              position: 2
            - quantity: 1
              position: 2
            accountId: 3886
            eventId: 123
            profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            createdBy: 123
            created: 2020-06-10T09:05:27.993483Z
            profileId: 123
            id: 6
            sessionId: 123
            applicationId: 322
          event:
            effects:
            - '{}'
            - '{}'
            created: 2020-06-10T09:05:27.993483Z
            profileId: URNGV8294NV
            meta:
              campaigns: '{}'
              coupons: '{}'
              referralRejectionReason:
                reason: ReferralNotFound
                campaignId: 1
                referralId: 5
              warnings: '{}'
              couponRejectionReason:
                reason: CouponNotFound
                campaignId: 244
                couponId: 4928
            ledgerEntries:
            - expiryDate: 2022-04-26T11:02:38Z
              accountId: 0
              eventId: 3
              reason: Customer appeasement.
              amount: 100
              created: 2020-06-10T09:05:27.993483Z
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 6
            - expiryDate: 2022-04-26T11:02:38Z
              accountId: 0
              eventId: 3
              reason: Customer appeasement.
              amount: 100
              created: 2020-06-10T09:05:27.993483Z
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 6
            attributes:
              myAttribute: myValue
            id: 6
            sessionId: 175KJPS947296
            applicationId: 322
            type: pageViews
          ruleFailureReasons:
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          return:
            returnedCartItems:
            - quantity: 1
              position: 2
            - quantity: 1
              position: 2
            accountId: 3886
            eventId: 123
            profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
            createdBy: 123
            created: 2020-06-10T09:05:27.993483Z
            profileId: 123
            id: 6
            sessionId: 123
            applicationId: 322
      properties:
        integrationStates:
          items:
            $ref: '#/components/schemas/IntegrationStateV2'
          type: array
      type: object
    CustomerProfileAudienceRequest:
      example:
        data:
        - profileIntegrationId: R195412
          action: add
          audienceId: 748
        - profileIntegrationId: R195412
          action: add
          audienceId: 748
      properties:
        data:
          items:
            $ref: '#/components/schemas/CustomerProfileAudienceRequestItem'
          type: array
      type: object
    CustomerProfileAudienceRequestItem:
      example:
        profileIntegrationId: R195412
        action: add
        audienceId: 748
      properties:
        action:
          description: |
            Defines the action to perform:
            - `add`: Adds the customer profile to the audience.
            - `delete`: Removes the customer profile from the audience.
          enum:
          - add
          - delete
          example: add
          type: string
        profileIntegrationId:
          description: The ID of this customer profile in the third-party integration.
          example: R195412
          maxLength: 1000
          type: string
        audienceId:
          description: The ID of the audience. You get it via the `id` property when
            [creating an audience](#operation/createAudienceV2).
          example: 748
          type: integer
      required:
      - action
      - audienceId
      - profileIntegrationId
      type: object
    FeedNotification:
      description: A feed notification for CAMA users.
      properties:
        title:
          description: Title of the feed notification.
          type: string
        created:
          description: Timestamp of the moment this feed notification was created.
          format: date-time
          type: string
        updated:
          description: Timestamp of the moment this feed notification was last updated.
          format: date-time
          type: string
        articleUrl:
          description: URL to the feed notification in the help center.
          type: string
        type:
          description: The type of the feed notification.
          enum:
          - feed
          - feature
          - announcement
          - alert
          - test
          type: string
        body:
          description: Body of the feed notification.
          type: string
      required:
      - articleUrl
      - body
      - created
      - title
      - type
      - updated
      type: object
    UserFeedNotifications:
      description: Notifications to notify CAMA user about.
      properties:
        lastUpdate:
          description: Timestamp of the last request for this list.
          format: date-time
          type: string
        notifications:
          description: List of all notifications to notify the user about.
          items:
            $ref: '#/components/schemas/FeedNotification'
          type: array
      required:
      - lastUpdate
      - notifications
      type: object
    UpdateUserLatestFeedTimestamp:
      description: Updates current user's latest seen notifications timestamp.
      properties:
        newLatestFeedTimestamp:
          description: New timestamp to update for the current user.
          format: date-time
          type: string
      required:
      - newLatestFeedTimestamp
      type: object
    AccountCampaignStats:
      additionalProperties:
        $ref: '#/components/schemas/ApplicationCampaignStats'
      type: object
    ApplicationCampaignStats:
      description: Provides statistics regarding an application's campaigns.
      properties:
        draft:
          description: Number of draft campaigns.
          type: integer
        disabled:
          description: Number of disabled campaigns.
          type: integer
        scheduled:
          description: Number of scheduled campaigns.
          type: integer
        running:
          description: Number of running campaigns.
          type: integer
        expired:
          description: Number of expired campaigns.
          type: integer
        archived:
          description: Number of archived campaigns.
          type: integer
      required:
      - archived
      - disabled
      - draft
      - expired
      - running
      - scheduled
      type: object
    RuleFailureReason:
      description: Details about why a rule failed.
      example:
        rulesetID: 1
        ruleIndex: 1
        campaignID: 7
        referralID: 1
        ruleName: ruleName
        conditionIndex: 6
        effectIndex: 7
        details: details
        couponID: 4928
        referralValue: referralValue
        campaignName: campaignName
        couponValue: couponValue
      properties:
        campaignID:
          description: The ID of the campaign that contains the rule that failed.
          type: integer
        campaignName:
          description: The name of the campaign that contains the rule that failed.
          type: string
        rulesetID:
          description: The ID of the ruleset that contains the rule that failed.
          type: integer
        couponID:
          description: The ID of the coupon that was being evaluated at the time of
            the rule failure.
          example: 4928
          type: integer
        couponValue:
          description: The code of the coupon that was being evaluated at the time
            of the rule failure.
          type: string
        referralID:
          description: The ID of the referral that was being evaluated at the time
            of the rule failure.
          type: integer
        referralValue:
          description: The code of the referral that was being evaluated at the time
            of the rule failure.
          type: string
        ruleIndex:
          description: The index of the rule that failed within the ruleset.
          type: integer
        ruleName:
          description: The name of the rule that failed within the ruleset.
          type: string
        conditionIndex:
          description: The index of the condition that failed.
          type: integer
        effectIndex:
          description: The index of the effect that failed.
          type: integer
        details:
          description: More details about the failure.
          type: string
      required:
      - campaignID
      - campaignName
      - ruleIndex
      - ruleName
      - rulesetID
      type: object
    Giveaway:
      description: ""
      example:
        code: code
        importId: 5
        endDate: 2000-01-23T04:56:07.000+00:00
        created: 2020-06-10T09:05:27.993483Z
        poolId: 4
        attributes: '{}'
        id: 6
        used: true
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        code:
          description: The code value of this giveaway.
          type: string
        poolId:
          description: The ID of the pool to return giveaway codes from.
          type: integer
        startDate:
          description: Timestamp at which point the giveaway becomes valid.
          format: date-time
          type: string
        endDate:
          description: Timestamp at which point the giveaway becomes invalid.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this giveaway.
          properties: {}
          type: object
        used:
          description: Indicates whether this giveaway code was given before.
          type: boolean
        importId:
          description: The ID of the Import which created this giveaway.
          type: integer
      required:
      - code
      - created
      - id
      - poolId
      type: object
    NewGiveawaysPool:
      properties:
        name:
          description: The name of this giveaways pool.
          type: string
        description:
          description: The description of this giveaways pool.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this giveaways pool
            is enabled for.
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    GiveawaysPool:
      description: Giveaways pools is an entity for managing multiple similar giveaways.
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The name of this giveaways pool.
          type: string
        description:
          description: The description of this giveaways pool.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this giveaways pool
            is enabled for.
          items:
            type: integer
          type: array
        modified:
          description: Timestamp of the most recent update to the giveaways pool.
          format: date-time
          type: string
        createdBy:
          description: ID of the user who created this giveaways pool.
          type: integer
        modifiedBy:
          description: ID of the user who last updated this giveaways pool if available.
          type: integer
      required:
      - accountId
      - created
      - createdBy
      - id
      - name
      type: object
    NewCustomEffect:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        name:
          description: The name of this effect.
          pattern: ^[A-Za-z](\w|\s)*$
          type: string
        title:
          description: The title of this effect.
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
        payload:
          description: The JSON payload of this effect.
          type: string
        description:
          description: The description of this effect.
          type: string
        enabled:
          description: Determines if this effect is active.
          type: boolean
        params:
          description: Array of template argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
      required:
      - applicationIds
      - enabled
      - name
      - payload
      - title
      type: object
    UpdateCustomEffect:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        name:
          description: The name of this effect.
          pattern: ^[A-Za-z](\w|\s)*$
          type: string
        title:
          description: The title of this effect.
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
        payload:
          description: The JSON payload of this effect.
          type: string
        description:
          description: The description of this effect.
          type: string
        enabled:
          description: Determines if this effect is active.
          type: boolean
        params:
          description: Array of template argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
      required:
      - applicationIds
      - enabled
      - name
      - payload
      - title
      type: object
    CustomEffect:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        name:
          description: The name of this effect.
          pattern: ^[A-Za-z](\w|\s)*$
          type: string
        title:
          description: The title of this effect.
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
        payload:
          description: The JSON payload of this effect.
          type: string
        description:
          description: The description of this effect.
          type: string
        enabled:
          description: Determines if this effect is active.
          type: boolean
        params:
          description: Array of template argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        modifiedBy:
          description: ID of the user who last updated this effect if available.
          type: integer
        createdBy:
          description: ID of the user who created this effect.
          type: integer
      required:
      - accountId
      - applicationIds
      - created
      - createdBy
      - enabled
      - id
      - modified
      - name
      - payload
      - title
      type: object
    UpdateCampaignCollection:
      example:
        description: My collection of SKUs
      properties:
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
      type: object
    NewCampaignCollection:
      description: ""
      example:
        name: My collection
        description: My collection of SKUs
      properties:
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
        name:
          description: The name of this collection.
          example: My collection
          minLength: 1
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
      required:
      - name
      type: object
    CampaignCollectionWithoutPayload:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
        name:
          description: The name of this collection.
          example: My collection
          minLength: 1
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
        modifiedBy:
          description: ID of the user who last updated this effect if available.
          example: 48
          type: integer
        createdBy:
          description: ID of the user who created this effect.
          example: 134
          type: integer
        applicationId:
          description: The ID of the Application that owns this entity.
          example: 1
          type: integer
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 7
          type: integer
      required:
      - accountId
      - created
      - createdBy
      - id
      - modified
      - name
      type: object
    CampaignCollection:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
        name:
          description: The name of this collection.
          example: My collection
          minLength: 1
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
        modifiedBy:
          description: ID of the user who last updated this effect if available.
          example: 48
          type: integer
        createdBy:
          description: ID of the user who created this effect.
          example: 134
          type: integer
        applicationId:
          description: The ID of the Application that owns this entity.
          example: 1
          type: integer
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 7
          type: integer
        payload:
          description: The content of the collection.
          example:
          - KTL-WH-ET-1
          - KTL-BL-ET-1
          items:
            type: string
          maxItems: 50
          type: array
      required:
      - accountId
      - created
      - createdBy
      - id
      - modified
      - name
      type: object
    UpdateCollection:
      example:
        subscribedApplicationsIds:
        - 1
        - 2
        - 3
        description: My collection of SKUs
      properties:
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the Applications where this collection
            is enabled.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
      type: object
    NewCollection:
      description: ""
      example:
        subscribedApplicationsIds:
        - 1
        - 2
        - 3
        name: My collection
        description: My collection of SKUs
      properties:
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the Applications where this collection
            is enabled.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
        name:
          description: The name of this collection.
          example: My collection
          minLength: 1
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
      required:
      - name
      type: object
    CollectionWithoutPayload:
      description: ""
      example:
        accountId: 3886
        createdBy: 134
        created: 2020-06-10T09:05:27.993483Z
        campaignId: 7
        subscribedApplicationsIds:
        - 1
        - 2
        - 3
        name: My collection
        modified: 2021-09-12T10:12:42Z
        description: My collection of SKUs
        modifiedBy: 48
        id: 6
        applicationId: 1
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the Applications where this collection
            is enabled.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
        name:
          description: The name of this collection.
          example: My collection
          minLength: 1
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
        modifiedBy:
          description: ID of the user who last updated this effect if available.
          example: 48
          type: integer
        createdBy:
          description: ID of the user who created this effect.
          example: 134
          type: integer
        applicationId:
          description: The ID of the Application that owns this entity.
          example: 1
          type: integer
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 7
          type: integer
      required:
      - accountId
      - created
      - createdBy
      - id
      - modified
      - name
      type: object
    Collection:
      description: ""
      example:
        accountId: 3886
        createdBy: 134
        payload:
        - KTL-WH-ET-1
        - KTL-BL-ET-1
        created: 2020-06-10T09:05:27.993483Z
        campaignId: 7
        subscribedApplicationsIds:
        - 1
        - 2
        - 3
        name: My collection
        modified: 2021-09-12T10:12:42Z
        description: My collection of SKUs
        modifiedBy: 48
        id: 6
        applicationId: 1
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        description:
          description: A short description of the purpose of this collection.
          example: My collection of SKUs
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the Applications where this collection
            is enabled.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
        name:
          description: The name of this collection.
          example: My collection
          minLength: 1
          pattern: ^[^[:cntrl:]\s][^[:cntrl:]]*$
          type: string
        modifiedBy:
          description: ID of the user who last updated this effect if available.
          example: 48
          type: integer
        createdBy:
          description: ID of the user who created this effect.
          example: 134
          type: integer
        applicationId:
          description: The ID of the Application that owns this entity.
          example: 1
          type: integer
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 7
          type: integer
        payload:
          description: The content of the collection.
          example:
          - KTL-WH-ET-1
          - KTL-BL-ET-1
          items:
            type: string
          maxItems: 50
          type: array
      required:
      - accountId
      - created
      - createdBy
      - id
      - modified
      - name
      type: object
    CollectionItem:
      description: ""
      example:
        item: item
      properties:
        item:
          type: string
      required:
      - item
      type: object
    NewCouponCreationJob:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        usageLimit: 100
        numberOfCoupons: 200000
        couponSettings:
          couponPattern: SUMMER-####-####
          validCharacters:
          - A
          - B
          - C
          - D
          - E
          - "2"
          - "0"
        attributes: '{}'
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        numberOfCoupons:
          description: The number of new coupon codes to generate for the campaign.
            Must be between 20,001 and 5,000,000.
          example: 200000
          maximum: 5E+6
          type: integer
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        attributes:
          description: Arbitrary properties associated with coupons.
          properties: {}
          type: object
      required:
      - attributes
      - numberOfCoupons
      - usageLimit
      type: object
    CouponCreationJob:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        usageLimit:
          description: |
            The number of times the coupon code can be redeemed. `0` means unlimited redemptions but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        numberOfCoupons:
          description: The number of new coupon codes to generate for the campaign.
            Must be between 20,001 and 5,000,000.
          example: 200000
          maximum: 5E+6
          type: integer
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        attributes:
          description: Arbitrary properties associated with coupons.
          properties: {}
          type: object
        batchId:
          description: The batch ID coupons created by this job will bear.
          example: tqyrgahe
          title: Batch ID
          type: string
        status:
          description: |
            The current status of this request. Possible values:
            - `pending`
            - `completed`
            - `failed`
            - `coupon pattern full`
          example: pending
          title: Job Status
          type: string
        createdAmount:
          description: The number of coupon codes that were already created for this
            request.
          example: 1000000
          title: Created Amount
          type: integer
        failCount:
          description: The number of times this job failed.
          example: 10
          title: Fail Count
          type: integer
        errors:
          description: An array of individual problems encountered during the request.
          example:
          - Connection to database was reset
          - failed to generate enough unique codes
          - attribute 'PizzaLover' not found on entity 'Coupons'
          items:
            type: string
          title: Errors
          type: array
        createdBy:
          description: ID of the user who created this effect.
          example: 1
          title: Created By
          type: integer
        communicated:
          description: Whether or not the user that created this job was notified
            of its final state.
          example: false
          type: boolean
        chunkExecutionCount:
          description: The number of times an attempt to create a chunk of coupons
            was made during the processing of the job.
          example: 0
          title: Iterations
          type: integer
        chunkSize:
          description: The number of coupons that will be created in a single transactions.
            Coupons will be created in chunks until arriving at the requested amount.
          example: 20000
          title: Chunk size
          type: integer
      required:
      - accountId
      - applicationId
      - attributes
      - batchId
      - campaignId
      - chunkExecutionCount
      - communicated
      - created
      - createdAmount
      - createdBy
      - errors
      - failCount
      - id
      - numberOfCoupons
      - status
      - usageLimit
      type: object
    AsyncCouponCreationResponse:
      example:
        batchId: tqyrgahe
      properties:
        batchId:
          description: The batch ID that all coupons created by the request will have.
          example: tqyrgahe
          type: string
      required:
      - batchId
      type: object
    LimitCounter:
      description: ""
      properties:
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        action:
          description: The limitable action of the limit counter.
          example: setDiscount
          type: string
        profileId:
          description: The profile ID for which this limit counter is used.
          type: integer
        profileIntegrationId:
          description: The profile integration ID for which this limit counter is
            used.
          maxLength: 1000
          type: string
        couponId:
          description: The coupon ID for which this limit counter is used.
          type: integer
        couponValue:
          description: The coupon value for which this limit counter is used.
          type: string
        referralId:
          description: The referral ID for which this limit counter is used.
          type: integer
        referralValue:
          description: The referral value for which this limit counter is used.
          type: string
        identifier:
          description: The arbitrary identifier for which this limit counter is used.
          type: integer
        period:
          description: The time period for which this limit counter is used.
          example: Y2021M8
          type: string
        limit:
          description: The highest possible value for this limit counter.
          example: 10.0
          type: number
        counter:
          description: The current value for this limit counter.
          example: 5.0
          type: number
      required:
      - accountId
      - action
      - applicationId
      - campaignId
      - counter
      - id
      - limit
      type: object
    BulkCampaignNotification:
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CampaignNotification'
          type: array
      required:
      - data
      - totalResultSize
      type: object
    CampaignNotification:
      properties:
        event:
          description: |
            The type of the event. Can be one of the following: ['campaign_state_changed', 'campaign_ruleset_changed', 'campaign_edited', 'campaign_created', 'campaign_deleted']
          type: string
      required:
      - event
      type: object
    BulkApplicationNotification:
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ApplicationNotification'
          type: array
      required:
      - data
      - totalResultSize
      type: object
    ApplicationNotification:
      properties:
        event:
          description: |
            Event type. It can be one of the following: ['campaign_priorities_changed']
          type: string
      required:
      - event
      type: object
    CampaignStateChangedNotification:
      description: A notification regarding a campaign whose state changed.
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        oldState:
          description: |
            The campaign's old state. Can be one of the following: ['running', 'disabled', 'scheduled', 'expired', 'draft', 'archived']
          type: string
        newState:
          description: |
            The campaign's new state. Can be one of the following: ['running', 'disabled', 'scheduled', 'expired', 'draft', 'archived']
          type: string
      required:
      - campaign
      - newState
      - oldState
      type: object
    CampaignRulesetChangedNotification:
      description: A notification regarding a campaign whose ruleset was changed.
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        oldRuleset:
          $ref: '#/components/schemas/Ruleset'
        ruleset:
          $ref: '#/components/schemas/Ruleset'
      required:
      - campaign
      - ruleset
      type: object
    CampaignEditedNotification:
      description: A notification regarding a campaign which was edited.
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        oldCampaign:
          $ref: '#/components/schemas/Campaign'
      required:
      - campaign
      - oldCampaign
      type: object
    CampaignCreatedNotification:
      description: A notification regarding a campaign that was created.
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
      required:
      - campaign
      type: object
    CampaignDeletedNotification:
      description: A notification regarding a campaign that was deleted.
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
      required:
      - campaign
      type: object
    CampaignPrioritiesChangedNotification:
      description: Notification about an Application whose campaigns' priorities changed.
      properties:
        application:
          $ref: '#/components/schemas/Application'
        oldPriorities:
          additionalProperties:
            items:
              type: integer
            type: array
          description: |
            Campaign IDs for each priority. The priority can be one of: ['universal', 'stackable', 'exclusive']
          type: object
        priorities:
          additionalProperties:
            items:
              type: integer
            type: array
          description: |
            Campaign IDs for each priority. The priority can be one of: ['universal', 'stackable', 'exclusive']
          type: object
      required:
      - application
      - priorities
      type: object
    CampaignPriorities:
      additionalProperties:
        items:
          type: integer
        type: array
      description: |
        Campaign IDs for each priority. The priority can be one of: ['universal', 'stackable', 'exclusive']
      type: object
    NewNotificationWebhook:
      example:
        headers:
        - headers
        - headers
        url: url
      properties:
        url:
          description: API url for this notification webhook.
          type: string
        headers:
          description: List of API HTTP headers for this notification webhook.
          items:
            pattern: ^[^:,]+:[^,]*$
            type: string
          type: array
      required:
      - headers
      - url
      type: object
    NotificationWebhook:
      description: ""
      example:
        headers:
        - headers
        - headers
        created: 2020-06-10T09:05:27.993483Z
        modified: 2021-09-12T10:12:42Z
        id: 6
        applicationId: 322
        url: url
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        url:
          description: API url for this notification webhook.
          type: string
        headers:
          description: List of API HTTP headers for this notification webhook.
          items:
            pattern: ^[^:,]+:[^,]*$
            type: string
          type: array
      required:
      - applicationId
      - created
      - headers
      - id
      - modified
      - url
      type: object
    CouponLimitConfigs:
      properties:
        limits:
          description: |
            Limits configuration for a coupon. These limits will override the limits
            set from the campaign.

            **Note:** Only usable when creating a single coupon which is not tied to a specific recipient.
            Only per-profile limits are allowed to be configured.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
      type: object
    Return:
      description: ""
      example:
        returnedCartItems:
        - quantity: 1
          position: 2
        - quantity: 1
          position: 2
        accountId: 3886
        eventId: 123
        profileIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
        sessionIntegrationId: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
        createdBy: 123
        created: 2020-06-10T09:05:27.993483Z
        profileId: 123
        id: 6
        sessionId: 123
        applicationId: 322
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        returnedCartItems:
          description: List of cart items to be returned.
          items:
            $ref: '#/components/schemas/ReturnedCartItem'
          type: array
        eventId:
          description: The event ID of that was generated for this return.
          example: 123
          title: Event ID
          type: integer
        sessionId:
          description: The internal ID of the session this return was requested on.
          example: 123
          title: Session ID
          type: integer
        sessionIntegrationId:
          description: The integration ID of the session this return was requested
            on.
          example: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          maxLength: 1000
          title: Session Integration ID
          type: string
        profileId:
          description: The internal ID of the profile this return was requested on.
          example: 123
          title: Profile ID
          type: integer
        profileIntegrationId:
          description: The integration ID of the profile this return was requested
            on.
          example: 0c0e0207-eb30-4e06-a56c-2b7c8a64953c
          maxLength: 1000
          title: Profile Integration ID
          type: string
        createdBy:
          description: ID of the user who requested this return.
          example: 123
          title: Created By
          type: integer
      required:
      - accountId
      - applicationId
      - created
      - eventId
      - id
      - returnedCartItems
      - sessionId
      - sessionIntegrationId
      type: object
    NewReturn:
      example:
        returnedCartItems:
        - quantity: 1
          position: 2
        - quantity: 1
          position: 2
      properties:
        returnedCartItems:
          description: List of cart items to be returned.
          items:
            $ref: '#/components/schemas/ReturnedCartItem'
          type: array
      required:
      - returnedCartItems
      type: object
    ReturnedCartItem:
      example:
        quantity: 1
        position: 2
      properties:
        position:
          description: The index of the cart item in the provided customer session's
            `cartItems` property.
          example: 2
          type: integer
        quantity:
          description: |
            Number of cart items to return. It is only available when [cart item flattening](https://docs.talon.one/docs/product/campaigns/campaign-evaluation/#flattened-cart-items)
            is enabled. If cart item flattening is disabled, the cart item can only be returned in its entirety.
          example: 1
          type: integer
      required:
      - position
      type: object
    EventV2:
      description: ""
      properties:
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          example: email_opened
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          example:
            myAttribute: myValue
          properties: {}
          type: object
      required:
      - type
      type: object
    IntegrationEventV2Request:
      description: ""
      example:
        profileId: URNGV8294NV
        attributes:
          myAttribute: myValue
        type: email_opened
        responseContent:
        - triggeredCampaigns
        - customerProfile
      properties:
        profileId:
          description: |
            ID of the customer profile set by your integration layer.

            **Note:** If the customer does not yet have a known `profileId`, we recommend you use a guest `profileId`.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          example: email_opened
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          example:
            myAttribute: myValue
          properties: {}
          type: object
        responseContent:
          description: |
            Optional list of requested information to be present on the response related to the tracking custom event.
          example:
          - triggeredCampaigns
          - customerProfile
          items:
            enum:
            - customerProfile
            - triggeredCampaigns
            - loyalty
            - event
            - awardedGiveaways
            - ruleFailureReasons
            type: string
          type: array
      required:
      - type
      type: object
    MultipleNewAttribute:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/NewAttribute'
          type: array
      type: object
    MultipleAttribute:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
      type: object
    UpdateCatalog:
      properties:
        description:
          description: A description of this cart item catalog.
          example: seafood catalog
          type: string
        name:
          description: Name of this cart item catalog.
          example: seafood
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this catalog.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
      type: object
    NewCatalog:
      description: ""
      properties:
        name:
          description: The cart item catalog name.
          example: seafood
          type: string
        description:
          description: A description of this cart item catalog.
          example: seafood catalog
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this catalog.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
      required:
      - description
      - name
      type: object
    Catalog:
      description: ""
      example:
        accountId: 3886
        createdBy: 6
        created: 2020-06-10T09:05:27.993483Z
        name: seafood
        subscribedApplicationsIds:
        - 1
        - 2
        - 3
        modified: 2021-09-12T10:12:42Z
        description: seafood catalog
        id: 6
        version: 6
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          example: 2021-09-12T10:12:42Z
          format: date-time
          type: string
        name:
          description: The cart item catalog name.
          example: seafood
          type: string
        description:
          description: A description of this cart item catalog.
          example: seafood catalog
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this catalog.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
        version:
          description: The current version of this catalog.
          example: 6
          type: integer
        createdBy:
          description: The ID of user who created this catalog.
          example: 6
          type: integer
      required:
      - accountId
      - created
      - createdBy
      - description
      - id
      - modified
      - name
      - version
      type: object
    CatalogSyncRequest:
      example:
        actions:
        - payload: '{}'
          type: ADD
        - payload: '{}'
          type: ADD
        - payload: '{}'
          type: ADD
        - payload: '{}'
          type: ADD
        - payload: '{}'
          type: ADD
        version: 244
      properties:
        actions:
          items:
            $ref: '#/components/schemas/CatalogAction'
          maxItems: 1000
          minItems: 1
          type: array
        version:
          description: The version number of the catalog to apply the actions on.
          example: 244
          type: integer
      required:
      - actions
      type: object
    CatalogAction:
      description: Definition of all the properties that are needed for a single catalog
        sync action.
      example:
        payload: '{}'
        type: ADD
      properties:
        type:
          description: The type of sync action.
          enum:
          - ADD
          - PATCH
          - PATCH_MANY
          - REMOVE
          - REMOVE_MANY
          example: ADD
          type: string
        payload:
          type: object
      required:
      - payload
      - type
      type: object
    CatalogActionPayload:
      type: object
    CatalogActionFilter:
      description: The properties for a single filtering condition in a catalog sync
        action.
      properties:
        attr:
          description: The name of the attribute to filter on.
          type: string
        op:
          description: The filtering operator.
          enum:
          - EQ
          - LT
          - LE
          - GT
          - GE
          - IN
          type: string
        value:
          description: The value to filter for.
          type: object
      required:
      - attr
      - op
      - value
      type: object
    AddItemCatalogAction:
      description: The specific properties of the "ADD" catalog sync action.
      properties:
        sku:
          description: The unique SKU of the item to add.
          example: SKU1241028
          type: string
        price:
          description: Price of the item.
          example: 99.99
          type: number
        attributes:
          description: The attributes of the item to add.
          example:
            origin: germany
            color: blue
          properties: {}
          type: object
        replaceIfExists:
          default: false
          description: Indicates whether to replace the attributes of the item if
            the same SKU exists.
          example: false
          type: boolean
      required:
      - sku
      type: object
    PatchItemCatalogAction:
      description: The specific properties of the "PATCH" catalog sync action.
      properties:
        sku:
          description: The unique SKU of the item to patch.
          type: string
        price:
          description: Price of the item.
          example: 99.99
          type: number
        attributes:
          description: The attributes of the item to patch.
          properties: {}
          type: object
        createIfNotExists:
          default: false
          description: Indicates whether to create an item if the SKU does not exist.
          type: boolean
      required:
      - sku
      type: object
    PatchManyItemsCatalogAction:
      description: The specific properties of the "PATCH_MANY" catalog sync action.
      properties:
        price:
          description: Price of the item.
          example: 99.99
          type: number
        filters:
          description: |
            The list of filters used to select the items to patch, joined by `AND`.

            **Note:** Every item in the catalog will be modified if there are no filters.
          items:
            $ref: '#/components/schemas/CatalogActionFilter'
          type: array
        attributes:
          description: The attributes of the items to patch.
          properties: {}
          type: object
      type: object
    RemoveItemCatalogAction:
      description: The specific properties of the "REMOVE" catalog sync action.
      properties:
        sku:
          description: The unique SKU of the item to remove.
          type: string
      required:
      - sku
      type: object
    RemoveManyItemsCatalogAction:
      description: The specific properties of the "REMOVE_MANY" catalog sync action.
      properties:
        filters:
          description: |
            The list of filters used to select the items to patch, joined by `AND`.

            **Note:** Every item in the catalog will be removed if there are no filters.
          items:
            $ref: '#/components/schemas/CatalogActionFilter'
          type: array
      type: object
    CatalogItem:
      description: ""
      properties:
        id:
          description: Unique ID for this entity. Not to be confused with the Integration
            ID, which is set by your integration layer and used in most endpoints.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          example: 2020-06-10T09:05:27.993483Z
          format: date-time
          type: string
        sku:
          description: The stock keeping unit of the item.
          example: SKU1241028
          type: string
        price:
          description: Price of the item.
          example: 99.99
          type: number
          x-fieldType: NullDecimal
        catalogid:
          description: The ID of the catalog the item belongs to.
          example: 6
          type: integer
        version:
          description: The version of the catalog item.
          minimum: 1
          type: integer
        attributes:
          items:
            $ref: '#/components/schemas/ItemAttribute'
          type: array
      required:
      - catalogid
      - created
      - id
      - sku
      - version
      type: object
    ItemAttribute:
      description: ""
      properties:
        attributeid:
          description: The ID of the attribute of the item.
          example: 6
          type: integer
        name:
          description: The name of the attribute.
          type: string
        value:
          description: The value of the attribute.
          type: object
      required:
      - attributeid
      - name
      - value
      type: object
    CampaignActivationRequest:
      properties:
        userIds:
          description: The list of IDs of the users who will receive the activation
            request.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          maxItems: 5
          type: array
      required:
      - userIds
      type: object
    inline_response_201:
      example:
        data:
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 1
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          id: 6
          startDate: 2020-11-10T23:00:00Z
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 1
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          id: 6
          startDate: 2020-11-10T23:00:00Z
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200:
      example:
        data:
        - accountId: 31
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        - accountId: 31
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CustomerProfile'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_1:
      example:
        data:
        - expiryDate: 2022-01-02T15:04:05Z07:00
          rulesetId: 11
          amount: 10.25
          created: 2000-01-23T04:56:07.000+00:00
          subledgerId: sub-123
          name: Reward 10% points of a purchase's current total
          ruleName: Add 2 points
          customerSessionId: 05c2da0d-48fa-4aa1-b629-898f58f1584d
          id: 123
          type: addition
          programId: 324
          startDate: 2022-01-02T15:04:05Z07:00
        - expiryDate: 2022-01-02T15:04:05Z07:00
          rulesetId: 11
          amount: 10.25
          created: 2000-01-23T04:56:07.000+00:00
          subledgerId: sub-123
          name: Reward 10% points of a purchase's current total
          ruleName: Add 2 points
          customerSessionId: 05c2da0d-48fa-4aa1-b629-898f58f1584d
          id: 123
          type: addition
          programId: 324
          startDate: 2022-01-02T15:04:05Z07:00
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/LedgerTransactionLogEntryIntegrationAPI'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_2:
      example:
        data:
        - enableFlattenedCartItems: true
          created: 2020-06-10T09:05:27.993483Z
          timezone: Europe/Berlin
          sandbox: true
          description: A test Application
          attributesSettings:
            mandatory:
              campaigns:
              - campaigns
              - campaigns
              coupons:
              - coupons
              - coupons
          caseSensitivity: sensitive
          accountId: 3886
          enableCascadingDiscounts: true
          campaignPriority: universal
          loyaltyPrograms:
          - cardBased: true
            tiers:
            - name: Gold
              minPoints: 300
              id: 3
              created: 2021-06-10T09:05:27.993483Z
              programID: 139
            - name: Silver
              minPoints: 200
              id: 2
              created: 2021-06-10T09:04:59.355258Z
              programId: 139
            - name: Bronze
              minPoints: 100
              id: 1
              created: 2021-06-10T09:04:39.355258Z
              programId: 139
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            timezone: Europe/Berlin
            description: Customers collect 10 points per 1$ spent
            title: Point collection
            subscribedApplications:
            - 132
            - 97
            accountID: 1
            defaultValidity: unlimited
            defaultPending: immediate
            allowSubledger: false
            name: my_program
            id: 6
          - cardBased: true
            tiers:
            - name: Gold
              minPoints: 300
              id: 3
              created: 2021-06-10T09:05:27.993483Z
              programID: 139
            - name: Silver
              minPoints: 200
              id: 2
              created: 2021-06-10T09:04:59.355258Z
              programId: 139
            - name: Bronze
              minPoints: 100
              id: 1
              created: 2021-06-10T09:04:39.355258Z
              programId: 139
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            timezone: Europe/Berlin
            description: Customers collect 10 points per 1$ spent
            title: Point collection
            subscribedApplications:
            - 132
            - 97
            accountID: 1
            defaultValidity: unlimited
            defaultPending: immediate
            allowSubledger: false
            name: my_program
            id: 6
          name: My Application
          exclusiveCampaignsStrategy: listOrder
          modified: 2021-09-12T10:12:42Z
          defaultDiscountScope: sessionTotal
          currency: EUR
          attributes: '{}'
          defaultDiscountAdditionalCostPerItemScope: price
          id: 6
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          enablePartialDiscounts: false
        - enableFlattenedCartItems: true
          created: 2020-06-10T09:05:27.993483Z
          timezone: Europe/Berlin
          sandbox: true
          description: A test Application
          attributesSettings:
            mandatory:
              campaigns:
              - campaigns
              - campaigns
              coupons:
              - coupons
              - coupons
          caseSensitivity: sensitive
          accountId: 3886
          enableCascadingDiscounts: true
          campaignPriority: universal
          loyaltyPrograms:
          - cardBased: true
            tiers:
            - name: Gold
              minPoints: 300
              id: 3
              created: 2021-06-10T09:05:27.993483Z
              programID: 139
            - name: Silver
              minPoints: 200
              id: 2
              created: 2021-06-10T09:04:59.355258Z
              programId: 139
            - name: Bronze
              minPoints: 100
              id: 1
              created: 2021-06-10T09:04:39.355258Z
              programId: 139
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            timezone: Europe/Berlin
            description: Customers collect 10 points per 1$ spent
            title: Point collection
            subscribedApplications:
            - 132
            - 97
            accountID: 1
            defaultValidity: unlimited
            defaultPending: immediate
            allowSubledger: false
            name: my_program
            id: 6
          - cardBased: true
            tiers:
            - name: Gold
              minPoints: 300
              id: 3
              created: 2021-06-10T09:05:27.993483Z
              programID: 139
            - name: Silver
              minPoints: 200
              id: 2
              created: 2021-06-10T09:04:59.355258Z
              programId: 139
            - name: Bronze
              minPoints: 100
              id: 1
              created: 2021-06-10T09:04:39.355258Z
              programId: 139
            usersPerCardLimit: 111
            created: 2020-06-10T09:05:27.993483Z
            timezone: Europe/Berlin
            description: Customers collect 10 points per 1$ spent
            title: Point collection
            subscribedApplications:
            - 132
            - 97
            accountID: 1
            defaultValidity: unlimited
            defaultPending: immediate
            allowSubledger: false
            name: my_program
            id: 6
          name: My Application
          exclusiveCampaignsStrategy: listOrder
          modified: 2021-09-12T10:12:42Z
          defaultDiscountScope: sessionTotal
          currency: EUR
          attributes: '{}'
          defaultDiscountAdditionalCostPerItemScope: price
          id: 6
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          enablePartialDiscounts: false
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Application'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_3:
      example:
        data:
        - callApiEffectCount: 0
          createdLoyaltyPointsEffectCount: 2
          discountCount: 288.0
          description: Campaign for all summer 2021 promotions
          templateId: 3
          customEffectCount: 0
          features:
          - coupons
          - referrals
          createdLoyaltyPointsCount: 9.0
          couponSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          startTime: 2021-07-20T22:00:00Z
          id: 3
          state: enabled
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          activeRulesetId: 4
          updatedBy: Jane Doe
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 8
          couponRedemptionCount: 163
          userId: 2
          couponCreationCount: 16
          campaignGroups:
          - 1
          - 3
          tags:
          - summer
          awardedGiveawaysCount: 9
          redeemedLoyaltyPointsEffectCount: 9
          discountEffectCount: 343
          createdBy: John Doe
          redeemedLoyaltyPointsCount: 8.0
          addFreeItemEffectCount: 0
          name: Summer promotions
          referralSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          attributes: '{}'
          lastActivity: 2022-11-10T23:00:00Z
          endTime: 2021-09-22T22:00:00Z
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        - callApiEffectCount: 0
          createdLoyaltyPointsEffectCount: 2
          discountCount: 288.0
          description: Campaign for all summer 2021 promotions
          templateId: 3
          customEffectCount: 0
          features:
          - coupons
          - referrals
          createdLoyaltyPointsCount: 9.0
          couponSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          startTime: 2021-07-20T22:00:00Z
          id: 3
          state: enabled
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          activeRulesetId: 4
          updatedBy: Jane Doe
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 8
          couponRedemptionCount: 163
          userId: 2
          couponCreationCount: 16
          campaignGroups:
          - 1
          - 3
          tags:
          - summer
          awardedGiveawaysCount: 9
          redeemedLoyaltyPointsEffectCount: 9
          discountEffectCount: 343
          createdBy: John Doe
          redeemedLoyaltyPointsCount: 8.0
          addFreeItemEffectCount: 0
          name: Summer promotions
          referralSettings:
            couponPattern: SUMMER-####-####
            validCharacters:
            - A
            - B
            - C
            - D
            - E
            - "2"
            - "0"
          attributes: '{}'
          lastActivity: 2022-11-10T23:00:00Z
          endTime: 2021-09-22T22:00:00Z
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_4:
      example:
        data:
        - headers:
          - headers
          - headers
          created: 2020-06-10T09:05:27.993483Z
          modified: 2021-09-12T10:12:42Z
          id: 6
          applicationId: 322
          url: url
        - headers:
          - headers
          - headers
          created: 2020-06-10T09:05:27.993483Z
          modified: 2021-09-12T10:12:42Z
          id: 6
          applicationId: 322
          url: url
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/NotificationWebhook'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_5:
      example:
        data:
        - rbVersion: v2
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 320
          bindings: []
          activatedAt: 2000-01-23T04:56:07.000+00:00
          activate: true
          rules:
          - condition:
            - and
            - - couponValid
            effects:
            - catch
            - - noop
            - - setDiscount
              - 10% off
              - - '*'
                - - "."
                  - Session
                  - Total
                - - /
                  - 10
                  - 100
            bindings:
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            description: Creates a discount when a coupon is valid
            title: Give discount via coupon
          - condition:
            - and
            - - couponValid
            effects:
            - catch
            - - noop
            - - setDiscount
              - 10% off
              - - '*'
                - - "."
                  - Session
                  - Total
                - - /
                  - 10
                  - 100
            bindings:
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            description: Creates a discount when a coupon is valid
            title: Give discount via coupon
          id: 6
          templateId: 3
          userId: 6
        - rbVersion: v2
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 320
          bindings: []
          activatedAt: 2000-01-23T04:56:07.000+00:00
          activate: true
          rules:
          - condition:
            - and
            - - couponValid
            effects:
            - catch
            - - noop
            - - setDiscount
              - 10% off
              - - '*'
                - - "."
                  - Session
                  - Total
                - - /
                  - 10
                  - 100
            bindings:
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            description: Creates a discount when a coupon is valid
            title: Give discount via coupon
          - condition:
            - and
            - - couponValid
            effects:
            - catch
            - - noop
            - - setDiscount
              - 10% off
              - - '*'
                - - "."
                  - Session
                  - Total
                - - /
                  - 10
                  - 100
            bindings:
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            - expression:
              - '{}'
              - '{}'
              valueType: string
              name: my property
              type: templateParameter
            description: Creates a discount when a coupon is valid
            title: Give discount via coupon
          id: 6
          templateId: 3
          userId: 6
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Ruleset'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_6:
      example:
        data:
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_7:
      example:
        data:
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        - recipientIntegrationId: URNGV8294NV
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 2.3021358869347655
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          reservation: false
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          limits:
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          - period: yearly
            entities:
            - Coupon
            limit: 1000.0
            action: createCoupon
          discountRemainder: 7.061401241503109
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_8:
      example:
        data:
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 1
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          id: 6
          startDate: 2020-11-10T23:00:00Z
        - code: 27G47Y54VH9L
          created: 2020-06-10T09:05:27.993483Z
          usageLimit: 1
          campaignId: 78
          usageCounter: 1
          batchId: tqyrgahe
          advocateProfileIntegrationId: URNGV8294NV
          expiryDate: 2021-11-10T23:00:00Z
          importId: 1
          friendProfileIntegrationId: BZGGC2454PA
          attributes: '{}'
          id: 6
          startDate: 2020-11-10T23:00:00Z
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_9:
      example:
        data:
        - cardBased: true
          tiers:
          - name: Gold
            minPoints: 300
            id: 3
            created: 2021-06-10T09:05:27.993483Z
            programID: 139
          - name: Silver
            minPoints: 200
            id: 2
            created: 2021-06-10T09:04:59.355258Z
            programId: 139
          - name: Bronze
            minPoints: 100
            id: 1
            created: 2021-06-10T09:04:39.355258Z
            programId: 139
          usersPerCardLimit: 111
          created: 2020-06-10T09:05:27.993483Z
          timezone: Europe/Berlin
          description: Customers collect 10 points per 1$ spent
          title: Point collection
          subscribedApplications:
          - 132
          - 97
          accountID: 1
          defaultValidity: unlimited
          defaultPending: immediate
          allowSubledger: false
          name: my_program
          id: 6
        - cardBased: true
          tiers:
          - name: Gold
            minPoints: 300
            id: 3
            created: 2021-06-10T09:05:27.993483Z
            programID: 139
          - name: Silver
            minPoints: 200
            id: 2
            created: 2021-06-10T09:04:59.355258Z
            programId: 139
          - name: Bronze
            minPoints: 100
            id: 1
            created: 2021-06-10T09:04:39.355258Z
            programId: 139
          usersPerCardLimit: 111
          created: 2020-06-10T09:05:27.993483Z
          timezone: Europe/Berlin
          description: Customers collect 10 points per 1$ spent
          title: Point collection
          subscribedApplications:
          - 132
          - 97
          accountID: 1
          defaultValidity: unlimited
          defaultPending: immediate
          allowSubledger: false
          name: my_program
          id: 6
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_10:
      example:
        data:
        - accountId: 3886
          createdBy: 134
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 7
          subscribedApplicationsIds:
          - 1
          - 2
          - 3
          name: My collection
          modified: 2021-09-12T10:12:42Z
          description: My collection of SKUs
          modifiedBy: 48
          id: 6
          applicationId: 1
        - accountId: 3886
          createdBy: 134
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 7
          subscribedApplicationsIds:
          - 1
          - 2
          - 3
          name: My collection
          modified: 2021-09-12T10:12:42Z
          description: My collection of SKUs
          modifiedBy: 48
          id: 6
          applicationId: 1
        hasMore: true
        totalResultSize: 0
      properties:
        hasMore:
          type: boolean
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CollectionWithoutPayload'
          type: array
      required:
      - data
    inline_response_200_11:
      example:
        data:
        - item: item
        - item: item
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_12:
      example:
        data:
        - accountId: 3886
          createdBy: 134
          payload:
          - KTL-WH-ET-1
          - KTL-BL-ET-1
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 7
          subscribedApplicationsIds:
          - 1
          - 2
          - 3
          name: My collection
          modified: 2021-09-12T10:12:42Z
          description: My collection of SKUs
          modifiedBy: 48
          id: 6
          applicationId: 1
        - accountId: 3886
          createdBy: 134
          payload:
          - KTL-WH-ET-1
          - KTL-BL-ET-1
          created: 2020-06-10T09:05:27.993483Z
          campaignId: 7
          subscribedApplicationsIds:
          - 1
          - 2
          - 3
          name: My collection
          modified: 2021-09-12T10:12:42Z
          description: My collection of SKUs
          modifiedBy: 48
          id: 6
          applicationId: 1
        hasMore: true
        totalResultSize: 0
      properties:
        hasMore:
          type: boolean
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Collection'
          type: array
      required:
      - data
    inline_response_200_13:
      example:
        data:
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/AccessLogEntry'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_14:
      example:
        data:
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AccessLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_15:
      example:
        data:
        - date: 2000-01-23T04:56:07.000+00:00
          couponRolledbackRedemptions: 1
          totalCouponRolledbackRedemptions: 1
          campaignRefundedDiscounts: 9.301444243932576
          totalDeductedLoyaltyPoints: 9.018348186070783
          couponRedemptions: 7
          totalCampaignDiscountCosts: 7.061401241503109
          referralRedemptions: 6
          totalCampaignRevenue: 1.4658129805029452
          campaignRevenue: 6.027456183070403
          campaignDiscountCosts: 2.3021358869347655
          totalReferralRedemptions: 7
          couponsCreated: 1
          addedLoyaltyPoints: 9.369310271410669
          campaignRefund: 5.962133916683182
          campaignFreeItems: 2
          totalAddedLoyaltyPoints: 6.683562403749608
          totalCampaignFreeItems: 4
          totalCampaignRefundedDiscounts: 3.616076749251911
          totalCampaignRefund: 5.637376656633329
          totalCouponsCreated: 4
          deductedLoyaltyPoints: 8.762042012749001
          totalCouponRedemptions: 1
          referralsCreated: 5
          totalReferralsCreated: 9
        - date: 2000-01-23T04:56:07.000+00:00
          couponRolledbackRedemptions: 1
          totalCouponRolledbackRedemptions: 1
          campaignRefundedDiscounts: 9.301444243932576
          totalDeductedLoyaltyPoints: 9.018348186070783
          couponRedemptions: 7
          totalCampaignDiscountCosts: 7.061401241503109
          referralRedemptions: 6
          totalCampaignRevenue: 1.4658129805029452
          campaignRevenue: 6.027456183070403
          campaignDiscountCosts: 2.3021358869347655
          totalReferralRedemptions: 7
          couponsCreated: 1
          addedLoyaltyPoints: 9.369310271410669
          campaignRefund: 5.962133916683182
          campaignFreeItems: 2
          totalAddedLoyaltyPoints: 6.683562403749608
          totalCampaignFreeItems: 4
          totalCampaignRefundedDiscounts: 3.616076749251911
          totalCampaignRefund: 5.637376656633329
          totalCouponsCreated: 4
          deductedLoyaltyPoints: 8.762042012749001
          totalCouponRedemptions: 1
          referralsCreated: 5
          totalReferralsCreated: 9
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CampaignAnalytics'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_16:
      example:
        data:
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        hasMore: true
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationCustomer'
          type: array
      required:
      - data
    inline_response_200_17:
      example:
        data:
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationCustomer'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_18:
      example:
        data:
        - accountId: 31
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        - accountId: 31
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2020-02-08T14:15:20Z
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 323414846
          audienceMemberships:
          - name: Travel audience
            id: 2
          - name: Travel audience
            id: 2
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/CustomerProfile'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_19:
      example:
        data:
        - couponUseAttempts: 1
          created: 2020-02-07T08:15:22Z
          totalOrdersNoCoupon: 9
          integrationId: URNGV8294NV
          couponRedemptions: 6
          couponFailedAttempts: 5
          accruedRevenue: 2.3021358869347655
          name: name
          customerId: 0
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 7
          campaignName: campaignName
          accruedDiscounts: 5.637376656633329
        - couponUseAttempts: 1
          created: 2020-02-07T08:15:22Z
          totalOrdersNoCoupon: 9
          integrationId: URNGV8294NV
          couponRedemptions: 6
          couponFailedAttempts: 5
          accruedRevenue: 2.3021358869347655
          name: name
          customerId: 0
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 7
          campaignName: campaignName
          accruedDiscounts: 5.637376656633329
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/CustomerActivityReport'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_20:
      example:
        data:
        - coupon: BKDB946
          created: 2000-01-23T04:56:07.000+00:00
          totalDiscounts: 100.0
          integrationId: URNGV8294NV
          profileintegrationid: 382370BKDB946
          total: 200.0
          referral: BKDB946
          discounts:
            key: 0.8008281904610115
          profileId: 138
          attributes: '{}'
          id: 6
          state: closed
          applicationId: 322
          cartItems:
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
        - coupon: BKDB946
          created: 2000-01-23T04:56:07.000+00:00
          totalDiscounts: 100.0
          integrationId: URNGV8294NV
          profileintegrationid: 382370BKDB946
          total: 200.0
          referral: BKDB946
          discounts:
            key: 0.8008281904610115
          profileId: 138
          attributes: '{}'
          id: 6
          state: closed
          applicationId: 322
          cartItems:
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
          - remainingQuantity: 1
            quantity: 1
            returnedQuantity: 1
            length: 1.4658129805029452
            weight: 1130.0
            catalogItemID: 5
            additionalCosts:
              shipping:
                price: 9
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: SKU1241028
            category: shoes
            height: 0.8008281904610115
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationSession'
          type: array
      required:
      - data
    inline_response_200_21:
      example:
        data:
        - effects:
          - '{}'
          - '{}'
          created: 2020-06-10T09:05:27.993483Z
          profileId: 138
          attributes: '{}'
          id: 6
          sessionId: 0
          applicationId: 322
          type: type
          ruleFailureReasons:
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
        - effects:
          - '{}'
          - '{}'
          created: 2020-06-10T09:05:27.993483Z
          profileId: 138
          attributes: '{}'
          id: 6
          sessionId: 0
          applicationId: 322
          type: type
          ruleFailureReasons:
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 1
            ruleIndex: 1
            campaignID: 7
            referralID: 1
            ruleName: ruleName
            conditionIndex: 6
            effectIndex: 7
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationEvent'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_22:
      example:
        data:
        - data
        - data
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            type: string
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_23:
      example:
        data:
        - accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          name: Travel audience
          sandbox: true
          integration: mparticle
          description: Travel audience 18-25
          integrationId: 382370BKDB946
          id: 6
          createdIn3rdParty: false
        - accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          name: Travel audience
          sandbox: true
          integration: mparticle
          description: Travel audience 18-25
          integrationId: 382370BKDB946
          id: 6
          createdIn3rdParty: false
        hasMore: true
        totalResultSize: 0
      properties:
        hasMore:
          type: boolean
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Audience'
          type: array
      required:
      - data
    inline_response_200_24:
      example:
        data:
        - friendIntegrationId: friendIntegrationId
          code: code
          created: 2000-01-23T04:56:07.000+00:00
          sessionId: sessionId
          advocateIntegrationId: advocateIntegrationId
          applicationId: 322
        - friendIntegrationId: friendIntegrationId
          code: code
          created: 2000-01-23T04:56:07.000+00:00
          sessionId: sessionId
          advocateIntegrationId: advocateIntegrationId
          applicationId: 322
        hasMore: true
        totalResultSize: 0
      properties:
        hasMore:
          type: boolean
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ApplicationReferee'
          type: array
      required:
      - data
      - hasMore
      - totalResultSize
    inline_response_200_25:
      example:
        data:
        - created: 2020-06-10T09:05:27.993483Z
          editable: true
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          restrictedBySuggestions: false
          eventType: eventType
          title: title
          type: string
          accountId: 3886
          eventTypeId: 22
          hasAllowedList: false
          allowedSubscriptions:
          - application
          - application
          name: name
          suggestions:
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          id: 6
          subscribedCatalogsIds:
          - 1
          - 1
          entity: Account
        - created: 2020-06-10T09:05:27.993483Z
          editable: true
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          restrictedBySuggestions: false
          eventType: eventType
          title: title
          type: string
          accountId: 3886
          eventTypeId: 22
          hasAllowedList: false
          allowedSubscriptions:
          - application
          - application
          name: name
          suggestions:
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          id: 6
          subscribedCatalogsIds:
          - 1
          - 1
          entity: Account
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_26:
      example:
        data:
        - accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          name: name
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          id: 6
          title: title
          type: session
        - accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          name: name
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          id: 6
          title: title
          type: session
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AccountAdditionalCost'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_27:
      example:
        data:
        - headers:
          - headers
          - headers
          payload: payload
          created: 2020-06-10T09:05:27.993483Z
          verb: POST
          modified: 2021-09-12T10:12:42Z
          id: 6
          title: title
          params:
          - ui: '{}'
            description: description
            type: string
            title: title
          - ui: '{}'
            description: description
            type: string
            title: title
          url: url
          enabled: true
          applicationIds:
          - 6
          - 6
        - headers:
          - headers
          - headers
          payload: payload
          created: 2020-06-10T09:05:27.993483Z
          verb: POST
          modified: 2021-09-12T10:12:42Z
          id: 6
          title: title
          params:
          - ui: '{}'
            description: description
            type: string
            title: title
          - ui: '{}'
            description: description
            type: string
            title: title
          url: url
          enabled: true
          applicationIds:
          - 6
          - 6
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_28:
      example:
        data:
        - webhookId: 6
          campaignId: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          applicationId: 1
        - webhookId: 6
          campaignId: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          applicationId: 1
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WebhookActivationLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_29:
      example:
        data:
        - requestTime: 2000-01-23T04:56:07.000+00:00
          request: request
          webhookId: 6
          response: response
          responseTime: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          id: id
          applicationId: 1
          url: url
          status: 5
        - requestTime: 2000-01-23T04:56:07.000+00:00
          request: request
          webhookId: 6
          response: response
          responseTime: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          id: id
          applicationId: 1
          url: url
          status: 5
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WebhookLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_30:
      example:
        data:
        - created: 2020-06-10T09:05:27.993483Z
          name: name
          description: description
          id: 6
          title: title
        - created: 2020-06-10T09:05:27.993483Z
          name: name
          description: description
          id: 6
          title: title
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_31:
      example:
        data:
        - created: 2020-06-10T09:05:27.993483Z
          roles:
          - 71
          accountId: 3886
          applicationNotificationSubscriptions: '{}'
          inviteToken: Gy9b8w1irmQtEPo5RmbMmSPheL5h4
          name: John Doe
          modified: 2021-09-12T10:12:42Z
          id: 6
          state: invited
          latestFeedTimestamp: 2020-06-01T00:00:00Z
          authMethod: basic_auth
          email: john.doe@example.com
          policy:
            Role: 127
        - created: 2020-06-10T09:05:27.993483Z
          roles:
          - 71
          accountId: 3886
          applicationNotificationSubscriptions: '{}'
          inviteToken: Gy9b8w1irmQtEPo5RmbMmSPheL5h4
          name: John Doe
          modified: 2021-09-12T10:12:42Z
          id: 6
          state: invited
          latestFeedTimestamp: 2020-06-01T00:00:00Z
          authMethod: basic_auth
          email: john.doe@example.com
          policy:
            Role: 127
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_32:
      example:
        data:
        - new:
            applicationId": 359
            attributes": {}
            campaignGroups": []
            created": 2022-07-08T13:04:02.972762328Z
            description": ""
            features":
            - referrals
            - loyalty
            id: 6727
          created: 2020-06-10T09:05:27.993483Z
          old: '{}'
          id: 6
          applicationId: 359
          userId: 6
          entity: /v1/applications/359/campaigns/6727
        - new:
            applicationId": 359
            attributes": {}
            campaignGroups": []
            created": 2022-07-08T13:04:02.972762328Z
            description": ""
            features":
            - referrals
            - loyalty
            id: 6727
          created: 2020-06-10T09:05:27.993483Z
          old: '{}'
          id: 6
          applicationId: 359
          userId: 6
          entity: /v1/applications/359/campaigns/6727
        hasMore: true
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Change'
          type: array
      required:
      - data
    inline_response_200_33:
      example:
        data:
        - filter: '{}'
          accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          id: 6
          userId: 6
          entity: Coupon
        - filter: '{}'
          accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          id: 6
          userId: 6
          entity: Coupon
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Export'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_34:
      example:
        data:
        - accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          campaignGroupID: 6
          members:
          - 1
          - 1
          name: name
          modified: 2021-09-12T10:12:42Z
          description: description
          id: 6
          acl: '{}'
        - accountId: 3886
          created: 2020-06-10T09:05:27.993483Z
          campaignGroupID: 6
          members:
          - 1
          - 1
          name: name
          modified: 2021-09-12T10:12:42Z
          description: description
          id: 6
          acl: '{}'
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Role'
          type: array
      required:
      - data
      - totalResultSize
  securitySchemes:
    api_key_v1:
      description: |
        To authenticate in order to use the Integration API, generate an API key in the Campaign Manager
        then prefix it with `ApiKey-v1`.

        To generate an API key:

        1. Log on to the Campaign Manager and open the Application of your choice, or create one.
        1. Click **Settings** > **Developer settings**.
        1. Click **Create API Key** and give it a title and an expiration date, then click **Create API Key**.

        You can now use the API key in the HTTP header, prefixing it with `ApiKey-v1`:

        ```
        Authorization: ApiKey-v1 dbc644d33aa74d582bd9479c59e16f970fe13bf3
        ```

        Or use it inside [an SDK](/docs/dev/sdks/overview), for example, with the JAVA SDK:

        ```
        iApi.getApiClient().setApiKeyPrefix("ApiKey-v1");
        iApi.getApiClient().setApiKey("dbc644d33aa74d582bd9479c59e16f970fe13bf3");
        ```
      in: header
      name: Authorization
      type: apiKey
    manager_auth:
      description: |
        To authenticate in order to use the Management API:

        1. Get a bearer token by calling the [createSession](#operation/createSession) endpoint.
        1. Use the `token` property of the response in the HTTP header of your next queries:
           `Authorization: Bearer $TOKEN`.

        A token is valid for 3 months. In accordance with best pratices, use your generated token
        for all your API requests. Do **not** regenerate a token for each request.
      in: header
      name: Authorization
      type: apiKey
