openapi: 3.0.1
info:
  description: |
    The Talon.One API is used to manage applications and campaigns, as well as to
    integrate with your application. The operations in the _Integration API_ section
    are used to integrate with our platform, while the other operations are
    used to manage applications and campaigns.

    ### Where is the API?

    The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`

    [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
  title: Talon.One API
  version: 1.0.0
servers:
- url: /
security:
- manager_auth: []
tags:
- description: |
    The Integration API is how you push data into the Talon.One environment. You can create profiles for your customers, sessions to group their activity, and custom events to track specific actions that do not fit into the session data model.
    You will need [Authentication][] to make requests to the API.
    [Authentication]: /integration-api/authentication
  name: Integration API
- description: |
    Operations for logging in/out of the Campaign Manager.
  name: Sessions
- name: Applications
- description: |
    Analytics are used to retrieve statistical data about the performance of campaigns within an application.
  name: Analytics
- description: |
    Campaigns are the primary resource used to control the behavior of the Talon.One Rule Engine. They combine rulesets, coupons, and limits into a single unit.
  name: Campaigns
- description: |
    Coupons are unique codes belonging to a particular campaign. They don't define any behavior on their own, instead the campaign ruleset can include rules that validate coupons and carry out particular effects.
  name: Coupons
- description: Talon.One is extremely customizable. These API operations allow you
    to alter the data model and rule builder to better suit Talon.One to the needs
    of your business.
  name: Customization
- description: |
    Campaign Analytics are used to retrieve statistical data about the performance of a specific campaign.
  name: Campaign Analytics
- description: |
    Customer Data operations are used to retrieve data about customers/sessions/events for reporting and debugging in the Campaign Manager.
  name: Customer Data
- description: |
    The Talon.One API records all incoming and outgoing requests. These API operations allow you to query those logs.
  name: Logs
- description: |
    Operations for updating account information such as billing email addresses, inviting users, etc.
  name: Accounts & Users
paths:
  /v1/customer_profiles/{integrationId}:
    put:
      description: |
        Update (or create) a [Customer Profile][]. This profile information can then be matched and/or updated by campaign [Rules][].

        The `integrationId` may be any identifier that will remain stable for the customer. For example, you might use a database ID, an email, or a phone number as the `integrationId`. It is vital that this ID **not** change over time, so **don't** use any identifier that the customer can update themselves. E.g. if your application allows a customer to update their e-mail address, you should instead use a database ID.

        Updating a customer profile will return a response with the full integration state. This includes the current state of the customer profile, the customer session, the event that was recorded, and an array of effects that took place.

        [Customer Profile]: /Getting-Started/entities#customer-profile
        [Rules]: /Getting-Started/entities#campaigns-rulesets-and-coupons
      operationId: updateCustomerProfile
      parameters:
      - description: Flag to indicate whether to skip persisting the changes or not
          (Will not persist if set to 'true').
        in: query
        name: dry
        schema:
          type: boolean
      - description: The custom identifier for this profile, must be unique within
          the account.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomerProfile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationState'
          description: OK
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Update a Customer Profile
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/customer_sessions/{customerSessionId}:
    put:
      description: |
        Update (or create) a [Customer Session][]. For example, the items in a customers cart are part of a session.

        The Talon.One platform supports multiple simultaneous sessions for the same profile, so if you have multiple ways of accessing the same application you have the option of either tracking multiple independent sessions or using the same session across all of them. You should share sessions when application access points share other state, such as the users cart. If two points of access to the application have independent state (e.g. a user can have different items in their cart across the two) they should use independent customer session ID's.

        The `profileId` parameter in the request body should correspond to an `integrationId` for a customer profile, to track an anonymous session use the empty string (`""`) as the `profileId`. Note that you do **not** need to create a customer profile first: if the specified profile does not yet exist, an empty profile will be created automatically.

        Updating a customer profile will return a response with the full integration state. This includes the current state of the customer profile, the customer session, the event that was recorded, and an array of effects that took place.

        The currency for the session and the cart items in the session is the same as that of the application with which the session is associated.

        [Customer Session]: /Getting-Started/entities#customer-session
      operationId: updateCustomerSession
      parameters:
      - description: Flag to indicate whether to skip persisting the changes or not
          (Will not persist if set to 'true').
        in: query
        name: dry
        schema:
          type: boolean
      - description: The custom identifier for this session, must be unique within
          the account.
        in: path
        name: customerSessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomerSession'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationState'
          description: OK
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Update a Customer Session
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/events:
    post:
      description: |
        Records an arbitrary event in a customer session. For example, an integration might record an event when a user updates their payment information.

        The `sessionId` body parameter is required, an event is always part of a session. Much like updating a customer session, if either the profile or the session do not exist, a new empty one will be created. Note that if the specified session already exists, it must belong to the same `profileId` or an error will be returned.

        As with customer sessions, you can use an empty string for `profileId` to indicate that this is an anonymous session.

        Updating a customer profile will return a response with the full integration state. This includes the current state of the customer profile, the customer session, the event that was recorded, and an array of effects that took place.
      operationId: trackEvent
      parameters:
      - description: Flag to indicate whether to skip persisting the changes or not
          (Will not persist if set to 'true').
        in: query
        name: dry
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEvent'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationState'
          description: Created
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Track an Event
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/referrals:
    post:
      description: |
        Creates a referral code for an advocate. The code will be valid for the referral campaign for which is created, indicated in the `campaignId` parameter, and will be associated with the profile specified in the `advocateProfileIntegrationId` parameter as the advocate's profile.
      operationId: createReferral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReferral'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: Created
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Create a referral code for an advocate
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/customer_data/{integrationId}:
    delete:
      description: |
        Delete all attributes on the customer profile and on entities that reference that customer profile.
      operationId: deleteCustomerData
      parameters:
      - description: The custom identifier for this profile, must be unique within
          the account.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Delete the personal data of a customer.
      tags:
      - integration
  /v1/coupon_reservations/{couponValue}:
    delete:
      description: |
        Removes all passed customer profiles reservation from this coupon
      operationId: deleteCouponReservation
      parameters:
      - description: The value of a coupon
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponReservations'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Delete coupon reservations
      tags:
      - integration
      x-codegen-request-body-name: body
    post:
      description: |
        Creates a coupon reservation for all passed customer profiles on this couponID
      operationId: createCouponReservation
      parameters:
      - description: The value of a coupon
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponReservations'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Created
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Create a new coupon reservation
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/coupon_reservations/customerprofiles/{couponValue}:
    get:
      description: |
        Returns all users that have this coupon marked as reserved
      operationId: getReservedCustomers
      parameters:
      - description: The value of a coupon
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Get the users that have this coupon reserved
      tags:
      - integration
  /v1/customer_profiles/{integrationId}/inventory:
    get:
      description: Get information regarding entities referencing this customer profile's
        integrationId. Currently we support customer profile information, referral
        codes and reserved coupons. In the future, this will be expanded with loyalty
        points.
      operationId: getCustomerInventory
      parameters:
      - description: The custom identifier for this profile, must be unique within
          the account.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      - description: optional flag to decide if you would like customer profile information
          in the response
        in: query
        name: profile
        schema:
          type: boolean
      - description: optional flag to decide if you would like referral information
          in the response
        in: query
        name: referrals
        schema:
          type: boolean
      - description: optional flag to decide if you would like coupon information
          in the response
        in: query
        name: coupons
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInventory'
          description: OK
      security:
      - api_key_v1: []
      - integration_auth: []
      summary: Get an inventory of all data associated with a specific customer profile.
      tags:
      - integration
  /v2/customer_sessions/{customerSessionId}:
    put:
      description: |
        Update (or create) a [Customer Session][]. For example, the items in a customers cart are part of a session.

        The Talon.One platform supports multiple simultaneous sessions for the same profile, so if you have multiple ways of accessing the same application you have the option of either tracking multiple independent sessions or using the same session across all of them. You should share sessions when application access points share other state, such as the users cart. If two points of access to the application have independent state (e.g. a user can have different items in their cart across the two) they should use independent customer session ID's.

        The `profileId` parameter in the request body should correspond to an `integrationId` for a customer profile, to track an anonymous session use the empty string (`""`) as the `profileId`. Note that you do **not** need to create a customer profile first: if the specified profile does not yet exist, an empty profile will be created automatically.

        Updating a customer profile will return a response with the requested integration state. This includes the effects that were generated due to triggered campaigns, the created coupons and referral objects, as well as any entity that was requested in the request parameter "responseContent".

        The currency for the session and the cart items in the session is the same as that of the application with which the session is associated.

        [Customer Session]: /Getting-Started/entities#customer-session
      operationId: updateCustomerSessionV2
      parameters:
      - description: Flag to indicate whether to skip persisting the changes or not
          (Will not persist if set to 'true').
        in: query
        name: dry
        schema:
          type: boolean
      - description: The custom identifier for this session, must be unique within
          the account.
        in: path
        name: customerSessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationStateV2'
          description: OK
      security:
      - api_key_v1: []
      summary: Update a Customer Session
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/customer_profiles/{customerProfileId}:
    put:
      description: "Update (or create) a [Customer Profile][]. \n\nThe `integrationId`\
        \ may be any identifier that will remain stable for the customer. For example,\
        \ you might use a database ID, an email, or a phone number as the `integrationId`.\
        \ It is vital that this ID **not** change over time, so **don't** use any\
        \ identifier that the customer can update themselves. E.g. if your application\
        \ allows a customer to update their e-mail address, you should instead use\
        \ a database ID.\n\n[Customer Profile]: /Getting-Started/entities#customer-profile\n"
      operationId: updateCustomerProfileV2
      parameters:
      - description: The custom identifier for this profile, must be unique within
          the account.
        in: path
        name: customerProfileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCustomerProfile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfileUpdate'
          description: OK
      security:
      - api_key_v1: []
      summary: Update a Customer Profile
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/applications:
    get:
      description: List all application in the current account.
      operationId: getApplications
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
      summary: List Applications
      tags:
      - management
  /v1/applications/{applicationId}:
    get:
      description: Get the application specified by the ID.
      operationId: getApplication
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
      summary: Get Application
      tags:
      - management
  /v1/applications/{applicationId}/campaigns:
    get:
      operationId: getCampaigns
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by the state of the campaign.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      - description: Filter results performing case-insensitive matching against the
          name of the campaign.
        in: query
        name: name
        schema:
          type: string
      - description: |
          Filter results performing case-insensitive matching against the tags of the campaign. When used in conjunction with the "name" query parameter, a logical OR will be performed to search both tags and name for the provided values
        in: query
        name: tags
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the campaign creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the campaign creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: List your Campaigns
      tags:
      - management
    post:
      operationId: createCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCampaign'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: Created
      summary: Create a Campaign
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}:
    delete:
      operationId: deleteCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a Campaign
      tags:
      - management
    get:
      operationId: getCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: OK
      summary: Get a Campaign
      tags:
      - management
    put:
      operationId: updateCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: OK
      summary: Update a Campaign
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/copy:
    post:
      description: Copy the campaign into every specified application.
      operationId: copyCampaignToApplications
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCopy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: Copy the campaign into every specified application
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns_search:
    post:
      description: |
        Gets a list of all the campaigns that exactly match a set of attributes.
      operationId: getCampaignByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by the state of the campaign.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: Get a list of all campaigns that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets:
    get:
      operationId: getRulesets
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
      summary: List Campaign Rulesets
      tags:
      - management
    post:
      operationId: createRuleset
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRuleset'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: Created
      summary: Create a Ruleset
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets/{rulesetId}:
    delete:
      operationId: deleteRuleset
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - in: path
        name: rulesetId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a Ruleset
      tags:
      - management
    get:
      operationId: getRuleset
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - in: path
        name: rulesetId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: OK
      summary: Get a Ruleset
      tags:
      - management
    put:
      operationId: updateRuleset
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - in: path
        name: rulesetId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRuleset'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: OK
      summary: Update a Ruleset
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons:
    delete:
      operationId: deleteCoupons
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: startsAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: startsBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: expiresAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: expiresBefore
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete Coupons
      tags:
      - management
    get:
      operationId: getCoupons
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: startsAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: startsBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: expiresAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: expiresBefore
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      summary: List Coupons
      tags:
      - management
    post:
      description: Create coupons according to some pattern. Up to 20.000 coupons
        can be created without a unique prefix. When a unique prefix is provided,
        up to 200.000 coupons can be created.
      operationId: createCoupons
      parameters:
      - description: If set to 'yes', response will be an empty 204, otherwise a list
          of the coupons generated (to to 1000).
        in: query
        name: silent
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCoupons'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
        "204":
          content: {}
          description: No Content
      summary: Create Coupons
      tags:
      - management
      x-codegen-request-body-name: body
    put:
      operationId: updateCouponBatch
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCouponBatch'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Update a Batch of Coupons
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/no_total:
    get:
      operationId: getCouponsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
      summary: List Coupons
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/{couponId}:
    delete:
      operationId: deleteCoupon
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the coupon code to delete
        in: path
        name: couponId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete one Coupon
      tags:
      - management
    put:
      operationId: updateCoupon
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the coupon code to update
        in: path
        name: couponId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCoupon'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: OK
      summary: Update a Coupon
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search:
    post:
      description: |
        Gets a list of all the coupons that exactly match a set of attributes.

        The match is successful if all the attributes of the request are found in a coupon, even if the coupon has more attributes that are not present on the request.
      operationId: getCouponsByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      summary: Get a list of the coupons that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/coupons_search:
    post:
      description: |
        Gets a list of all the coupons with attributes matching the query criteria Application wide
      operationId: getCouponsByAttributesApplicationWide
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by the state of the campaign.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      summary: Get a list of the coupons that match the given attributes in all active
        campaigns of an application
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced:
    post:
      description: |
        Gets a list of all the coupons with attributes matching the query criteria
      operationId: searchCouponsAdvanced
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      summary: Get a list of the coupons that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced/no_total:
    post:
      description: |
        Gets a list of all the coupons with attributes matching the query criteria
      operationId: searchCouponsAdvancedWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
      summary: Get a list of the coupons that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/coupons_search_advanced:
    post:
      description: |
        Gets a list of all the coupons with attributes matching the query criteria in all active campaigns of an application
      operationId: searchCouponsAdvancedApplicationWide
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by the state of the campaign.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      summary: Get a list of the coupons that match the given attributes in all active
        campaigns of an application
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/coupons_search_advanced/no_total:
    post:
      description: |
        Gets a list of all the coupons with attributes matching the query criteria in all active campaigns of an application
      operationId: searchCouponsAdvancedApplicationWideWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by the state of the campaign.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
      summary: Get a list of the coupons that match the given attributes in all active
        campaigns of an application
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals:
    get:
      operationId: getReferrals
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          referral code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: code
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches referrals in which the expiry date is set and in the past. The second matches referrals in which start date is null or in the past and expiry date is null or in the future, the third matches referrals in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only referrals where `usageCounter < usageLimit` will be returned, "false" will return only referrals where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter results by match with a profile id specified in the referral's
          AdvocateProfileIntegrationId field
        in: query
        name: advocate
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: OK
      summary: List Referrals
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/{referralId}:
    delete:
      operationId: deleteReferral
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the referral code to delete
        in: path
        name: referralId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete one Referral
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/no_total:
    get:
      operationId: getReferralsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          referral code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: code
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches referrals in which the expiry date is set and in the past. The second matches referrals in which start date is null or in the past and expiry date is null or in the future, the third matches referrals in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only referrals where `usageCounter < usageLimit` will be returned, "false" will return only referrals where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter results by match with a profile id specified in the referral's
          AdvocateProfileIntegrationId field
        in: query
        name: advocate
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
      summary: List Referrals
      tags:
      - management
  /v1/loyalty_programs:
    get:
      operationId: getLoyaltyPrograms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: OK
      summary: List all loyalty Programs
      tags:
      - management
  /v1/loyalty_programs/{programID}:
    get:
      operationId: getLoyaltyProgram
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgram'
          description: OK
      summary: Get a loyalty program
      tags:
      - management
  /v1/loyalty_programs/{programID}/profile/{integrationID}:
    get:
      description: Get the Loyalty Ledger for this profile integration ID.
      operationId: getLoyaltyPoints
      parameters:
      - description: The identifier for the application, must be unique within the
          account.
        in: path
        name: programID
        required: true
        schema:
          type: string
      - description: The identifier for the application, must be unique within the
          account.
        in: path
        name: integrationID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyLedger'
          description: OK
      summary: get the Loyalty Ledger for this integrationID
      tags:
      - management
  /v1/loyalty_programs/{programID}/profile/{integrationID}/add_points:
    put:
      operationId: addLoyaltyPoints
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: string
      - in: path
        name: integrationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyPoints'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Add points in a certain loyalty program for the specified customer
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/loyalty_programs/{programID}/profile/{integrationID}/deduct_points:
    put:
      operationId: removeLoyaltyPoints
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: string
      - in: path
        name: integrationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyPoints'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deduct points in a certain loyalty program for the specified customer
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/health_report:
    get:
      operationId: getApplicationApiHealth
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApiHealth'
          description: OK
      summary: Get report of health of application API
      tags:
      - management
  /v1/applications/{applicationId}/access_logs:
    get:
      operationId: getAccessLogs
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return results where the request path matches the given
          regular expression.
        in: query
        name: path
        schema:
          type: string
      - description: Only return results where the request method matches the given
          regular expression.
        in: query
        name: method
        schema:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
      summary: Get access logs for application
      tags:
      - management
  /v1/applications/{applicationId}/access_logs/no_total:
    get:
      operationId: getAccessLogsWithoutTotalCount
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return results where the request path matches the given
          regular expression.
        in: query
        name: path
        schema:
          type: string
      - description: Only return results where the request method matches the given
          regular expression.
        in: query
        name: method
        schema:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: OK
      summary: Get access logs for application
      tags:
      - management
  /v1/access_logs:
    get:
      description: |
        Fetches the access logs for the entire account. Sensitive requests (logins) are _always_ filtered from the logs.
      operationId: getAllAccessLogs
      parameters:
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results where the request path matches the given
          regular expression.
        in: query
        name: path
        schema:
          type: string
      - description: Only return results where the request method matches the given
          regular expression.
        in: query
        name: method
        schema:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
      summary: Get all access logs
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/analytics:
    get:
      operationId: getCampaignAnalytics
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The time interval between the results in the returned time-series.
        in: query
        name: granularity
        schema:
          enum:
          - 1 hour
          - 1 day
          - 1 week
          - 1 month
          - 1 year
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: OK
      summary: Get analytics of campaigns
      tags:
      - management
  /v1/applications/{applicationId}/customers:
    get:
      operationId: getApplicationCustomers
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: OK
      summary: List Application Customers
      tags:
      - management
  /v1/customer_search/no_total:
    post:
      description: |
        Gets a list of all the customer profiles for the account that exactly match a set of attributes.

        The match is successful if all the attributes of the request are found in a profile, even if the profile has more attributes that are not present on the request.

        [Customer Profile]: https://help.talon.one/hc/en-us/articles/360005130739-Data-Model#CustomerProfile
      operationId: getCustomersByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCustomerSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: OK
      summary: Get a list of the customer profiles that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/customers/{customerId}:
    get:
      operationId: getCustomerProfile
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomer'
          description: OK
      summary: Get Customer Profile
      tags:
      - management
  /v1/customers/no_total:
    get:
      operationId: getCustomerProfiles
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: OK
      summary: List Customer Profiles
      tags:
      - management
  /v1/application_customer_search:
    post:
      deprecated: true
      description: |
        Gets a list of all the customer profiles for the account that exactly match a set of attributes.

        The match is successful if all the attributes of the request are found in a profile, even if the profile has more attributes that are not present on the request.

        [Customer Profile]: https://help.talon.one/hc/en-us/articles/360005130739-Data-Model#CustomerProfile
      operationId: getApplicationCustomersByAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCustomerSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: OK
      security:
      - integration_auth: []
      summary: Get a list of the customer profiles that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/customers/{customerId}:
    get:
      operationId: getApplicationCustomer
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomer'
          description: OK
      summary: Get Application Customer
      tags:
      - management
  /v1/applications/{applicationId}/customer_activity_reports:
    get:
      description: Fetch summary reports for all application customers based on a
        time range
      operationId: getCustomerActivityReports
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return reports matching the customer name
        in: query
        name: name
        schema:
          type: string
      - description: Only return reports matching the integrationId
        in: query
        name: integrationId
        schema:
          type: string
      - description: Only return reports matching the campaignName
        in: query
        name: campaignName
        schema:
          type: string
      - description: Only return reports matching the current customer referrer name
        in: query
        name: advocateName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
          description: OK
      summary: Get Activity Reports for Application Customers
      tags:
      - management
  /v1/applications/{applicationId}/customer_activity_reports/no_total:
    get:
      description: Fetch summary reports for all application customers based on a
        time range. Instead of having the total number of results in the response,
        this endpoint only if there are more results.
      operationId: getCustomerActivityReportsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return reports matching the customer name
        in: query
        name: name
        schema:
          type: string
      - description: Only return reports matching the integrationId
        in: query
        name: integrationId
        schema:
          type: string
      - description: Only return reports matching the campaignName
        in: query
        name: campaignName
        schema:
          type: string
      - description: Only return reports matching the current customer referrer name
        in: query
        name: advocateName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: OK
      summary: Get Activity Reports for Application Customers
      tags:
      - management
  /v1/applications/{applicationId}/customer_activity_reports/{customerId}:
    get:
      description: Fetch summary report for single application customer based on a
        time range
      operationId: getCustomerActivityReport
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerActivityReport'
          description: OK
      summary: Get Activity Report for Single Customer
      tags:
      - management
  /v1/applications/{applicationId}/customers/{customerId}/analytics:
    get:
      description: Fetch analytics for single application customer
      operationId: getCustomerAnalytics
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAnalytics'
          description: OK
      summary: Get Analytics Report for a Customer
      tags:
      - management
  /v1/applications/{applicationId}/sessions:
    get:
      operationId: getApplicationSessions
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Profile integration ID filter for sessions. Must be exact match.
        in: query
        name: profile
        schema:
          type: string
      - description: Filter by sessions with this state. Must be exact match.
        in: query
        name: state
        schema:
          enum:
          - open
          - closed
          - cancelled
          type: string
      - description: Filter by sessions with this coupon. Must be exact match.
        in: query
        name: coupon
        schema:
          type: string
      - description: Filter by sessions with this referral. Must be exact match.
        in: query
        name: referral
        schema:
          type: string
      - description: Filter by sessions with this integrationId. Must be exact match.
        in: query
        name: integrationId
        schema:
          type: string
      - description: Filter by integration ID of the customer for the session
        in: query
        name: customerId
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
          description: OK
      summary: List Application Sessions
      tags:
      - management
  /v1/applications/{applicationId}/sessions/{sessionId}:
    get:
      operationId: getApplicationSession
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: sessionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSession'
          description: OK
      summary: Get Application Session
      tags:
      - management
  /v1/applications/{applicationId}/events:
    get:
      description: |
        Lists all events recorded for an application.
      operationId: getApplicationEvents
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Comma-separated list of types by which to filter events. Must
          be exact match(es).
        in: query
        name: type
        schema:
          type: string
      - description: Only return events created before this date
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Only return events created after this date
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Session integration ID filter for events. Must be exact match.
        in: query
        name: session
        schema:
          type: string
      - description: Profile integration ID filter for events. Must be exact match.
        in: query
        name: profile
        schema:
          type: string
      - description: Customer name filter for events. Will match substrings case-insensitively.
        in: query
        name: customerName
        schema:
          minLength: 2
          type: string
      - description: Customer e-mail address filter for events. Will match substrings
          case-insensitively.
        in: query
        name: customerEmail
        schema:
          minLength: 2
          type: string
      - description: Coupon code
        in: query
        name: couponCode
        schema:
          type: string
      - description: Referral code
        in: query
        name: referralCode
        schema:
          type: string
      - description: Rule name filter for events
        in: query
        name: ruleQuery
        schema:
          type: string
      - description: Campaign name filter for events
        in: query
        name: campaignQuery
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
          description: OK
      summary: List Applications Events
      tags:
      - management
  /v1/applications/{applicationId}/events/no_total:
    get:
      description: |
        Lists all events recorded for an application. Instead of having the total number of results in the response, this endpoint only if there are more results.
      operationId: getApplicationEventsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Comma-separated list of types by which to filter events. Must
          be exact match(es).
        in: query
        name: type
        schema:
          type: string
      - description: Only return events created before this date
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Only return events created after this date
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Session integration ID filter for events. Must be exact match.
        in: query
        name: session
        schema:
          type: string
      - description: Profile integration ID filter for events. Must be exact match.
        in: query
        name: profile
        schema:
          type: string
      - description: Customer name filter for events. Will match substrings case-insensitively.
        in: query
        name: customerName
        schema:
          minLength: 2
          type: string
      - description: Customer e-mail address filter for events. Will match substrings
          case-insensitively.
        in: query
        name: customerEmail
        schema:
          minLength: 2
          type: string
      - description: Coupon code
        in: query
        name: couponCode
        schema:
          type: string
      - description: Referral code
        in: query
        name: referralCode
        schema:
          type: string
      - description: Rule name filter for events
        in: query
        name: ruleQuery
        schema:
          type: string
      - description: Campaign name filter for events
        in: query
        name: campaignQuery
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
          description: OK
      summary: List Applications Events
      tags:
      - management
  /v1/applications/{applicationId}/event_types:
    get:
      description: |
        Get all of the distinct values of the Event `type` property for events recorded in the application.

        See also: [Track an event](/integration-api/reference/#trackEvent)
      operationId: getApplicationEventTypes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
          description: OK
      summary: List Applications Event Types
      tags:
      - management
  /v1/attributes:
    get:
      description: |
        Returns all the defined custom attributes for the account.
      operationId: getAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: OK
      summary: List custom attributes
      tags:
      - management
    post:
      description: |
        Defines a new _custom attribute_ in this account. Custom attributes allow you to attach new fields to Talon.One domain objects like campaigns, coupons, customers and so on. These attributes can then be given values when creating / updating these objects, and these values can be used in your campaign rules. For example, you could define a `zipCode` field for customer sessions, and add a rule to your campaign that only allows certain ZIP codes.

        These attributes are shared across all applications in your account, and are never required.
      operationId: createAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAttribute'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: Created
      summary: Define a new custom attribute
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/attributes/{attributeId}:
    get:
      description: |
        Returns custom attribute for the account by its id.
      operationId: getAttribute
      parameters:
      - in: path
        name: attributeId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: OK
      summary: Get a custom attribute
      tags:
      - management
    put:
      description: |
        Updates an existing custom attribute. Once created, the only property of a custom attribute that can be changed is the title (human readable description). This restriction is in place to prevent accidentally breaking live integrations. E.g. if you have a customer profile attribute with the name `region`, and your integration is sending `attributes.region` with customer profile updates, changing the name to `locale` would cause the integration requests to begin failing.

        If you **really** need to change the `type` or `name` property of a custom attribute, create a new attribute and update any relevant integrations and rules to use the new attribute. Then delete the old attribute when you are confident you have migrated any needed data from the old attribute to the new one.
      operationId: updateAttribute
      parameters:
      - in: path
        name: attributeId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAttribute'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: OK
      summary: Update a custom attribute
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/additional_costs:
    get:
      description: |
        Returns all the defined additional costs for the account.
      operationId: getAdditionalCosts
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
          description: OK
      summary: List additional costs
      tags:
      - management
    post:
      description: |
        Defines a new _additional cost_ in this account.

        These additional costs are shared across all applications in your account, and are never required.
      operationId: createAdditionalCost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAdditionalCost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: Created
      summary: Define a new additional cost
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/additional_costs/{additionalCostId}:
    get:
      description: |
        Returns additional cost for the account by its id.
      operationId: getAdditionalCost
      parameters:
      - in: path
        name: additionalCostId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: OK
      summary: Get an additional cost
      tags:
      - management
    put:
      description: |
        Updates an existing additional cost. Once created, the only property of an additional cost that can be changed is the title (human readable description). This restriction is in place to prevent accidentally breaking live integrations.
      operationId: updateAdditionalCost
      parameters:
      - in: path
        name: additionalCostId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAdditionalCost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: OK
      summary: Update an additional cost
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/webhooks:
    get:
      operationId: getWebhooks
      parameters:
      - description: Filter by one or more application ids separated by comma
        in: query
        name: applicationIds
        schema:
          type: string
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
          description: OK
      summary: List Webhooks
      tags:
      - management
  /v1/webhooks/{webhookId}:
    get:
      description: Returns an webhook by its id.
      operationId: getWebhook
      parameters:
      - in: path
        name: webhookId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: OK
      summary: Get Webhook
      tags:
      - management
  /v1/webhook_activation_logs:
    get:
      description: Webhook activation log entries would be created as soon as an integration
        request triggered an effect with a webhook
      operationId: getWebhookActivationLogs
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results by integration request UUID.
        in: query
        name: integrationRequestUuid
        schema:
          type: string
      - description: Filter results by Webhook.
        in: query
        name: webhookId
        schema:
          type: number
      - in: query
        name: applicationId
        schema:
          type: number
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Only return events created before this date.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results where request and response times to return entries
          after parameter value, expected to be an RFC3339 timestamp string.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
          description: OK
      summary: List Webhook activation Log Entries
      tags:
      - management
  /v1/webhook_logs:
    get:
      operationId: getWebhookLogs
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: Filter results by Webhook.
        in: query
        name: webhookId
        schema:
          type: number
      - in: query
        name: applicationId
        schema:
          type: number
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Filter results by request UUID.
        in: query
        name: requestUuid
        schema:
          type: string
      - description: Filter results where request and response times to return entries
          before parameter value, expected to be an RFC3339 timestamp string.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results where request and response times to return entries
          after parameter value, expected to be an RFC3339 timestamp string.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
          description: OK
      summary: List Webhook Log Entries
      tags:
      - management
  /v1/event_types:
    get:
      description: |
        Fetch all event type definitions for your account. Each event type can be
      operationId: getEventTypes
      parameters:
      - description: Filter by one or more application ids separated by comma
        in: query
        name: applicationIds
        schema:
          type: string
      - description: Filter results to event types with the given name. This parameter
          implies `includeOldVersions`.
        in: query
        name: name
        schema:
          type: string
      - description: Include all versions of every event type.
        in: query
        name: includeOldVersions
        schema:
          default: false
          type: boolean
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
          description: OK
      summary: List Event Types
      tags:
      - management
  /v1/users:
    get:
      description: |
        Retrieve all users in your account.
      operationId: getUsers
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
          description: OK
      summary: List Users in your account
      tags:
      - management
  /v1/users/{userId}:
    get:
      description: |
        Retrieves the data (including an invitation code) for a user. Non-admin users can only get themselves.
      operationId: getUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get a single User
      tags:
      - management
  /v1/changes:
    get:
      description: Get list of changes caused by API calls for an account. Only accessible
        for admins.
      operationId: getChanges
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: query
        name: applicationId
        schema:
          type: integer
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the change creation timestamp.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the change creation timestamp.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          When this flag is set, the result will include the total size of the result, across all pages. This might decrease performance on large data sets.
          With this flag set to true, hasMore will be be true whenever there is a next page. totalResultSize will always be zero.
          With this flag set to false, hasMore will always be set to false. totalResultSize will contain the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: When this flag is set to false, the state without the change
          will not be returned. The default value is true.
        in: query
        name: includeOld
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
          description: OK
      summary: Get audit log for an account
      tags:
      - management
  /v1/password_recovery_emails:
    post:
      description: |
        Sends an email with a password recovery link to the email of an existing account.
      operationId: createPasswordRecoveryEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordEmail'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPasswordEmail'
          description: Created
      summary: Request a password reset
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/reset_password:
    post:
      description: |
        Consumes the supplied password reset token and updates the password for
        the associated account.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPassword'
          description: Created
      summary: Reset password
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}:
    get:
      description: |
        Return the details of your companies Talon.One account.
      operationId: getAccount
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
      summary: Get Account Details
      tags:
      - management
  /v1/accounts/{accountId}/analytics:
    get:
      description: |
        Return the analytics of your companies Talon.One account.
      operationId: getAccountAnalytics
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAnalytics'
          description: OK
      summary: Get Account Analytics
      tags:
      - management
  /v1/sessions:
    post:
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParams'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Created
      summary: Create a Session
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/exports:
    get:
      description: |
        Get a list of all past exports
      operationId: getExports
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - in: query
        name: applicationId
        schema:
          type: integer
      - in: query
        name: campaignId
        schema:
          type: integer
      - description: The name of the entity type that was exported.
        in: query
        name: entity
        schema:
          enum:
          - Coupon
          - Effect
          - CustomerSession
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
          description: OK
      summary: Get Exports
      tags:
      - management
  /v1/imports:
    get:
      description: |
        Get a list of all past imports
      operationId: getImports
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: OK
      summary: Get Imports
      tags:
      - management
  /v1/roles:
    get:
      operationId: getAllRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
          description: OK
      summary: Get all roles.
      tags:
      - management
  /v1/roles/{roleId}:
    get:
      operationId: getRole
      parameters:
      - in: path
        name: roleId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
      summary: Get information for the specified role.
      tags:
      - management
components:
  schemas:
    MiscUpdateUserLatestFeature:
      properties:
        latestFeature:
          type: string
      type: object
    ErrorResponse:
      properties:
        message:
          description: A message describing the error.
          type: string
        errors:
          description: An array of individual problems encountered during the request.
          items:
            $ref: '#/components/schemas/APIError'
          type: array
      required:
      - message
      type: object
    APIError:
      properties:
        title:
          description: Short description of the problem.
          type: string
        details:
          description: Longer description of this specific instance of the problem.
          type: string
        source:
          $ref: '#/components/schemas/ErrorSource'
      required:
      - source
      - title
      type: object
    NewFeatureFlags:
      properties:
        loyalty:
          description: Whether the account has access to the loyalty features or not
          type: boolean
        coupons_without_count:
          description: Whether the account queries coupons with or without total result
            size
          type: boolean
        betaEffects:
          description: Whether the account can test beta effects or not
          type: boolean
      type: object
    FeatureFlags:
      description: ""
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        loyalty:
          description: Whether the account has access to the loyalty features or not
          type: boolean
        coupons_without_count:
          description: Whether the account queries coupons with or without total result
            size
          type: boolean
        betaEffects:
          description: Whether the account can test beta effects or not
          type: boolean
      required:
      - accountId
      type: object
    FeatureFlag:
      properties:
        name:
          description: The name for the featureflag
          type: string
        value:
          description: The value for the featureflag
          type: string
        created:
          description: The exact moment this entity was last created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
      required:
      - name
      - value
      type: object
    ErrorSource:
      description: |
        The source of the current error, exactly one of `pointer`, `parameter` or `line` will be defined.
      properties:
        pointer:
          description: Pointer to the path in the payload that caused this error.
          type: string
        parameter:
          description: Query parameter that caused this error.
          type: string
        line:
          description: Line number in uploaded multipart file that caused this error.
            'N/A' if unknown.
          type: string
        resource:
          description: Pointer to the resource that caused this error
          type: string
      type: object
    Entity:
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - created
      - id
      type: object
    MutableEntity:
      properties:
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
      required:
      - modified
      type: object
    AccountEntity:
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
      required:
      - accountId
      type: object
    UserEntity:
      properties:
        userId:
          description: The ID of the account that owns this entity.
          type: integer
      required:
      - userId
      type: object
    EmailEntity:
      properties:
        email:
          description: The email address associated with your account.
          format: email
          type: string
      required:
      - email
      type: object
    ApplicationEntity:
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
      required:
      - applicationId
      type: object
    MultiApplicationEntity:
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          type: array
      required:
      - applicationIds
      type: object
    CampaignEntity:
      properties:
        campaignId:
          description: The ID of the campaign that owns this entity.
          title: Campaign ID
          type: integer
      required:
      - campaignId
      type: object
    ApplicationSessionEntity:
      properties:
        sessionId:
          description: The globally unique Talon.One ID of the session where this
            entity was created.
          type: integer
      required:
      - sessionId
      type: object
    ApplicationCustomerEntity:
      properties:
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          type: integer
      type: object
    IntegrationEntity:
      properties:
        integrationId:
          description: The ID used for this entity in the application system.
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - created
      - integrationId
      type: object
    IntegrationProfileEntity:
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
      type: object
    CouponValue:
      properties:
        value:
          description: The actual coupon code.
          minLength: 4
          title: Coupon Code
          type: string
      type: object
    CouponConstraints:
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
      type: object
    CodeGeneratorSettings:
      example:
        couponPattern: couponPattern
        validCharacters:
        - validCharacters
        - validCharacters
      properties:
        validCharacters:
          description: Set of characters to be used when generating random part of
            code. Defaults to [A-Z, 0-9] (in terms of RegExp).
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern that will be used to generate coupon codes. The character `#` acts as a placeholder and will be replaced by a random character from the `validCharacters` set.
          minLength: 3
          type: string
      required:
      - couponPattern
      - validCharacters
      type: object
    Session:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        userId: 0
        token: token
      properties:
        userId:
          description: The ID of the user of this session
          type: integer
        token:
          description: An opaque session identifier
          type: string
        created:
          description: Unix timestamp indicating when the session was first created.
          format: date-time
          type: string
      required:
      - created
      - token
      - userId
      type: object
    LoginParams:
      description: ""
      example:
        password: password
        email: email
      properties:
        email:
          description: The email address associated with your account.
          format: email
          type: string
        password:
          description: The password for your account.
          type: string
      required:
      - email
      - password
      type: object
    AttributesMandatory:
      description: Arbitrary settings associated with attributes.
      example:
        campaigns:
        - campaigns
        - campaigns
        coupons:
        - coupons
        - coupons
      properties:
        campaigns:
          description: List of mandatory attributes for campaigns.
          items:
            type: string
          type: array
        coupons:
          description: List of mandatory attributes for campaigns.
          items:
            type: string
          type: array
      type: object
    AttributesSettings:
      description: Arbitrary settings associated with attributes.
      example:
        mandatory:
          campaigns:
          - campaigns
          - campaigns
          coupons:
          - coupons
          - coupons
      properties:
        mandatory:
          $ref: '#/components/schemas/AttributesMandatory'
      type: object
    UpdateApplication:
      properties:
        name:
          description: The name of this application.
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        currency:
          description: A string describing a default currency for new customer sessions.
          minLength: 1
          type: string
        caseSensitivity:
          description: A string indicating how should campaigns in this application
            deal with case sensitivity on coupon codes.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          description: Default priority for campaigns created in this application,
            can be one of (universal, stackable, exclusive)
          enum:
          - universal
          - stackable
          - exclusive
          type: string
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
      required:
      - currency
      - name
      - timezone
      type: object
    NewApplication:
      description: ""
      properties:
        name:
          description: The name of this application.
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        currency:
          description: A string describing a default currency for new customer sessions.
          minLength: 1
          type: string
        caseSensitivity:
          description: A string indicating how should campaigns in this application
            deal with case sensitivity on coupon codes.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          description: Default priority for campaigns created in this application,
            can be one of (universal, stackable, exclusive)
          enum:
          - universal
          - stackable
          - exclusive
          type: string
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        key:
          description: Hex key for HMAC-signing API calls as coming from this application
            (16 hex digits)
          pattern: ^[a-fA-F0-9]{16}$
          type: string
      required:
      - currency
      - name
      - timezone
      type: object
    Application:
      description: ""
      example:
        created: 2000-01-23T04:56:07.000+00:00
        timezone: timezone
        description: description
        attributesSettings:
          mandatory:
            campaigns:
            - campaigns
            - campaigns
            coupons:
            - coupons
            - coupons
        caseSensitivity: sensitive
        accountId: 1
        campaignPriority: universal
        loyaltyPrograms:
        - accountID: 5
          defaultValidity: defaultValidity
          allowSubledger: true
          name: name
          description: description
          id: 5
          title: title
          subscribedApplications:
          - 2
          - 2
        - accountID: 5
          defaultValidity: defaultValidity
          allowSubledger: true
          name: name
          description: description
          id: 5
          title: title
          subscribedApplications:
          - 2
          - 2
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        currency: currency
        attributes: '{}'
        id: 6
        limits:
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: The name of this application.
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        currency:
          description: A string describing a default currency for new customer sessions.
          minLength: 1
          type: string
        caseSensitivity:
          description: A string indicating how should campaigns in this application
            deal with case sensitivity on coupon codes.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          description: Default priority for campaigns created in this application,
            can be one of (universal, stackable, exclusive)
          enum:
          - universal
          - stackable
          - exclusive
          type: string
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        loyaltyPrograms:
          description: An array containing all the loyalty programs to which this
            application is subscribed
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
      required:
      - accountId
      - created
      - currency
      - id
      - loyaltyPrograms
      - modified
      - name
      - timezone
      type: object
    NewCampaign:
      example:
        activeRulesetId: 0
        features:
        - coupons
        - coupons
        - coupons
        name: name
        referralSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        description: description
        couponSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes: '{}'
        endTime: 2000-01-23T04:56:07.000+00:00
        state: enabled
        limits:
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        name:
          description: A friendly name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Datetime when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Datetime when the campaign will become in-active.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: ID of Ruleset this campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            type: string
          maxItems: 3
          minItems: 0
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
      required:
      - features
      - limits
      - name
      - state
      - tags
      type: object
    UpdateCampaign:
      example:
        activeRulesetId: 0
        features:
        - coupons
        - coupons
        - coupons
        name: name
        referralSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        description: description
        couponSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes: '{}'
        endTime: 2000-01-23T04:56:07.000+00:00
        state: enabled
        limits:
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        name:
          description: A friendly name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Datetime when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Datetime when the campaign will become in-active.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: ID of Ruleset this campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            type: string
          maxItems: 3
          minItems: 0
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
      required:
      - features
      - limits
      - name
      - tags
      type: object
    Campaign:
      description: ""
      example:
        discountCount: 1
        description: description
        features:
        - coupons
        - coupons
        - coupons
        couponSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 2
        state: enabled
        limits:
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
        - entities:
          - Coupon
          - Coupon
          limit: 0.20271230230023218
          action: redeemCoupon
        activeRulesetId: 3
        updatedBy: updatedBy
        created: 2000-01-23T04:56:07.000+00:00
        couponRedemptionCount: 4
        userId: 9
        couponCreationCount: 1
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
        discountEffectCount: 1
        createdBy: createdBy
        name: name
        referralSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        attributes: '{}'
        lastActivity: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        applicationId: 7
        referralRedemptionCount: 7
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: A friendly name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Datetime when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Datetime when the campaign will become in-active.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: ID of Ruleset this campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            type: string
          maxItems: 3
          minItems: 0
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        couponRedemptionCount:
          description: Number of coupons redeemed in the campaign.
          type: integer
        referralRedemptionCount:
          description: Number of referral codes redeemed in the campaign.
          type: integer
        discountCount:
          description: Total amount of discounts redeemed in the campaign.
          type: integer
        discountEffectCount:
          description: Total number of times discounts were redeemed in this campaign.
          type: integer
        couponCreationCount:
          description: Total number of coupons created by rules in this campaign.
          type: integer
        lastActivity:
          description: Timestamp of the most recent event received by this campaign.
          format: date-time
          type: string
        updated:
          description: Timestamp of the most recent update to the campaign or any
            of its elements.
          format: date-time
          type: string
        createdBy:
          description: Name of the user who created this campaign if available.
          type: string
        updatedBy:
          description: Name of the user who last updated this campaign if available.
          type: string
      required:
      - applicationId
      - created
      - description
      - features
      - id
      - limits
      - name
      - state
      - tags
      - userId
      type: object
    NewRuleset:
      example:
        rbVersion: rbVersion
        bindings:
        - expression:
          - '{}'
          - '{}'
          name: name
        - expression:
          - '{}'
          - '{}'
          name: name
        activate: true
        rules:
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
          - expression:
            - '{}'
            - '{}'
            name: name
          description: description
          title: title
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
          - expression:
            - '{}'
            - '{}'
            name: name
          description: description
          title: title
      properties:
        rules:
          description: Set of rules to apply.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        rbVersion:
          description: A string indicating which version of the rulebuilder was used
            to create this ruleset.
          type: string
        activate:
          description: A boolean indicating whether this newly created ruleset should
            also be activated for the campaign owns it
          type: boolean
      required:
      - bindings
      - rules
      type: object
    Ruleset:
      description: ""
      example:
        rbVersion: rbVersion
        created: 2000-01-23T04:56:07.000+00:00
        campaignId: 1
        bindings:
        - expression:
          - '{}'
          - '{}'
          name: name
        - expression:
          - '{}'
          - '{}'
          name: name
        activatedAt: 2000-01-23T04:56:07.000+00:00
        activate: true
        rules:
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
          - expression:
            - '{}'
            - '{}'
            name: name
          description: description
          title: title
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
          - expression:
            - '{}'
            - '{}'
            name: name
          description: description
          title: title
        id: 6
        userId: 5
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          title: Campaign ID
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        rules:
          description: Set of rules to apply.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        rbVersion:
          description: A string indicating which version of the rulebuilder was used
            to create this ruleset.
          type: string
        activate:
          description: A boolean indicating whether this newly created ruleset should
            also be activated for the campaign owns it
          type: boolean
        activatedAt:
          description: Timestamp indicating when this Ruleset was activated.
          format: date-time
          type: string
      required:
      - bindings
      - campaignId
      - created
      - id
      - rules
      - userId
      type: object
    Binding:
      example:
        expression:
        - '{}'
        - '{}'
        name: name
      properties:
        name:
          description: A descriptive name for the value to be bound.
          type: string
        expression:
          description: A Talang expression that will be evaluated and its result attached
            to the name of the binding.
          items:
            properties: {}
            type: object
          type: array
      required:
      - expression
      - name
      type: object
    Rule:
      example:
        condition:
        - '{}'
        - '{}'
        effects:
        - '{}'
        - '{}'
        bindings:
        - expression:
          - '{}'
          - '{}'
          name: name
        - expression:
          - '{}'
          - '{}'
          name: name
        description: description
        title: title
      properties:
        title:
          description: A short description of the rule.
          type: string
        description:
          description: A longer, more detailed description of the rule.
          type: string
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        condition:
          description: A Talang expression that will be evaluated in the context of
            the given event.
          items:
            properties: {}
            type: object
          minItems: 1
          type: array
        effects:
          description: An array of effectful Talang expressions in arrays that will
            be evaluated when a rule matches.
          items:
            properties: {}
            type: object
          type: array
      required:
      - condition
      - effects
      - title
      type: object
    LimitConfig:
      example:
        entities:
        - Coupon
        - Coupon
        limit: 0.20271230230023218
        action: redeemCoupon
      properties:
        action:
          description: The limitable action to which this limit will be applied
          enum:
          - redeemCoupon
          - redeemReferral
          - setDiscount
          - createCoupon
          - setDiscountEffect
          type: string
        limit:
          description: The value to set for the limit
          minimum: 0
          type: number
        entities:
          description: The entities that make the address of this limit
          items:
            enum:
            - Coupon
            - Referral
            - Profile
            - Identifier
            type: string
          type: array
      required:
      - action
      - entities
      - limit
      type: object
    CampaignSet:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        version:
          description: Version of the campaign set
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignSetBranchNode'
      required:
      - applicationId
      - created
      - id
      - set
      - version
      type: object
    CampaignSetNode:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    CampaignSetBranchNode:
      properties:
        type:
          description: Indicates the node type
          enum:
          - SET
          type: string
        name:
          description: Name of the set
          type: string
        operator:
          description: How does the set operates on its elements
          enum:
          - ALL
          - FIRST
          type: string
        elements:
          description: Child elements of this set
          items:
            $ref: '#/components/schemas/CampaignSetNode'
          type: array
      required:
      - elements
      - name
      - operator
      - type
      type: object
    CampaignSetLeafNode:
      properties:
        type:
          description: Indicates the node type
          enum:
          - CAMPAIGN
          type: string
        campaignId:
          description: ID of the campaign
          type: integer
      required:
      - campaignId
      - type
      type: object
    NewCampaignSet:
      description: ""
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        version:
          description: Version of the campaign set
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignSetBranchNode'
      required:
      - applicationId
      - set
      - version
      type: object
    NewReferral:
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        friendProfileIntegrationId: friendProfileIntegrationId
        campaignId: 0
        advocateProfileIntegrationId: advocateProfileIntegrationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        campaignId:
          description: ID of the campaign from which the referral received the referral
            code.
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationId:
          description: The Integration Id of the Advocate's Profile
          title: Advocate's Profile id
          type: string
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile
          title: Friend's Profile ID
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
      required:
      - advocateProfileIntegrationId
      - campaignId
      type: object
    Referral:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        code: code
        friendProfileIntegrationId: friendProfileIntegrationId
        created: 2000-01-23T04:56:07.000+00:00
        campaignId: 6
        usageLimit: 0
        id: 0
        usageCounter: 1
        advocateProfileIntegrationId: advocateProfileIntegrationId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        campaignId:
          description: ID of the campaign from which the referral received the referral
            code.
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationId:
          description: The Integration Id of the Advocate's Profile
          title: Advocate's Profile id
          type: string
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile
          title: Friend's Profile ID
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
        code:
          description: The actual referral code.
          minLength: 4
          title: Referral code
          type: string
        usageCounter:
          description: The number of times this referral code has been successfully
            used.
          title: Referral code Usages
          type: integer
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          minimum: 0
          title: Referral code Usage Limit
          type: integer
      required:
      - advocateProfileIntegrationId
      - campaignId
      - code
      - created
      - id
      - usageCounter
      - usageLimit
      type: object
    AttributeQuery:
      type: object
    CouponSearch:
      example:
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a coupon. All provided attributes
            will be exactly matched against attributes
          properties: {}
          type: object
      required:
      - attributes
      type: object
    CampaignSearch:
      example:
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a campaign. All provided attributes
            will be exactly matched against campaign attributes
          properties: {}
          type: object
      required:
      - attributes
      type: object
    CampaignCopy:
      example:
        name: name
        description: description
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        applicationIds:
        - applicationIds
        - applicationIds
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        name:
          description: Name of the copied campaign (Defaults to "Copy of original
            campaign name")
          type: string
        applicationIds:
          description: Application IDs of the applications to which a campaign should
            be copied to
          items:
            type: string
          type: array
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Datetime when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Datetime when the campaign will become in-active.
          format: date-time
          type: string
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
      required:
      - applicationIds
      type: object
    NewCoupons:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        recipientIntegrationId: recipientIntegrationId
        uniquePrefix: uniquePrefix
        couponPattern: couponPattern
        validCharacters:
        - validCharacters
        - validCharacters
        usageLimit: 80082
        numberOfCoupons: 1
        attributes: '{}'
        discountLimit: 602745.015561422
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        validCharacters:
          description: Set of characters to be used when generating random part of
            code. Defaults to [A-Z, 0-9] (in terms of RegExp).
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern that will be used to generate coupon codes. The character `#` acts as a placeholder and will be replaced by a random character from the `validCharacters` set.
          minLength: 3
          type: string
        numberOfCoupons:
          description: The number of new coupon codes to generate for the campaign.
            Must be at least 1.
          type: integer
        uniquePrefix:
          description: A unique prefix to prepend to all generated coupons.
          title: Coupon code unique prefix
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        recipientIntegrationId:
          description: The integration ID for this coupon's beneficiary's profile
          title: Receiving customer profile integration ID
          type: string
      required:
      - couponPattern
      - numberOfCoupons
      - usageLimit
      - validCharacters
      type: object
    UpdateCoupon:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        recipientIntegrationId: recipientIntegrationId
        usageLimit: 80082
        attributes: '{}'
        discountLimit: 602745.015561422
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        recipientIntegrationId:
          description: The integration ID for this coupon's beneficiary's profile
          title: Receiving customer profile integration ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
      type: object
    UpdateCouponBatch:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        usageLimit: 80082
        attributes: '{}'
        batchID: batchID
        discountLimit: 602745.015561422
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        batchID:
          description: The id of the batch the coupon belongs to.
          title: Batch ID
          type: string
      required:
      - batchID
      type: object
    Coupon:
      description: ""
      example:
        recipientIntegrationId: recipientIntegrationId
        created: 2000-01-23T04:56:07.000+00:00
        campaignId: 6
        usageLimit: 594488
        referralId: 0
        usageCounter: 3
        batchId: batchId
        discountCounter: 3.0937452626664474
        expiryDate: 2000-01-23T04:56:07.000+00:00
        importId: 7
        reservation: true
        attributes: '{}'
        id: 6
        value: value
        discountLimit: 670401.2593930737
        startDate: 2000-01-23T04:56:07.000+00:00
        discountRemainder: 7.143538047012306
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          title: Campaign ID
          type: integer
        value:
          description: The actual coupon code.
          minLength: 4
          title: Coupon Code
          type: string
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        usageCounter:
          description: The number of times this coupon has been successfully used.
          title: Number of coupon usages
          type: integer
        discountCounter:
          description: The amount of discounts given on rules redeeming this coupon.
            Only usable if a coupon discount budget was set for this coupon.
          title: Discounts Given
          type: number
        discountRemainder:
          description: The remaining discount this coupon can give.
          title: Coupon Discount Remainder
          type: number
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          title: Attributes of coupon
          type: object
        referralId:
          description: The integration ID of the referring customer (if any) for whom
            this coupon was created as an effect.
          title: Advocate ID
          type: integer
        recipientIntegrationId:
          description: The Integration ID of the customer that is allowed to redeem
            this coupon.
          title: Recipient ID
          type: string
        importId:
          description: The ID of the Import which created this coupon.
          title: Import ID
          type: integer
        reservation:
          description: This value controls what reservations mean to a coupon. If
            set to true the coupon reservation is used to mark it as a favourite,
            if set to false the coupon reservation is used as a requirement of usage.
            This value defaults to true if not specified.
          title: Reservation Status
          type: boolean
        batchId:
          description: The id of the batch the coupon belongs to.
          title: Batch ID
          type: string
      required:
      - campaignId
      - created
      - id
      - usageCounter
      - usageLimit
      - value
      type: object
    CampaignAnalytics:
      description: ""
      example:
        date: 2000-01-23T04:56:07.000+00:00
        couponRolledbackRedemptions: 1
        totalCouponRolledbackRedemptions: 1
        campaignRefundedDiscounts: 9.301444243932576
        campaignFreeItems: 2
        totalCampaignFreeItems: 4
        totalCampaignRefundedDiscounts: 3.616076749251911
        couponRedemptions: 7
        totalCampaignDiscountCosts: 7.061401241503109
        referralRedemptions: 6
        totalCampaignRevenue: 1.4658129805029452
        campaignRevenue: 6.027456183070403
        campaignDiscountCosts: 2.3021358869347655
        totalCampaignRefund: 5.637376656633329
        totalCouponsCreated: 4
        totalCouponRedemptions: 1
        totalReferralRedemptions: 7
        couponsCreated: 1
        referralsCreated: 5
        totalReferralsCreated: 9
        campaignRefund: 5.962133916683182
      properties:
        date:
          format: date-time
          type: string
        campaignRevenue:
          description: Amount of revenue in this campaign (for coupon or discount
            sessions).
          type: number
        totalCampaignRevenue:
          description: Amount of revenue in this campaign since it began (for coupon
            or discount sessions).
          type: number
        campaignRefund:
          description: Amount of refunds in this campaign (for coupon or discount
            sessions).
          type: number
        totalCampaignRefund:
          description: Amount of refunds in this campaign since it began (for coupon
            or discount sessions).
          type: number
        campaignDiscountCosts:
          description: Amount of cost caused by discounts given in the campaign.
          type: number
        totalCampaignDiscountCosts:
          description: Amount of cost caused by discounts given in the campaign since
            it began.
          type: number
        campaignRefundedDiscounts:
          description: Amount of discounts rolledback due to refund in the campaign.
          type: number
        totalCampaignRefundedDiscounts:
          description: Amount of discounts rolledback due to refund in the campaign
            since it began.
          type: number
        campaignFreeItems:
          description: Amount of free items given in the campaign.
          type: integer
        totalCampaignFreeItems:
          description: Amount of free items given in the campaign since it began.
          type: integer
        couponRedemptions:
          description: Number of coupon redemptions in the campaign.
          type: integer
        totalCouponRedemptions:
          description: Number of coupon redemptions in the campaign since it began.
          type: integer
        couponRolledbackRedemptions:
          description: Number of coupon redemptions that have been rolled back (due
            to canceling closed session) in the campaign.
          type: integer
        totalCouponRolledbackRedemptions:
          description: Number of coupon redemptions that have been rolled back (due
            to canceling closed session) in the campaign since it began.
          type: integer
        referralRedemptions:
          description: Number of referral redemptions in the campaign.
          type: integer
        totalReferralRedemptions:
          description: Number of referral redemptions in the campaign since it began.
          type: integer
        couponsCreated:
          description: Number of coupons created in the campaign by the rule engine.
          type: integer
        totalCouponsCreated:
          description: Number of coupons created in the campaign by the rule engine
            since it began.
          type: integer
        referralsCreated:
          description: Number of referrals created in the campaign by the rule engine.
          type: integer
        totalReferralsCreated:
          description: Number of referrals created in the campaign by the rule engine
            since it began.
          type: integer
      required:
      - campaignDiscountCosts
      - campaignFreeItems
      - campaignRefund
      - campaignRefundedDiscounts
      - campaignRevenue
      - couponRedemptions
      - couponRolledbackRedemptions
      - couponsCreated
      - date
      - referralRedemptions
      - referralsCreated
      - totalCampaignDiscountCosts
      - totalCampaignFreeItems
      - totalCampaignRefund
      - totalCampaignRefundedDiscounts
      - totalCampaignRevenue
      - totalCouponRedemptions
      - totalCouponRolledbackRedemptions
      - totalCouponsCreated
      - totalReferralRedemptions
      - totalReferralsCreated
      type: object
    ApplicationApiHealth:
      description: Report of health of the API connection of an application
      example:
        summary: OK
        lastUsed: 2000-01-23T04:56:07.000+00:00
      properties:
        summary:
          description: One-word summary of the health of the API connection of an
            application
          enum:
          - OK
          - WARNING
          - ERROR
          - CRITICAL
          - NONE
          type: string
        lastUsed:
          description: time of last request relevant to the API health test
          format: date-time
          type: string
      required:
      - lastUsed
      - summary
      type: object
    AccessLogEntry:
      description: Log of application accesses
      example:
        method: method
        requestPayload: requestPayload
        responsePayload: responsePayload
        requestUri: requestUri
        time: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        status: 6
      properties:
        uuid:
          description: UUID reference of request
          type: string
        status:
          description: HTTP status code of response
          type: integer
        method:
          description: HTTP method of request
          type: string
        requestUri:
          description: target URI of request
          type: string
        time:
          description: timestamp of request
          format: date-time
          type: string
        requestPayload:
          description: payload of request
          type: string
        responsePayload:
          description: payload of response
          type: string
      required:
      - method
      - requestPayload
      - requestUri
      - responsePayload
      - status
      - time
      - uuid
      type: object
    WebhookLogEntry:
      description: Log of webhook api calls
      example:
        requestTime: 2000-01-23T04:56:07.000+00:00
        request: request
        webhookId: 6
        response: response
        responseTime: 2000-01-23T04:56:07.000+00:00
        integrationRequestUuid: integrationRequestUuid
        id: id
        applicationId: 1
        url: url
        status: 5
      properties:
        id:
          description: UUID reference of the webhook request
          type: string
        integrationRequestUuid:
          description: UUID reference of the integration request linked to this webhook
            request
          type: string
        webhookId:
          description: ID of the webhook that triggered the request
          type: integer
        applicationId:
          description: ID of the application that triggered the webhook
          type: integer
        url:
          description: Target url of request
          type: string
        request:
          description: Request message
          type: string
        response:
          description: Response message
          type: string
        status:
          description: HTTP status code of response
          type: integer
        requestTime:
          description: Timestamp of request
          format: date-time
          type: string
        responseTime:
          description: Timestamp of response
          format: date-time
          type: string
      required:
      - id
      - integrationRequestUuid
      - request
      - requestTime
      - url
      - webhookId
      type: object
    WebhookActivationLogEntry:
      description: Log of activated webhooks
      example:
        webhookId: 6
        campaignId: 5
        created: 2000-01-23T04:56:07.000+00:00
        integrationRequestUuid: integrationRequestUuid
        applicationId: 1
      properties:
        integrationRequestUuid:
          description: UUID reference of the integration request that triggered the
            effect with the webhook
          type: string
        webhookId:
          description: ID of the webhook that triggered the request
          type: integer
        applicationId:
          description: ID of the application that triggered the webhook
          type: integer
        campaignId:
          description: ID of the campaign that triggered the webhook
          type: integer
        created:
          description: Timestamp of request
          format: date-time
          type: string
      required:
      - applicationId
      - campaignId
      - created
      - integrationRequestUuid
      - webhookId
      type: object
    User:
      description: ""
      example:
        releaseUpdate: true
        created: 2000-01-23T04:56:07.000+00:00
        roles:
        - 5
        - 5
        accountId: 1
        applicationNotificationSubscriptions: '{}'
        inviteToken: inviteToken
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        id: 6
        state: invited
        authMethod: authMethod
        latestFeature: latestFeature
        email: email
        policy: policy
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        email:
          description: The email address associated with your account.
          format: email
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        inviteToken:
          description: Invite token, empty if the user as already accepted their invite.
          type: string
        state:
          description: Current user state.
          enum:
          - invited
          - active
          - deactivated
          type: string
        name:
          description: Full name
          type: string
        policy:
          description: A blob of ACL JSON
          format: acl
          type: string
        releaseUpdate:
          description: Update the user via email
          type: boolean
        latestFeature:
          description: Latest feature the user has been notified.
          type: string
        roles:
          description: Contains a list of all roles the user is a member of
          items:
            type: integer
          type: array
        applicationNotificationSubscriptions:
          properties: {}
          type: object
        authMethod:
          description: The Authentication method for this user
          type: string
      required:
      - accountId
      - created
      - email
      - id
      - inviteToken
      - modified
      - name
      - policy
      - releaseUpdate
      - state
      type: object
    NewInvitation:
      description: Parameters for inviting a new user
      properties:
        name:
          description: Name of the user being invited.
          type: string
        email:
          format: email
          type: string
        acl:
          description: a blob of acl json
          type: string
        roles:
          description: An array of roleIDs to assign the new user to
          items:
            type: integer
          type: array
      required:
      - acl
      - email
      type: object
    Change:
      description: ""
      example:
        new: '{}'
        created: 2000-01-23T04:56:07.000+00:00
        old: '{}'
        id: 6
        userId: 1
        entity: entity
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: API endpoint on which the change was initiated.
          type: string
        old:
          description: Resource before the change occurred.
          properties: {}
          type: object
        new:
          description: Resource after the change occurred.
          properties: {}
          type: object
      required:
      - created
      - entity
      - id
      - userId
      type: object
    LoyaltyPoints:
      description: Points to add or deduct
      example:
        name: name
        subLedgerID: subLedgerID
        expiryDuration: expiryDuration
        points: 0.8008281904610115
      properties:
        points:
          description: Amount of loyalty points
          type: number
        name:
          description: Allows to specify a name for the addition or deduction
          type: string
        expiryDuration:
          description: Indicates the duration after which the added loyalty points
            should expire. The format is a number followed by one letter indicating
            the unit, like '1h' or '40m' or '30d'.
          type: string
        subLedgerID:
          description: This specifies if we are adding loyalty points to the main
            ledger or a subledger
          type: string
      required:
      - points
      type: object
    LoyaltyProgram:
      description: A Loyalty Program
      example:
        accountID: 5
        defaultValidity: defaultValidity
        allowSubledger: true
        name: name
        description: description
        id: 5
        title: title
        subscribedApplications:
        - 2
        - 2
      properties:
        id:
          description: The ID of loyalty program.
          type: integer
        accountID:
          description: The ID of the Talon.One account that owns this program.
          type: integer
        name:
          description: The internal name for the Loyalty Program.
          type: string
        title:
          description: The display title for the Loyalty Program.
          type: string
        description:
          description: Description of our Loyalty Program.
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m' or '30d'.
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program
          type: boolean
      required:
      - accountID
      - allowSubledger
      - defaultValidity
      - description
      - id
      - name
      - subscribedApplications
      - title
      type: object
    NewLoyaltyProgram:
      description: A new loyalty program
      properties:
        name:
          description: The internal name for the Loyalty Program. This is an immutable
            value.
          type: string
        title:
          description: The display title for the Loyalty Program.
          type: string
        description:
          description: Description of our Loyalty Program.
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m' or '30d'.
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program
          type: boolean
      required:
      - allowSubledger
      - defaultValidity
      - name
      - title
      type: object
    UpdateLoyaltyProgram:
      description: Update Loyalty Program
      properties:
        title:
          description: The display title for the Loyalty Program.
          type: string
        description:
          description: Description of our Loyalty Program.
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m' or '30d'.
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program
          type: boolean
      type: object
    LoyaltyLedgerEntry:
      description: A single row of the ledger, describing one addition or deduction.
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        eventID: 1
        amount: 5.962133916683182
        customerProfileID: customerProfileID
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        subLedgerID: subLedgerID
        customerSessionID: customerSessionID
        type: addition
        userID: 5
        programID: 6
      properties:
        created:
          format: date-time
          type: string
        programID:
          type: integer
        customerProfileID:
          type: string
        customerSessionID:
          type: string
        eventID:
          type: integer
        type:
          enum:
          - addition
          - subtraction
          type: string
        amount:
          type: number
        expiryDate:
          format: date-time
          type: string
        name:
          description: A name referencing the condition or effect that added this
            entry, or the specific name provided in an API call.
          type: string
        subLedgerID:
          description: This specifies if we are adding loyalty points to the main
            ledger or a subledger
          type: string
        userID:
          description: This is the ID of the user who created this entry, if the addition
            or subtraction was done manually.
          type: integer
      required:
      - amount
      - created
      - customerProfileID
      - name
      - programID
      - subLedgerID
      - type
      type: object
    LoyaltyLedger:
      description: Ledger of Balance in Loyalty Program for a Customer
      example:
        ledger:
          total: 0.8008281904610115
          expiringPoints:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 1
            amount: 5.962133916683182
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: addition
            userID: 5
            programID: 6
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 1
            amount: 5.962133916683182
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: addition
            userID: 5
            programID: 6
          transactions:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 1
            amount: 5.962133916683182
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: addition
            userID: 5
            programID: 6
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 1
            amount: 5.962133916683182
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: addition
            userID: 5
            programID: 6
        subLedgers:
          key:
            total: 0.8008281904610115
            expiringPoints:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 1
              amount: 5.962133916683182
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: addition
              userID: 5
              programID: 6
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 1
              amount: 5.962133916683182
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: addition
              userID: 5
              programID: 6
            transactions:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 1
              amount: 5.962133916683182
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: addition
              userID: 5
              programID: 6
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 1
              amount: 5.962133916683182
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: addition
              userID: 5
              programID: 6
      properties:
        ledger:
          $ref: '#/components/schemas/LoyaltySubLedger'
        subLedgers:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltySubLedger'
          description: A map containing a list of all loyalty subledger balances
          type: object
      required:
      - ledger
      type: object
    LoyaltySubLedger:
      description: Ledger of Balance in Loyalty Program for a Customer
      example:
        total: 0.8008281904610115
        expiringPoints:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 1
          amount: 5.962133916683182
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: addition
          userID: 5
          programID: 6
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 1
          amount: 5.962133916683182
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: addition
          userID: 5
          programID: 6
        transactions:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 1
          amount: 5.962133916683182
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: addition
          userID: 5
          programID: 6
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 1
          amount: 5.962133916683182
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: addition
          userID: 5
          programID: 6
      properties:
        total:
          title: Current Balance
          type: number
        transactions:
          description: Transactions contains a list of all events that have happened
            such as additions, subtractions and expiries
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        expiringPoints:
          description: ExpiringPoints contains a list of all points that will expiry
            and when
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
      required:
      - total
      type: object
    Loyalty:
      description: Customer specific information about loyalty points.
      example:
        programs:
          key:
            ledger:
              currentBalance: 2.8841621266687802
            subLedgers:
              key:
                currentBalance: 2.8841621266687802
            name: name
            title: title
      properties:
        programs:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltyProgramLedgers'
          description: A map holding information about the loyalty programs balance
          title: Customer's current loyalty program balance.
          type: object
      required:
      - programs
      type: object
    LoyaltyProgramLedgers:
      description: Customer specific information about loyalty points.
      example:
        ledger:
          currentBalance: 2.8841621266687802
        subLedgers:
          key:
            currentBalance: 2.8841621266687802
        name: name
        title: title
      properties:
        title:
          description: Visible name of loyalty program
          type: string
        name:
          description: Internal name of loyalty program
          type: string
        ledger:
          $ref: '#/components/schemas/LoyaltyProgramBalance'
        subLedgers:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltyProgramBalance'
          description: A map containing a list of all loyalty subledger balances
          type: object
      required:
      - ledger
      - name
      - title
      type: object
    LoyaltyProgramBalance:
      description: The balance in a Loyalty Program for some Customer.
      example:
        currentBalance: 2.8841621266687802
      properties:
        currentBalance:
          title: Current Balance
          type: number
      required:
      - currentBalance
      type: object
    CustomerProfileSearchQuery:
      properties:
        attributes:
          description: Properties to match against a customer profile. All provided
            attributes will be exactly matched against profile attributes
          properties: {}
          type: object
        integrationIDs:
          items:
            type: string
          type: array
        profileIDs:
          items:
            type: integer
          type: array
      type: object
    ApplicationCustomerSearch:
      example:
        integrationIDs:
        - integrationIDs
        - integrationIDs
        profileIDs:
        - 0
        - 0
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a customer profile. All provided
            attributes will be exactly matched against profile attributes
          properties: {}
          type: object
        integrationIDs:
          items:
            type: string
          type: array
        profileIDs:
          items:
            type: integer
          type: array
      type: object
    NewCustomerProfile:
      example:
        attributes: '{}'
      properties:
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
      type: object
    CustomerProfile:
      description: ""
      example:
        accountId: 1
        closedSessions: 1
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: integrationId
        attributes: '{}'
        totalSales: 6.84685269835264
        lastActivity: 2000-01-23T04:56:07.000+00:00
        loyaltyMemberships:
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 7
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 7
      properties:
        integrationId:
          description: The ID used for this entity in the application system.
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        accountId:
          description: The ID of the Talon.One account that owns this profile.
          title: Profile belongs to Account
          type: integer
        closedSessions:
          description: The total amount of closed sessions by a customer. A closed
            session is a successful purchase.
          title: Closed sessions
          type: integer
        totalSales:
          description: Sum of all purchases made by this customer
          title: Total Sales
          type: number
        loyaltyMemberships:
          description: A list of loyalty programs joined by the customer
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          title: Loyalty programed joined
          type: array
        lastActivity:
          description: Timestamp of the most recent event received from this customer
          format: date-time
          title: Last activity of customer
          type: string
      required:
      - accountId
      - attributes
      - closedSessions
      - created
      - integrationId
      - lastActivity
      - totalSales
      type: object
    CustomerProfileUpdate:
      example:
        customerProfile:
          accountId: 1
          closedSessions: 1
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 6.84685269835264
          lastActivity: 2000-01-23T04:56:07.000+00:00
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
      properties:
        customerProfile:
          $ref: '#/components/schemas/CustomerProfile'
      required:
      - customerProfile
      type: object
    CustomerInventory:
      example:
        coupons:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        referrals:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        profile:
          accountId: 1
          closedSessions: 1
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 6.84685269835264
          lastActivity: 2000-01-23T04:56:07.000+00:00
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
      properties:
        profile:
          $ref: '#/components/schemas/CustomerProfile'
        referrals:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
        coupons:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
      type: object
    NewCustomerSession:
      description: ""
      example:
        total: 0.8008281904610115
        referral: referral
        coupon: coupon
        profileId: profileId
        identifiers:
        - identifiers
        - identifiers
        attributes: '{}'
        state: open
        cartItems:
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        coupon:
          description: Any coupon code entered.
          title: Coupon entered in session
          type: string
        referral:
          description: Any referral code entered.
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. All sessions must
            start in the "open" state, after which valid transitions are...

            1. open -> closed
            2. open -> cancelled
            3. closed -> cancelled
          enum:
          - open
          - closed
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Items in customer's cart
          type: array
        identifiers:
          description: Identifiers for the customer, this can be used for limits on
            values such as device ID.
          items:
            type: string
          type: array
        total:
          description: The total sum of the cart in one session.
          title: Session Total
          type: number
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
      type: object
    NewCustomerSessionV2:
      description: ""
      example:
        couponCodes:
        - couponCodes
        - couponCodes
        additionalCosts:
          key:
            price: 6.027456183070403
        profileId: profileId
        identifiers:
        - identifiers
        - identifiers
        referralCode: referralCode
        attributes: '{}'
        state: open
        cartItems:
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        couponCodes:
          description: Any coupon codes entered.
          items:
            type: string
          title: Coupons entered in session
          type: array
        referralCode:
          description: Any referral code entered.
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. All sessions must
            start in the "open" state, after which valid transitions are...

            1. open -> closed
            2. open -> cancelled
            3. closed -> cancelled
          enum:
          - open
          - closed
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: All items the customer will be purchasing in this session
          items:
            $ref: '#/components/schemas/CartItem'
          title: Customer session's cart items
          type: array
        additionalCosts:
          additionalProperties:
            $ref: '#/components/schemas/AdditionalCost'
          description: Any costs associated with the session that can not be explicitly
            attributed to cart items. Examples include shipping costs and service
            fees.
          type: object
        identifiers:
          description: Identifiers for the customer, this can be used for limits on
            values such as device ID.
          items:
            type: string
          type: array
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
      type: object
    CustomerAnalytics:
      description: ""
      example:
        freeItems: 1
        acceptedCoupons: 0
        totalDiscounts: 7.061401241503109
        totalDiscountedOrders: 5
        totalOrders: 5
        totalRevenue: 2.3021358869347655
        createdCoupons: 6
      properties:
        acceptedCoupons:
          description: Total accepted coupons for this customer
          type: integer
        createdCoupons:
          description: Total created coupons for this customer
          type: integer
        freeItems:
          description: Total free items given to this customer
          type: integer
        totalOrders:
          description: Total orders made by this customer
          type: integer
        totalDiscountedOrders:
          description: Total orders made by this customer that had a discount
          type: integer
        totalRevenue:
          description: Total Revenue across all closed sessions
          type: number
        totalDiscounts:
          description: The sum of discounts that were given across all closed sessions
          type: number
      required:
      - acceptedCoupons
      - createdCoupons
      - freeItems
      - totalDiscountedOrders
      - totalDiscounts
      - totalOrders
      - totalRevenue
      type: object
    CustomerActivityReport:
      description: ""
      example:
        couponUseAttempts: 5
        created: 2000-01-23T04:56:07.000+00:00
        totalOrdersNoCoupon: 3
        integrationId: integrationId
        couponRedemptions: 1
        couponFailedAttempts: 5
        accruedRevenue: 7.061401241503109
        name: name
        customerId: 6
        lastActivity: 2000-01-23T04:56:07.000+00:00
        totalOrders: 9
        campaignName: campaignName
        accruedDiscounts: 2.3021358869347655
      properties:
        integrationId:
          description: The ID used for this entity in the application system.
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        name:
          description: The name for this customer profile.
          type: string
        customerId:
          description: The internal Talon.One ID of the customer.
          type: integer
        lastActivity:
          description: The last activity of the customer.
          format: date-time
          type: string
        couponRedemptions:
          description: Number of coupon redemptions in all customer campaigns.
          type: integer
        couponUseAttempts:
          description: Number of coupon use attempts in all customer campaigns.
          type: integer
        couponFailedAttempts:
          description: Number of failed coupon use attempts in all customer campaigns.
          type: integer
        accruedDiscounts:
          description: Number of accrued discounts in all customer campaigns.
          type: number
        accruedRevenue:
          description: Amount of accrued revenue in all customer campaigns.
          type: number
        totalOrders:
          description: Number of orders in all customer campaigns.
          type: integer
        totalOrdersNoCoupon:
          description: Number of orders without coupon used in all customer campaigns.
          type: integer
        campaignName:
          description: The name of the campaign this customer belongs to.
          type: string
      required:
      - accruedDiscounts
      - accruedRevenue
      - campaignName
      - couponFailedAttempts
      - couponRedemptions
      - couponUseAttempts
      - created
      - customerId
      - integrationId
      - name
      - totalOrders
      - totalOrdersNoCoupon
      type: object
    CustomerSession:
      description: ""
      example:
        coupon: coupon
        created: 2000-01-23T04:56:07.000+00:00
        identifiers:
        - identifiers
        - identifiers
        integrationId: integrationId
        total: 7.386281948385884
        referral: referral
        discounts:
          key: 1.2315135367772556
        profileId: profileId
        attributes: '{}'
        state: open
        applicationId: 0
        cartItems:
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
        firstSession: true
      properties:
        integrationId:
          description: The ID used for this entity in the application system.
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        coupon:
          description: Any coupon code entered.
          title: Coupon entered in session
          type: string
        referral:
          description: Any referral code entered.
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. All sessions must
            start in the "open" state, after which valid transitions are...

            1. open -> closed
            2. open -> cancelled
            3. closed -> cancelled
          enum:
          - open
          - closed
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Items in customer's cart
          type: array
        identifiers:
          description: Identifiers for the customer, this can be used for limits on
            values such as device ID.
          items:
            type: string
          type: array
        total:
          description: The total sum of the cart in one session.
          title: Session Total
          type: number
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
        firstSession:
          description: Indicates whether this is the first session for the customer's
            profile. Will always be true for anonymous sessions.
          title: First session ever?
          type: boolean
        discounts:
          additionalProperties:
            type: number
          description: A map of labelled discount values, values will be in the same
            currency as the application associated with the session.
          title: Customer's current discounts
          type: object
      required:
      - applicationId
      - attributes
      - cartItems
      - coupon
      - created
      - discounts
      - firstSession
      - integrationId
      - profileId
      - referral
      - state
      - total
      type: object
    CustomerSessionV2:
      description: ""
      example:
        couponCodes:
        - couponCodes
        - couponCodes
        created: 2000-01-23T04:56:07.000+00:00
        identifiers:
        - identifiers
        - identifiers
        integrationId: integrationId
        total: 1.4658129805029452
        additionalCosts:
          key:
            price: 6.027456183070403
        additionalCostTotal: 5.637376656633329
        profileId: profileId
        referralCode: referralCode
        attributes: '{}'
        state: open
        applicationId: 0
        cartItems:
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
        firstSession: true
        cartItemTotal: 5.962133916683182
      properties:
        integrationId:
          description: The ID used for this entity in the application system.
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        couponCodes:
          description: Any coupon codes entered.
          items:
            type: string
          title: Coupons entered in session
          type: array
        referralCode:
          description: Any referral code entered.
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. All sessions must
            start in the "open" state, after which valid transitions are...

            1. open -> closed
            2. open -> cancelled
            3. closed -> cancelled
          enum:
          - open
          - closed
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: All items the customer will be purchasing in this session
          items:
            $ref: '#/components/schemas/CartItem'
          title: Customer session's cart items
          type: array
        additionalCosts:
          additionalProperties:
            $ref: '#/components/schemas/AdditionalCost'
          description: Any costs associated with the session that can not be explicitly
            attributed to cart items. Examples include shipping costs and service
            fees.
          type: object
        identifiers:
          description: Identifiers for the customer, this can be used for limits on
            values such as device ID.
          items:
            type: string
          type: array
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
        firstSession:
          description: Indicates whether this is the first session for the customer's
            profile. Will always be true for anonymous sessions.
          title: First session ever?
          type: boolean
        total:
          description: The total sum of cart-items, as well as additional costs, before
            any discounts applied
          title: Session Total
          type: number
        cartItemTotal:
          description: The total sum of cart-items before any discounts applied
          title: Cart Items Total
          type: number
        additionalCostTotal:
          description: The total sum of additional costs before any discounts applied
          title: Additional Costs Total
          type: number
      required:
      - additionalCostTotal
      - applicationId
      - attributes
      - cartItemTotal
      - cartItems
      - created
      - firstSession
      - integrationId
      - profileId
      - state
      - total
      type: object
    CartItem:
      example:
        quantity: 1
        price: 1.4658129805029452
        name: name
        width: 2.3021358869347655
        length: 7.061401241503109
        weight: 5.962133916683182
        attributes: '{}'
        adjustment:
          pointPayment: 1
          remainingPrice: 0.4145608029883936
          payFromLoyaltyProgram: 3
        position: 9.301444243932576
        sku: sku
        category: category
        height: 5.637376656633329
      properties:
        name:
          minLength: 1
          title: Name of item
          type: string
        sku:
          minLength: 1
          title: SKU of item
          type: string
        quantity:
          minimum: 1
          title: Quantity of item
          type: integer
        price:
          title: Price of item
          type: number
        category:
          title: Item category
          type: string
        weight:
          description: Weight of item in mm
          title: Weight of item
          type: number
        height:
          description: Height of item in mm
          title: Height of item
          type: number
        width:
          description: Width of item in mm
          title: Width of item
          type: number
        length:
          description: Length of item in mm
          title: Length of item
          type: number
        position:
          description: Position of the Cart Item in the Cart (calculated internally)
          title: Position of Cart Item
          type: number
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          title: Item attributes
          type: object
        adjustment:
          $ref: '#/components/schemas/CartItemAdjustment'
      required:
      - name
      - price
      - quantity
      - sku
      type: object
    AdditionalCost:
      example:
        price: 6.027456183070403
      properties:
        price:
          title: Price of additional cost
          type: number
      required:
      - price
      type: object
    IntegrationEvent:
      description: ""
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    NewEvent:
      description: ""
      example:
        profileId: profileId
        attributes: '{}'
        sessionId: sessionId
        type: type
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          properties: {}
          type: object
        sessionId:
          description: The ID of the session that this event occurred in.
          minLength: 1
          title: Session ID of Event
          type: string
      required:
      - attributes
      - sessionId
      - type
      type: object
    Event:
      description: ""
      example:
        effects:
        - '{}'
        - '{}'
        created: 2000-01-23T04:56:07.000+00:00
        profileId: profileId
        meta:
          campaigns: '{}'
          coupons: '{}'
          referralRejectionReason:
            reason: ReferralNotFound
            campaignId: 6
            referralId: 1
          warnings: '{}'
          couponRejectionReason:
            reason: CouponNotFound
            campaignId: 6
            couponId: 3
        ledgerEntries:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          accountId: 9
          eventId: 6
          reason: reason
          amount: 8
          created: 2000-01-23T04:56:07.000+00:00
          profileId: profileId
          loyaltyProgramId: 9
          id: 5
          referenceId: 9
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          accountId: 9
          eventId: 6
          reason: reason
          amount: 8
          created: 2000-01-23T04:56:07.000+00:00
          profileId: profileId
          loyaltyProgramId: 9
          id: 5
          referenceId: 9
        attributes: '{}'
        id: 1
        sessionId: sessionId
        applicationId: 4
        type: type
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          properties: {}
          type: object
        sessionId:
          description: The ID of the session that this event occurred in.
          title: Session ID of Event
          type: string
        effects:
          description: |
            An array of "effects" that must be applied in response to this event. Example effects include `addItemToCart` or `setDiscount`.
          items:
            properties: {}
            type: object
          type: array
        ledgerEntries:
          description: Ledger entries for the event.
          items:
            $ref: '#/components/schemas/LedgerEntry'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - applicationId
      - attributes
      - created
      - effects
      - id
      - ledgerEntries
      - type
      type: object
    IntegrationState:
      description: |
        Contains all state that might interest application integration plugins. This is the response type returned by all of the Integration API operations.
      example:
        coupon:
          recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        session:
          coupon: coupon
          created: 2000-01-23T04:56:07.000+00:00
          identifiers:
          - identifiers
          - identifiers
          integrationId: integrationId
          total: 7.386281948385884
          referral: referral
          discounts:
            key: 1.2315135367772556
          profileId: profileId
          attributes: '{}'
          state: open
          applicationId: 0
          cartItems:
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
          firstSession: true
        profile:
          accountId: 1
          closedSessions: 1
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 6.84685269835264
          lastActivity: 2000-01-23T04:56:07.000+00:00
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        loyalty:
          programs:
            key:
              ledger:
                currentBalance: 2.8841621266687802
              subLedgers:
                key:
                  currentBalance: 2.8841621266687802
              name: name
              title: title
        event:
          effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: profileId
          meta:
            campaigns: '{}'
            coupons: '{}'
            referralRejectionReason:
              reason: ReferralNotFound
              campaignId: 6
              referralId: 1
            warnings: '{}'
            couponRejectionReason:
              reason: CouponNotFound
              campaignId: 6
              couponId: 3
          ledgerEntries:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 9
            eventId: 6
            reason: reason
            amount: 8
            created: 2000-01-23T04:56:07.000+00:00
            profileId: profileId
            loyaltyProgramId: 9
            id: 5
            referenceId: 9
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 9
            eventId: 6
            reason: reason
            amount: 8
            created: 2000-01-23T04:56:07.000+00:00
            profileId: profileId
            loyaltyProgramId: 9
            id: 5
            referenceId: 9
          attributes: '{}'
          id: 1
          sessionId: sessionId
          applicationId: 4
          type: type
      properties:
        session:
          $ref: '#/components/schemas/CustomerSession'
        profile:
          $ref: '#/components/schemas/CustomerProfile'
        event:
          $ref: '#/components/schemas/Event'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        coupon:
          $ref: '#/components/schemas/Coupon'
      required:
      - event
      - profile
      - session
      type: object
    IntegrationStateV2:
      description: |
        Contains all entities that might interest Talon.One integrations. This is the response type returned by the V2 PUT customer_session endpoint
      example:
        effects:
        - rulesetId: 7
          ruleIndex: 1
          campaignId: 6
          ruleName: ruleName
          effectType: effectType
          props: '{}'
        - rulesetId: 7
          ruleIndex: 1
          campaignId: 6
          ruleName: ruleName
          effectType: effectType
          props: '{}'
        referral:
          expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        triggeredCampaigns:
        - discountCount: 1
          description: description
          features:
          - coupons
          - coupons
          - coupons
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          activeRulesetId: 3
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          couponRedemptionCount: 4
          userId: 9
          couponCreationCount: 1
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          discountEffectCount: 1
          createdBy: createdBy
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 7
          referralRedemptionCount: 7
          updated: 2000-01-23T04:56:07.000+00:00
        - discountCount: 1
          description: description
          features:
          - coupons
          - coupons
          - coupons
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          activeRulesetId: 3
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          couponRedemptionCount: 4
          userId: 9
          couponCreationCount: 1
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          discountEffectCount: 1
          createdBy: createdBy
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 7
          referralRedemptionCount: 7
          updated: 2000-01-23T04:56:07.000+00:00
        coupons:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        customerProfile:
          accountId: 1
          closedSessions: 1
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 6.84685269835264
          lastActivity: 2000-01-23T04:56:07.000+00:00
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        customerSession:
          couponCodes:
          - couponCodes
          - couponCodes
          created: 2000-01-23T04:56:07.000+00:00
          identifiers:
          - identifiers
          - identifiers
          integrationId: integrationId
          total: 1.4658129805029452
          additionalCosts:
            key:
              price: 6.027456183070403
          additionalCostTotal: 5.637376656633329
          profileId: profileId
          referralCode: referralCode
          attributes: '{}'
          state: open
          applicationId: 0
          cartItems:
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
          firstSession: true
          cartItemTotal: 5.962133916683182
        loyalty:
          programs:
            key:
              ledger:
                currentBalance: 2.8841621266687802
              subLedgers:
                key:
                  currentBalance: 2.8841621266687802
              name: name
              title: title
        event:
          effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: profileId
          meta:
            campaigns: '{}'
            coupons: '{}'
            referralRejectionReason:
              reason: ReferralNotFound
              campaignId: 6
              referralId: 1
            warnings: '{}'
            couponRejectionReason:
              reason: CouponNotFound
              campaignId: 6
              couponId: 3
          ledgerEntries:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 9
            eventId: 6
            reason: reason
            amount: 8
            created: 2000-01-23T04:56:07.000+00:00
            profileId: profileId
            loyaltyProgramId: 9
            id: 5
            referenceId: 9
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 9
            eventId: 6
            reason: reason
            amount: 8
            created: 2000-01-23T04:56:07.000+00:00
            profileId: profileId
            loyaltyProgramId: 9
            id: 5
            referenceId: 9
          attributes: '{}'
          id: 1
          sessionId: sessionId
          applicationId: 4
          type: type
        createdCoupons:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        createdReferrals:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        customerSession:
          $ref: '#/components/schemas/CustomerSessionV2'
        customerProfile:
          $ref: '#/components/schemas/CustomerProfile'
        event:
          $ref: '#/components/schemas/Event'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        referral:
          $ref: '#/components/schemas/Referral'
        coupons:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
        triggeredCampaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          type: array
        createdCoupons:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
        createdReferrals:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
      required:
      - createdCoupons
      - createdReferrals
      - effects
      type: object
    ApplicationCustomer:
      description: ""
      example:
        accountId: 1
        closedSessions: 5
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: integrationId
        attributes: '{}'
        totalSales: 5.637376656633329
        lastActivity: 2000-01-23T04:56:07.000+00:00
        id: 6
        loyaltyMemberships:
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 7
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 7
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created. The exact moment this entity was created.
          format: date-time
          type: string
        integrationId:
          description: The ID used for this entity in the application system. The
            ID used for this entity in the application system.
          format: string
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        accountId:
          description: The ID of the Talon.One account that owns this profile. The
            ID of the Talon.One account that owns this profile.
          type: integer
        closedSessions:
          description: The total amount of closed sessions by a customer. A closed
            session is a successful purchase.
          title: Closed sessions
          type: integer
        totalSales:
          description: Sum of all purchases made by this customer
          title: Total Sales
          type: number
        loyaltyMemberships:
          description: A list of loyalty programs joined by the customer
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          title: Loyalty programed joined
          type: array
        lastActivity:
          description: Timestamp of the most recent event received from this customer
          format: date-time
          title: Last activity of customer
          type: string
      required:
      - accountId
      - attributes
      - closedSessions
      - created
      - id
      - integrationId
      - lastActivity
      - totalSales
      type: object
    ApplicationSession:
      description: ""
      example:
        coupon: coupon
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: integrationId
        profileintegrationid: profileintegrationid
        total: 5.637376656633329
        referral: referral
        discounts:
          key: 5.962133916683182
        profileId: 1
        attributes: '{}'
        id: 0
        state: open
        applicationId: 6
        cartItems:
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
        - quantity: 1
          price: 1.4658129805029452
          name: name
          width: 2.3021358869347655
          length: 7.061401241503109
          weight: 5.962133916683182
          attributes: '{}'
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883936
            payFromLoyaltyProgram: 3
          position: 9.301444243932576
          sku: sku
          category: category
          height: 5.637376656633329
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          type: integer
        integrationId:
          description: The ID used for this entity in the application system.
          format: string
          type: string
        profileintegrationid:
          description: Integration ID of the customer for the session.
          type: string
        coupon:
          description: Any coupon code entered.
          type: string
        referral:
          description: Any referral code entered.
          type: string
        state:
          description: Indicating if the customer session is in progress ("open"),
            "closed", or "cancelled".
          enum:
          - open
          - closed
          - cancelled
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          type: array
        discounts:
          additionalProperties:
            type: number
          description: A map of labelled discount values, in the same currency as
            the session.
          type: object
        total:
          description: The total sum of the session before any discounts applied.
          type: number
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
      required:
      - applicationId
      - cartItems
      - coupon
      - created
      - discounts
      - id
      - integrationId
      - referral
      - state
      - total
      type: object
    ApplicationEvent:
      description: ""
      example:
        effects:
        - '{}'
        - '{}'
        created: 2000-01-23T04:56:07.000+00:00
        profileId: 5
        attributes: '{}'
        id: 6
        sessionId: 5
        applicationId: 1
        type: type
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          type: integer
        sessionId:
          description: The globally unique Talon.One ID of the session that contains
            this event.
          type: integer
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          type: string
        attributes:
          description: Additional JSON serialized data associated with the event.
          properties: {}
          type: object
        effects:
          description: An array containing the effects that were applied as a result
            of this event.
          items:
            properties: {}
            type: object
          type: array
      required:
      - applicationId
      - attributes
      - created
      - effects
      - id
      - type
      type: object
    NewAccount:
      properties:
        companyName:
          minLength: 1
          type: string
      required:
      - companyName
      type: object
    AccountAnalytics:
      example:
        expiredCoupons: 2
        roles: 7
        activeCampaigns: 6
        activeCoupons: 5
        users: 4
        activeRules: 1
        campaigns: 1
        coupons: 5
        expiredReferralCodes: 2
        webhooks: 1
        loyaltyPrograms: 1
        referralCodes: 9
        applications: 0
        customAttributes: 7
        activeReferralCodes: 3
      properties:
        applications:
          description: Total Number of Applications inside the account
          type: integer
        activeCampaigns:
          description: Total Number of Active Applications inside the account
          type: integer
        campaigns:
          description: Total Number of campaigns inside the account
          type: integer
        coupons:
          description: Total Number of coupons inside the account
          type: integer
        activeCoupons:
          description: Total Number of active coupons inside the account
          type: integer
        expiredCoupons:
          description: Total Number of expired coupons inside the account
          type: integer
        customAttributes:
          description: Total Number of custom attributes inside the account
          type: integer
        referralCodes:
          description: Total Number of referral codes inside the account
          type: integer
        activeReferralCodes:
          description: Total Number of active referral codes inside the account
          type: integer
        expiredReferralCodes:
          description: Total Number of expired referral codes inside the account
          type: integer
        users:
          description: Total Number of users inside the account
          type: integer
        roles:
          description: Total Number of roles inside the account
          type: integer
        webhooks:
          description: Total Number of webhooks inside the account
          type: integer
        loyaltyPrograms:
          description: Total Number of loyalty programs inside the account
          type: integer
        activeRules:
          description: Total Number of active rules in the account
          type: integer
      required:
      - activeCampaigns
      - activeCoupons
      - activeReferralCodes
      - activeRules
      - applications
      - campaigns
      - coupons
      - customAttributes
      - expiredCoupons
      - expiredReferralCodes
      - loyaltyPrograms
      - referralCodes
      - roles
      - users
      - webhooks
      type: object
    AccountLimits:
      properties:
        liveApplications:
          description: Total Number of allowed live applications in the account
          type: integer
        sandboxApplications:
          description: Total Number of allowed sandbox applications in the account
          type: integer
        activeCampaigns:
          description: Total Number of allowed active campaigns in the account
          type: integer
        coupons:
          description: Total Number of allowed coupons in the account
          type: integer
        referralCodes:
          description: Total Number of allowed referral codes in the account
          type: integer
        liveLoyaltyPrograms:
          description: Total Number of allowed live loyalty programs in the account
          type: integer
        sandboxLoyaltyPrograms:
          description: Total Number of allowed sandbox loyalty programs in the account
          type: integer
        webhooks:
          description: Total Number of allowed webhooks in the account
          type: integer
        users:
          description: Total Number of allowed users in the account
          type: integer
        apiVolume:
          description: Total allowed api volume
          type: integer
        activeRules:
          description: Total allowed active rulesets
          type: integer
        promotionTypes:
          description: array of rulesets where webhook is used
          items:
            type: string
          type: array
      required:
      - activeCampaigns
      - apiVolume
      - coupons
      - liveApplications
      - liveLoyaltyPrograms
      - promotionTypes
      - referralCodes
      - sandboxApplications
      - sandboxLoyaltyPrograms
      - users
      - webhooks
      type: object
    UpdateAccount:
      properties:
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        companyName:
          description: Name of your company.
          minLength: 1
          type: string
        billingEmail:
          description: The billing email address associated with your company account.
          format: email
          type: string
        state:
          description: State of the account (active, deactivated)
          enum:
          - active
          - deactivated
          type: string
        planExpires:
          description: The point in time at which your current plan expires.
          format: date-time
          type: string
      required:
      - billingEmail
      - companyName
      type: object
    Account:
      description: ""
      example:
        applicationCount: 2
        planExpires: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        campaignsActiveCount: 9
        companyName: companyName
        campaignsInactiveCount: 3
        planName: planName
        applicationLimit: 6
        userCount: 7
        billingEmail: billingEmail
        campaignLimit: 5
        domainName: domainName
        apiLimit: 5
        modified: 2000-01-23T04:56:07.000+00:00
        attributes: '{}'
        id: 0
        state: active
        userLimit: 1
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        companyName:
          minLength: 1
          type: string
        domainName:
          description: Subdomain Name for yourcompany.talon.one
          type: string
        state:
          description: State of the account (active, deactivated)
          enum:
          - active
          - deactivated
          type: string
        billingEmail:
          description: The billing email address associated with your company account.
          format: email
          type: string
        planName:
          description: The name of your booked plan.
          type: string
        planExpires:
          description: The point in time at which your current plan expires.
          format: date-time
          type: string
        applicationLimit:
          description: The maximum number of Applications covered by your plan.
          type: integer
        userLimit:
          description: The maximum number of Campaign Manager Users covered by your
            plan.
          type: integer
        campaignLimit:
          description: The maximum number of Campaigns covered by your plan.
          type: integer
        apiLimit:
          description: The maximum number of Integration API calls covered by your
            plan per billing period.
          type: integer
        applicationCount:
          description: The current number of Applications in your account.
          type: integer
        userCount:
          description: The current number of Campaign Manager Users in your account.
          type: integer
        campaignsActiveCount:
          description: The current number of active Campaigns in your account.
          type: integer
        campaignsInactiveCount:
          description: The current number of inactive Campaigns in your account.
          type: integer
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
      required:
      - applicationCount
      - billingEmail
      - campaignsActiveCount
      - campaignsInactiveCount
      - companyName
      - created
      - domainName
      - id
      - modified
      - state
      - userCount
      type: object
    NewAccountSignUp:
      description: ""
      properties:
        email:
          description: The email address associated with your account.
          format: email
          type: string
        password:
          description: The password for your account.
          type: string
        companyName:
          minLength: 1
          type: string
      required:
      - companyName
      - email
      - password
      type: object
    NewUser:
      description: ""
      properties:
        email:
          description: The email address associated with your account.
          format: email
          type: string
        password:
          description: The password for your account.
          type: string
        name:
          description: Your name.
          type: string
        inviteToken:
          minLength: 1
          type: string
      required:
      - email
      - inviteToken
      - password
      type: object
    UpdateUser:
      properties:
        name:
          description: Your name.
          type: string
        policy:
          description: a blob of acl json
          type: string
        state:
          description: New state ("deactivated" or "active") for the user. Only usable
            by admins for the user.
          enum:
          - deactivated
          - active
          type: string
        releaseUpdate:
          description: Update the user via email
          type: boolean
        latestFeature:
          description: The latest feature you've been notified.
          type: string
        roles:
          description: Update
          items:
            type: integer
          type: array
        applicationNotificationSubscriptions:
          properties: {}
          type: object
      type: object
    ChangeProfilePassword:
      properties:
        password:
          description: Your old password.
          type: string
        newPassword:
          description: Your new password.
          type: string
      required:
      - newPassword
      - password
      type: object
    NewInviteEmail:
      properties:
        email:
          format: email
          minLength: 1
          type: string
        token:
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    NewPasswordEmail:
      example:
        email: email
      properties:
        email:
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    NewPassword:
      example:
        password: password
        resetToken: resetToken
      properties:
        password:
          description: The new password for your account.
          type: string
        resetToken:
          minLength: 1
          type: string
      required:
      - password
      - resetToken
      type: object
    Environment:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        slots:
          description: The slots defined for this application.
          items:
            $ref: '#/components/schemas/SlotDef'
          type: array
        functions:
          description: The functions defined for this application.
          items:
            $ref: '#/components/schemas/FunctionDef'
          type: array
        templates:
          description: The templates defined for this application.
          items:
            $ref: '#/components/schemas/TemplateDef'
          type: array
        variables:
          type: string
      required:
      - applicationId
      - created
      - functions
      - id
      - slots
      - templates
      - variables
      type: object
    SlotDef:
      properties:
        name:
          description: The dot-separated path to this slot for use in Talang.
          type: string
        type:
          description: The type of this slot, one of string, number, boolean, or list[type].
          type: string
        title:
          description: Campaigner-friendly name for the slot.
          type: string
        description:
          description: A short description of the slot.
          type: string
        help:
          description: Extended help text for the slot.
          type: string
        writable:
          description: Whether or not this slot can be updated by rule effects.
          type: boolean
      required:
      - name
      - title
      - type
      - writable
      type: object
    FuncArgDef:
      properties:
        type:
          description: The type of value this argument expects.
          enum:
          - string
          - boolean
          - number
          - time
          minLength: 1
          type: string
        description:
          description: A campaigner-friendly description of the argument, this will
            also be shown in the rule editor.
          type: string
      required:
      - description
      - type
      type: object
    TemplateArgDef:
      description: ""
      example:
        ui: '{}'
        description: description
        type: string
        title: title
      properties:
        type:
          description: The type of value this argument expects.
          enum:
          - string
          - boolean
          - number
          - time
          minLength: 1
          type: string
        description:
          description: A campaigner-friendly description of the argument, this will
            also be shown in the rule editor.
          type: string
        title:
          description: A campaigner friendly name for the argument, this will be shown
            in the rule editor.
          minLength: 1
          type: string
        ui:
          description: Arbitrary metadata that may be used to render an input for
            this argument.
          properties: {}
          type: object
      required:
      - description
      - title
      - type
      - ui
      type: object
    FunctionDef:
      properties:
        name:
          description: The function name used in Talang.
          minLength: 1
          type: string
        type:
          description: The type of this function argument.
          type: string
        description:
          description: A short description of the function.
          type: string
        help:
          description: Extended help text for the function.
          type: string
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/FuncArgDef'
          type: array
      required:
      - args
      - name
      - type
      type: object
    NewTemplateDef:
      properties:
        title:
          description: Campaigner-friendly name for the template that will be shown
            in the rule editor.
          minLength: 1
          type: string
        description:
          description: A short description of the template that will be shown in the
            rule editor.
          type: string
        help:
          description: Extended help text for the template.
          type: string
        category:
          description: Used for grouping templates in the rule editor sidebar.
          minLength: 1
          type: string
        expr:
          description: A Talang expression that contains variable bindings referring
            to args.
          items:
            properties: {}
            type: object
          type: array
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        expose:
          default: false
          description: A flag to control exposure in Rule Builder.
          type: boolean
      required:
      - args
      - category
      - expr
      - title
      type: object
    TemplateDef:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          type: integer
        title:
          description: Campaigner-friendly name for the template that will be shown
            in the rule editor.
          minLength: 1
          type: string
        description:
          description: A short description of the template that will be shown in the
            rule editor.
          type: string
        help:
          description: Extended help text for the template.
          type: string
        category:
          description: Used for grouping templates in the rule editor sidebar.
          minLength: 1
          type: string
        expr:
          description: A Talang expression that contains variable bindings referring
            to args.
          items:
            properties: {}
            type: object
          type: array
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        expose:
          default: false
          description: A flag to control exposure in Rule Builder.
          type: boolean
        name:
          description: The template name used in Talang.
          minLength: 1
          type: string
      required:
      - applicationId
      - args
      - category
      - created
      - description
      - expr
      - help
      - id
      - name
      - title
      type: object
    NewAttribute:
      description: ""
      example:
        editable: true
        name: name
        subscribedApplicationsIds:
        - 0
        - 0
        description: description
        suggestions:
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        eventType: eventType
        title: title
        type: string
        entity: Account
      properties:
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Account
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          type: string
        eventType:
          type: string
        name:
          description: The attribute name that will be used in API requests and Talang.
            E.g. if `name == "region"` then you would set the region attribute by
            including an `attributes.region` property in your request payload.
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
          - (list location)
          type: string
        description:
          description: A description of this attribute.
          type: string
        suggestions:
          description: A list of suggestions for the attribute.
          items:
            minLength: 1
            type: string
          maxItems: 50
          type: array
        editable:
          description: Whether or not this attribute can be edited.
          type: boolean
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this attribute
          items:
            type: integer
          type: array
      required:
      - description
      - editable
      - entity
      - name
      - suggestions
      - title
      - type
      type: object
    Attribute:
      description: ""
      example:
        accountId: 1
        created: 2000-01-23T04:56:07.000+00:00
        editable: true
        name: name
        subscribedApplicationsIds:
        - 5
        - 5
        description: description
        suggestions:
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        id: 6
        eventType: eventType
        title: title
        type: string
        entity: Account
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Account
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          type: string
        eventType:
          type: string
        name:
          description: The attribute name that will be used in API requests and Talang.
            E.g. if `name == "region"` then you would set the region attribute by
            including an `attributes.region` property in your request payload.
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
          - (list location)
          type: string
        description:
          description: A description of this attribute.
          type: string
        suggestions:
          description: A list of suggestions for the attribute.
          items:
            minLength: 1
            type: string
          maxItems: 50
          type: array
        editable:
          description: Whether or not this attribute can be edited.
          type: boolean
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this attribute
          items:
            type: integer
          type: array
      required:
      - accountId
      - created
      - description
      - editable
      - entity
      - id
      - name
      - suggestions
      - title
      - type
      type: object
    NewAdditionalCost:
      description: ""
      example:
        name: name
        subscribedApplicationsIds:
        - 0
        - 0
        description: description
        title: title
      properties:
        name:
          description: The additional cost name that will be used in API requests
            and Talang. E.g. if `name == "shipping"` then you would set the shipping
            additional cost by including an `additionalCosts.shipping` property in
            your request payload.
          type: string
        title:
          description: The human-readable name for the additional cost that will be
            shown in the Campaign Manager. Like `name`, the combination of entity
            and title must also be unique.
          type: string
        description:
          description: A description of this additional cost.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this additional cost
          items:
            type: integer
          type: array
      required:
      - description
      - name
      - title
      type: object
    AccountAdditionalCost:
      description: ""
      example:
        accountId: 1
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        subscribedApplicationsIds:
        - 5
        - 5
        description: description
        id: 6
        title: title
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: The additional cost name that will be used in API requests
            and Talang. E.g. if `name == "shipping"` then you would set the shipping
            additional cost by including an `additionalCosts.shipping` property in
            your request payload.
          type: string
        title:
          description: The human-readable name for the additional cost that will be
            shown in the Campaign Manager. Like `name`, the combination of entity
            and title must also be unique.
          type: string
        description:
          description: A description of this additional cost.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this additional cost
          items:
            type: integer
          type: array
      required:
      - accountId
      - created
      - description
      - id
      - name
      - title
      type: object
    NewEventType:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          type: array
        title:
          description: The human-friendly display name for this event type. Use a
            short, past-tense, description of the event.
          minLength: 1
          type: string
        name:
          description: The machine-friendly canonical name for this event type. This
            will be used in URLs, and cannot be changed after an event type has been
            created.
          minLength: 1
          type: string
        description:
          description: |
            An explanation of when the event type is triggered. Write this with a campaign manager in mind. For example:

            > The "Payment Accepted" event is triggered after successful processing of a payment by our payment gateway.
          type: string
        mimeType:
          description: This defines how the request payload will be parsed before
            your handler code is run.
          enum:
          - application/json
          - application/x-www-form-urlencoded
          - none
          type: string
        examplePayload:
          description: It is often helpful to include an example payload with the
            event type definition for documentation purposes.
          type: string
        schema:
          description: |
            It is strongly recommended to define a JSON schema that will be used to perform structural validation of request payloads after parsing.
          properties: {}
          type: object
        handlerLanguage:
          description: The language of the handler code. Currently only `"talang"`
            is supported.
          enum:
          - talang
          type: string
        handler:
          description: |
            Code that will be run after successful parsing & validation of the payload for this event.
            This code _may_ choose to evaluate campaign rules.
          type: string
        version:
          description: |
            The version of this event type. When updating an existing event type this must be **exactly** `currentVersion + 1`.
          type: integer
      required:
      - applicationIds
      - description
      - handler
      - mimeType
      - name
      - title
      - version
      type: object
    EventType:
      description: ""
      example:
        schema: '{}'
        handler: handler
        examplePayload: examplePayload
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: 6
        mimeType: application/json
        handlerLanguage: talang
        title: title
        version: 5
        applicationIds:
        - 1
        - 1
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          type: array
        title:
          description: The human-friendly display name for this event type. Use a
            short, past-tense, description of the event.
          minLength: 1
          type: string
        name:
          description: The machine-friendly canonical name for this event type. This
            will be used in URLs, and cannot be changed after an event type has been
            created.
          minLength: 1
          type: string
        description:
          description: |
            An explanation of when the event type is triggered. Write this with a campaign manager in mind. For example:

            > The "Payment Accepted" event is triggered after successful processing of a payment by our payment gateway.
          type: string
        mimeType:
          description: This defines how the request payload will be parsed before
            your handler code is run.
          enum:
          - application/json
          - application/x-www-form-urlencoded
          - none
          type: string
        examplePayload:
          description: It is often helpful to include an example payload with the
            event type definition for documentation purposes.
          type: string
        schema:
          description: |
            It is strongly recommended to define a JSON schema that will be used to perform structural validation of request payloads after parsing.
          properties: {}
          type: object
        handlerLanguage:
          description: The language of the handler code. Currently only `"talang"`
            is supported.
          enum:
          - talang
          type: string
        handler:
          description: |
            Code that will be run after successful parsing & validation of the payload for this event.
            This code _may_ choose to evaluate campaign rules.
          type: string
        version:
          description: |
            The version of this event type. When updating an existing event type this must be **exactly** `currentVersion + 1`.
          type: integer
      required:
      - applicationIds
      - created
      - description
      - handler
      - id
      - mimeType
      - name
      - title
      - version
      type: object
    ImportCoupons:
      properties:
        coupons:
          type: string
      required:
      - coupons
      type: object
    NewWebhook:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          type: array
        title:
          description: Friendly title for this webhook
          type: string
        verb:
          description: API method for this webhook
          enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
          type: string
        url:
          description: API url (supports templating using parameters) for this webhook
          type: string
        headers:
          description: List of API HTTP headers for this webhook
          items:
            pattern: ^([^:,]*):([^]*|[^,]*)$
            type: string
          type: array
        payload:
          description: API payload (supports templating using parameters) for this
            webhook
          type: string
        params:
          description: Array of template argument definitions
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        enabled:
          description: Enables or disables webhook from showing in rule builder
          type: boolean
      required:
      - applicationIds
      - enabled
      - headers
      - params
      - title
      - url
      - verb
      type: object
    Webhook:
      description: ""
      example:
        headers:
        - headers
        - headers
        payload: payload
        created: 2000-01-23T04:56:07.000+00:00
        verb: POST
        modified: 2000-01-23T04:56:07.000+00:00
        id: 6
        title: title
        params:
        - ui: '{}'
          description: description
          type: string
          title: title
        - ui: '{}'
          description: description
          type: string
          title: title
        url: url
        enabled: true
        applicationIds:
        - 1
        - 1
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        applicationIds:
          description: The IDs of the applications that are related to this entity.
            The IDs of the applications that are related to this entity.
          items:
            description: ""
            type: integer
          type: array
        title:
          description: Friendly title for this webhook
          type: string
        verb:
          description: API method for this webhook
          enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
          type: string
        url:
          description: API url (supports templating using parameters) for this webhook
          type: string
        headers:
          description: List of API HTTP headers for this webhook
          items:
            pattern: ^([^:,]*):([^]*|[^,]*)$
            type: string
          type: array
        payload:
          description: API payload (supports templating using parameters) for this
            webhook
          type: string
        params:
          description: Array of template argument definitions
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        enabled:
          description: Enables or disables webhook from showing in rule builder
          type: boolean
      required:
      - applicationIds
      - created
      - enabled
      - headers
      - id
      - modified
      - params
      - title
      - url
      - verb
      type: object
    ManagerConfig:
      properties:
        schemaVersion:
          type: integer
      required:
      - schemaVersion
      type: object
    Export:
      description: ""
      example:
        filter: '{}'
        accountId: 1
        created: 2000-01-23T04:56:07.000+00:00
        id: 6
        userId: 5
        entity: Coupon
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: The name of the entity that was exported.
          enum:
          - Coupon
          - Effect
          - CustomerSession
          type: string
        filter:
          description: Map of keys and values that were used to filter the exported
            rows
          properties: {}
          type: object
      required:
      - accountId
      - created
      - entity
      - filter
      - id
      - userId
      type: object
    NewImport:
      description: ""
      properties:
        entity:
          description: The name of the entity that was imported.
          enum:
          - Coupon
          type: string
      required:
      - entity
      type: object
    Import:
      description: ""
      example:
        accountId: 1
        amount: 0
        created: 2000-01-23T04:56:07.000+00:00
        id: 6
        userId: 5
        entity: Coupon
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: The name of the entity that was imported.
          enum:
          - Coupon
          type: string
        amount:
          description: The number of members that imported.
          minimum: 0
          type: integer
      required:
      - accountId
      - amount
      - created
      - entity
      - id
      - userId
      type: object
    FeaturesFeed:
      description: ""
      properties:
        title:
          type: string
        pubDate:
          type: string
      type: object
    LibraryAttribute:
      description: ""
      properties:
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          type: string
        name:
          description: |
            The attribute name that will be used in API requests and Talang. E.g. if `name == "region"` then you would set the region attribute by including an `attributes.region` property in your request payload.
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          type: string
        description:
          description: A description of the attribute.
          type: string
        presets:
          description: The presets that indicate to which industry the attribute applies
            to.
          items:
            type: string
          type: array
        suggestions:
          description: Short suggestions that are used to group attributes.
          items:
            type: string
          type: array
      required:
      - description
      - entity
      - name
      - presets
      - suggestions
      - title
      - type
      type: object
    Role:
      description: ""
      example:
        accountID: 1
        members:
        - 5
        - 5
        name: name
        description: description
        id: 6
        acl: acl
      properties:
        id:
          description: The ID of the role corresponding to the DB row
          type: integer
        accountID:
          description: The ID of the Talon.One account that owns this role.
          type: integer
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        members:
          description: A list of user identifiers assigned to this role
          items:
            type: integer
          type: array
        acl:
          description: Role Policy this should be a stringified blob of json
          format: aclRole
          type: string
      required:
      - accountID
      - id
      type: object
    NewRole:
      description: ""
      properties:
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        acl:
          description: Role Policy this should be a stringified blob of json
          type: string
        users:
          description: An array of userIDs
          items:
            type: integer
          type: array
      required:
      - acl
      - name
      - users
      type: object
    UpdateRole:
      properties:
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        acl:
          description: Role Policy this should be a stringified blob of json
          type: string
        users:
          description: an array of user identifiers
          items:
            type: integer
          type: array
      type: object
    RoleAssign:
      description: ""
      properties:
        users:
          description: An array of userIDs
          items:
            type: integer
          type: array
        roles:
          description: An array of roleIDs
          items:
            type: integer
          type: array
      required:
      - roles
      - users
      type: object
    RoleMembership:
      properties:
        RoleID:
          description: ID of role
          type: integer
        UserID:
          description: ID of User
          type: integer
      required:
      - RoleID
      - UserID
      type: object
    CouponReservations:
      example:
        integrationIDs:
        - integrationIDs
        - integrationIDs
      properties:
        integrationIDs:
          description: List of Integration IDs
          items:
            type: string
          type: array
      required:
      - integrationIDs
      type: object
    LedgerEntry:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        accountId: 9
        eventId: 6
        reason: reason
        amount: 8
        created: 2000-01-23T04:56:07.000+00:00
        profileId: profileId
        loyaltyProgramId: 9
        id: 5
        referenceId: 9
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          type: string
        accountId:
          description: The ID of the Talon.One account that owns this profile.
          type: integer
        loyaltyProgramId:
          description: ID of the ledger
          type: integer
        eventId:
          description: ID of the related event
          type: integer
        amount:
          description: Amount of loyalty points
          type: integer
        reason:
          description: reason for awarding/deducting points
          type: string
        expiryDate:
          description: Expiry date of the points
          format: date-time
          type: string
        referenceId:
          description: The ID of the balancing ledgerEntry
          type: integer
      required:
      - accountId
      - amount
      - created
      - eventId
      - expiryDate
      - id
      - loyaltyProgramId
      - profileId
      - reason
      type: object
    LoyaltyMembership:
      example:
        joined: 2000-01-23T04:56:07.000+00:00
        loyaltyProgramId: 7
      properties:
        joined:
          description: The moment in which the loyalty program was joined.
          format: date-time
          title: Loyalty program joined at
          type: string
        loyaltyProgramId:
          description: The ID of the loyalty program belonging to this entity.
          title: Loyalty program ID
          type: integer
      required:
      - loyaltyProgramId
      type: object
    CartItemAdjustment:
      example:
        pointPayment: 1
        remainingPrice: 0.4145608029883936
        payFromLoyaltyProgram: 3
      properties:
        payFromLoyaltyProgram:
          description: Loyalty Program to be used for payment
          title: Payment from this Loyalty Program
          type: integer
        pointPayment:
          description: Amount of points to be spend
          minimum: 1
          title: Points to be spend
          type: integer
        remainingPrice:
          description: Remaining price in currency after payment in points has been
            made
          minimum: 0
          title: Remaining Price
          type: number
      required:
      - payFromLoyaltyProgram
      - pointPayment
      type: object
    Meta:
      example:
        campaigns: '{}'
        coupons: '{}'
        referralRejectionReason:
          reason: ReferralNotFound
          campaignId: 6
          referralId: 1
        warnings: '{}'
        couponRejectionReason:
          reason: CouponNotFound
          campaignId: 6
          couponId: 3
      properties:
        campaigns:
          description: Maps each evaluated campaign ID to a key-value list of that
            campaigns attributes. Campaigns without attributes will be omitted.
          properties: {}
          type: object
        coupons:
          description: Maps the coupon value to a key-value list of that coupons attributes.
          properties: {}
          type: object
        couponRejectionReason:
          $ref: '#/components/schemas/CouponRejectionReason'
        referralRejectionReason:
          $ref: '#/components/schemas/ReferralRejectionReason'
        warnings:
          properties: {}
          type: object
      type: object
    CouponRejectionReason:
      description: Holds a reference to the campaign, the coupon and the reason for
        which that coupon was rejected. Should only be present when there is a 'rejectCoupon'
        effect.
      example:
        reason: CouponNotFound
        campaignId: 6
        couponId: 3
      properties:
        campaignId:
          type: integer
        couponId:
          type: integer
        reason:
          enum:
          - CouponNotFound
          - CouponPartOfNotRunningCampaign
          - CouponValidConditionMissing
          - CouponLimitReached
          - CampaignLimitReached
          - ProfileLimitReached
          - CouponRecipientDoesNotMatch
          - CouponExpired
          - CouponStartDateInFuture
          - CouponRejectedByCondition
          - EffectCouldNotBeApplied
          type: string
      required:
      - campaignId
      - couponId
      - reason
      type: object
    ReferralRejectionReason:
      description: Holds a reference to the campaign, the referral and the reason
        for which that referral was rejected. Should only be present when there is
        a 'rejectReferral' effect.
      example:
        reason: ReferralNotFound
        campaignId: 6
        referralId: 1
      properties:
        campaignId:
          type: integer
        referralId:
          type: integer
        reason:
          enum:
          - ReferralNotFound
          - ReferralRecipientIdSameAsAdvocate
          - ReferralPartOfNotRunningCampaign
          - ReferralValidConditionMissing
          - ReferralLimitReached
          - CampaignLimitReached
          - ProfileLimitReached
          - ReferralRecipientDoesNotMatch
          - ReferralExpired
          - ReferralStartDateInFuture
          - ReferralRejectedByCondition
          - EffectCouldNotBeApplied
          type: string
      required:
      - campaignId
      - reason
      - referralId
      type: object
    ApplicationAPIKey:
      properties:
        id:
          description: ID of the API Key
          type: integer
        createdBy:
          description: ID of user who created
          type: integer
        title:
          description: Title for API Key
          type: string
        accountID:
          description: ID of account the key is used for
          type: integer
        applicationID:
          description: ID of application the key is used for
          type: integer
        created:
          description: The date the API key was created
          format: date-time
          type: string
        expires:
          description: The date the API key expired
          format: date-time
          type: string
      required:
      - accountID
      - applicationID
      - created
      - createdBy
      - expires
      - id
      - title
      type: object
    NewApplicationAPIKey:
      description: ""
      properties:
        id:
          description: ID of the API Key
          type: integer
        createdBy:
          description: ID of user who created
          type: integer
        title:
          description: Title for API Key
          type: string
        accountID:
          description: ID of account the key is used for
          type: integer
        applicationID:
          description: ID of application the key is used for
          type: integer
        created:
          description: The date the API key was created
          format: date-time
          type: string
        expires:
          description: The date the API key expired
          format: date-time
          type: string
        key:
          description: Raw API Key
          type: string
      required:
      - accountID
      - applicationID
      - created
      - createdBy
      - expires
      - id
      - key
      - title
      type: object
    CreateApplicationAPIKey:
      properties:
        title:
          description: Title for API Key
          type: string
        expires:
          description: The date the API key expired
          format: date-time
          type: string
      required:
      - expires
      - title
      type: object
    Notification:
      properties:
        id:
          description: id of the notification
          type: integer
        name:
          description: name of the notification
          type: string
        description:
          description: description of the notification
          type: string
      required:
      - description
      - id
      - name
      type: object
    Notifications:
      items:
        $ref: '#/components/schemas/Notification'
      type: array
    SamlConnection:
      description: ""
      properties:
        assertionConsumerServiceURL:
          description: The location where the SAML assertion is sent with a HTTP POST.
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - accountId
      - assertionConsumerServiceURL
      - audienceURI
      - created
      - enabled
      - id
      - issuer
      - name
      - signOnURL
      type: object
    NewSamlConnection:
      description: ""
      properties:
        x509certificate:
          description: X.509 Certificate.
          minLength: 1
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
      required:
      - accountId
      - enabled
      - issuer
      - name
      - signOnURL
      - x509certificate
      type: object
    SamlConnectionMetadata:
      properties:
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        accountId:
          type: number
        metadataDocument:
          description: Identity Provider metadata XML document.
          minLength: 1
          type: string
      required:
      - accountId
      - enabled
      - metadataDocument
      - name
      type: object
    BaseSamlConnection:
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
      required:
      - accountId
      - enabled
      - issuer
      - name
      - signOnURL
      type: object
    SamlLoginEndpoint:
      properties:
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        loginURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
      required:
      - loginURL
      - name
      type: object
    Effect:
      description: ""
      example:
        rulesetId: 7
        ruleIndex: 1
        campaignId: 6
        ruleName: ruleName
        effectType: effectType
        props: '{}'
      properties:
        campaignId:
          description: The ID of the campaign that triggered this effect
          type: integer
        rulesetId:
          description: The ID of the ruleset that was active in the campaign when
            this effect was triggered
          type: integer
        ruleIndex:
          description: The position of the rule that triggered this effect within
            the ruleset
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect
          type: string
        effectType:
          description: The type of effect that was triggered
          type: string
        props:
          type: object
      required:
      - campaignId
      - effectType
      - props
      - ruleIndex
      - ruleName
      - rulesetId
      type: object
    EffectEntity:
      description: Definition of all properties that are present on all effects, independent
        of their type
      properties:
        campaignId:
          description: The ID of the campaign that triggered this effect
          type: integer
        rulesetId:
          description: The ID of the ruleset that was active in the campaign when
            this effect was triggered
          type: integer
        ruleIndex:
          description: The position of the rule that triggered this effect within
            the ruleset
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect
          type: string
        effectType:
          description: The type of effect that was triggered
          type: string
      required:
      - campaignId
      - effectType
      - ruleIndex
      - ruleName
      - rulesetId
      type: object
    EffectProps:
      type: object
    AcceptCouponEffectProps:
      description: The properties specific to the "acceptCoupon" effect. This gets
        triggered whenever the coupon is valid and all other conditions in the rules
        of its campaign are met.
      properties:
        value:
          description: The coupon code that was accepted
          type: string
      required:
      - value
      type: object
    AcceptReferralEffectProps:
      description: The properties specific to the "acceptReferral" effect. TThis gets
        triggered whenever the referral code is valid and all other conditions in
        the rules of its campaign are met.
      properties:
        value:
          description: The referral code that was accepted
          type: string
      required:
      - value
      type: object
    RedeemReferralEffectProps:
      description: The properties specific to the "redeemReferral" effect. This gets
        triggered whenever the referral code is valid, and a rule was triggered that
        contains a "redeem referral" effect.
      properties:
        id:
          description: The id of the referral code that was redeemed
          type: integer
        value:
          description: The referral code that was redeemed
          type: string
      required:
      - id
      - value
      type: object
    RejectCouponEffectProps:
      description: The properties specific to the "rejectCoupon" effect. This gets
        triggered whenever the coupon was rejected. See rejectionReason for more info
        on why.
      properties:
        value:
          description: The coupon code that was rejected
          type: string
        rejectionReason:
          description: The reason why this coupon was rejected
          type: string
      required:
      - rejectionReason
      - value
      type: object
    RejectReferralEffectProps:
      description: The properties specific to the "rejectReferral" effect. This gets
        triggered whenever the referral code was rejected. See rejectionReason for
        more info on why.
      properties:
        value:
          description: The referral code that was rejected
          type: string
        rejectionReason:
          description: The reason why this referral code was rejected
          type: string
      required:
      - rejectionReason
      - value
      type: object
    CouponCreatedEffectProps:
      description: The properties specific to the "couponCreated" effect. This gets
        triggered whenever a validated rule contained a "create coupon" effect, and
        a coupon was created for a customer. See "createdCoupons" on the response
        for all details of this coupon.
      properties:
        value:
          description: The coupon code that was created
          type: string
        profileId:
          description: The integration identifier of the customer for whom this coupon
            was created
          type: string
      required:
      - profileId
      - value
      type: object
    ReferralCreatedEffectProps:
      description: The properties specific to the "referralCreated" effect. This gets
        triggered whenever a validated rule contained a "create referral" effect,
        and a referral code was created for a customer. See "createdReferrals" on
        the response for all details of this referral code.
      properties:
        value:
          description: The referral code that was created
          type: string
      required:
      - value
      type: object
    SetDiscountEffectProps:
      description: The properties specific to the "setDiscount" effect. This gets
        triggered whenever a validated rule contained a "set discount" effect. This
        is a discount that should be applied globally on the session total.
      properties:
        name:
          description: The name/description of this discount
          type: string
        value:
          description: The total monetary value of the discount
          type: number
      required:
      - name
      - value
      type: object
    SetDiscountPerItemEffectProps:
      description: The properties specific to the "setDiscountPerItem" effect. This
        gets triggered whenever a validated rule contained a "set per item discount"
        effect. This is a discount that should be applied on a specific item.
      properties:
        name:
          description: The name/description of this discount
          type: string
        value:
          description: The total monetary value of the discount
          type: number
        position:
          description: The index of the item in the cart items list on which this
            discount should be applied
          type: number
      required:
      - name
      - position
      - value
      type: object
    TriggerWebhookEffectProps:
      description: The properties specific to the "triggerWebhook" effect. This gets
        triggered whenever a validated rule contained a "trigger webhook" effect.
        This is communicated as an FYI and should usually not require action on your
        side.
      properties:
        webhookId:
          description: The ID of the webhook that was triggered
          type: number
        webhookName:
          description: The name of the webhook that was triggered
          type: string
      required:
      - webhookId
      - webhookName
      type: object
    AddLoyaltyPointsEffectProps:
      description: The properties specific to the "addLoyaltyPoints" effect. This
        gets triggered whenever a validated rule contained an "add loyalty" effect.
        These points are automatically stored and managed inside Talon.One.
      properties:
        name:
          description: The name/description of this loyalty point addition
          type: string
        programId:
          description: The ID of the loyalty program where these points were added
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were added
          type: string
        value:
          description: The amount of points that were added
          type: number
        recipientIntegrationId:
          description: The user for whom these points were added
          type: string
        expiryCondition:
          description: The amount of time (in days) these points are valid
          type: string
      required:
      - expiryCondition
      - name
      - programId
      - recipientIntegrationId
      - subLedgerId
      - value
      type: object
    DeductLoyaltyPointsEffectProps:
      description: The properties specific to the "deductLoyaltyPoints" effect. This
        gets triggered whenever a validated rule contained a condition to only trigger
        when the given number of loyalty points could be deduced. These points are
        automatically stored and managed inside Talon.One.
      properties:
        ruleTitle:
          description: The title of the rule that contained triggered this points
            deduction
          type: string
        programId:
          description: The ID of the loyalty program where these points were added
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were added
          type: string
        value:
          description: The amount of points that were deducted
          type: number
      required:
      - programId
      - ruleTitle
      - subLedgerId
      - value
      type: object
    AddFreeItemEffectProps:
      description: The properties specific to the "addFreeItem" effect. This gets
        triggered whenever a validated rule contained an "add free item" effect.
      properties:
        sku:
          description: SKU of the item that needs to be added
          type: string
        name:
          description: The name/description of the effect
          type: string
      required:
      - name
      - sku
      type: object
    ShowNotificationEffectProps:
      description: The properties specific to the "showNotification" effect. This
        gets triggered whenever a validated rule contained a "show notification" effect.
      properties:
        notificationType:
          description: The type of notification that should be shown (e.g. error/warning/info)
          type: string
        title:
          description: Title of the notification
          type: string
        body:
          description: Body of the notification
          type: string
      required:
      - body
      - notificationType
      - title
      type: object
    UpdateAttributeEffectProps:
      description: The properties specific to the "updateAttribute" effect. This gets
        triggered whenever a validated rule contained an "update an attribute" effect.
      properties:
        path:
          description: The exact path of the attribute that was updated
          type: string
        value:
          description: The new value of this attribute. Value can be any of the following
            types (time, string, number, location, boolean) or a list of any of those
            types
          type: object
      required:
      - path
      - value
      type: object
    RollbackCouponEffectProps:
      description: The properties specific to the "rollbackCoupon" effect. This gets
        triggered whenever previously closed session is now cancelled and a coupon
        redemption was cancelled on our internal usage limit counters.
      properties:
        value:
          description: The coupon code whose usage has been rolled back
          type: string
      required:
      - value
      type: object
    RollbackDiscountEffectProps:
      description: The properties specific to the "rollbackDiscount" effect. This
        gets triggered whenever previously closed session is now cancelled and a setDiscount
        effect was cancelled on our internal discount limit counters.
      properties:
        name:
          description: The name of the "setDiscount" effect that was rolled back
          type: string
        value:
          description: The value of the discount that was rolled back
          type: number
      required:
      - name
      - value
      type: object
    ShowBundleMetadataEffectProps:
      description: The properties specific to the "ShowBundleMetadata" effect. This
        effect contains information that allows you to associate the discounts from
        a rule in a bundle campaign with specific cart items. This way you can distinguish
        from "normal" discounts that were not the result of a product bundle.
      properties:
        description:
          description: Description of the product bundle
          type: string
        bundleAttributes:
          description: The cart item attributes that determined which items are being
            bundled together
          items:
            type: string
          type: array
        itemsIndices:
          description: The indices in the cart items array of the bundled items
          items:
            type: number
          type: array
      required:
      - bundleAttributes
      - description
      - itemsIndices
      type: object
    ErrorEffectProps:
      description: Whenever an error occurred during evaluation, we return an error
        effect. This should never happen for rules created in the rule builder.
      properties:
        message:
          description: The error message.
          type: string
      required:
      - message
      type: object
    IntegrationRequest:
      description: The body of a V2 integration API request (customer session update).
        Next to the customer session details, this contains an optional listing of
        extra properties that should be returned in the response.
      example:
        customerSession:
          couponCodes:
          - couponCodes
          - couponCodes
          additionalCosts:
            key:
              price: 6.027456183070403
          profileId: profileId
          identifiers:
          - identifiers
          - identifiers
          referralCode: referralCode
          attributes: '{}'
          state: open
          cartItems:
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
        responseContent:
        - customerSession
        - customerSession
      properties:
        customerSession:
          $ref: '#/components/schemas/NewCustomerSessionV2'
        responseContent:
          description: |
            Optional list of requested information to be present on the response related to the customer session update. Currently supported: "customerSession", "customerProfile", "coupons", "triggeredCampaigns", "referral", "loyalty" and "event".
          items:
            enum:
            - customerSession
            - customerProfile
            - coupons
            - triggeredCampaigns
            - referral
            - loyalty
            - event
            type: string
          type: array
      required:
      - customerSession
      type: object
    inline_response_200:
      example:
        data:
        - accountId: 1
          closedSessions: 1
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 6.84685269835264
          lastActivity: 2000-01-23T04:56:07.000+00:00
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        - accountId: 1
          closedSessions: 1
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 6.84685269835264
          lastActivity: 2000-01-23T04:56:07.000+00:00
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CustomerProfile'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_1:
      example:
        data:
        - created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          description: description
          attributesSettings:
            mandatory:
              campaigns:
              - campaigns
              - campaigns
              coupons:
              - coupons
              - coupons
          caseSensitivity: sensitive
          accountId: 1
          campaignPriority: universal
          loyaltyPrograms:
          - accountID: 5
            defaultValidity: defaultValidity
            allowSubledger: true
            name: name
            description: description
            id: 5
            title: title
            subscribedApplications:
            - 2
            - 2
          - accountID: 5
            defaultValidity: defaultValidity
            allowSubledger: true
            name: name
            description: description
            id: 5
            title: title
            subscribedApplications:
            - 2
            - 2
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          currency: currency
          attributes: '{}'
          id: 6
          limits:
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
        - created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          description: description
          attributesSettings:
            mandatory:
              campaigns:
              - campaigns
              - campaigns
              coupons:
              - coupons
              - coupons
          caseSensitivity: sensitive
          accountId: 1
          campaignPriority: universal
          loyaltyPrograms:
          - accountID: 5
            defaultValidity: defaultValidity
            allowSubledger: true
            name: name
            description: description
            id: 5
            title: title
            subscribedApplications:
            - 2
            - 2
          - accountID: 5
            defaultValidity: defaultValidity
            allowSubledger: true
            name: name
            description: description
            id: 5
            title: title
            subscribedApplications:
            - 2
            - 2
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          currency: currency
          attributes: '{}'
          id: 6
          limits:
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Application'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_2:
      example:
        data:
        - discountCount: 1
          description: description
          features:
          - coupons
          - coupons
          - coupons
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          activeRulesetId: 3
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          couponRedemptionCount: 4
          userId: 9
          couponCreationCount: 1
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          discountEffectCount: 1
          createdBy: createdBy
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 7
          referralRedemptionCount: 7
          updated: 2000-01-23T04:56:07.000+00:00
        - discountCount: 1
          description: description
          features:
          - coupons
          - coupons
          - coupons
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          - entities:
            - Coupon
            - Coupon
            limit: 0.20271230230023218
            action: redeemCoupon
          activeRulesetId: 3
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          couponRedemptionCount: 4
          userId: 9
          couponCreationCount: 1
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          discountEffectCount: 1
          createdBy: createdBy
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 7
          referralRedemptionCount: 7
          updated: 2000-01-23T04:56:07.000+00:00
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_3:
      example:
        data:
        - rbVersion: rbVersion
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 1
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
          - expression:
            - '{}'
            - '{}'
            name: name
          activatedAt: 2000-01-23T04:56:07.000+00:00
          activate: true
          rules:
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
            - expression:
              - '{}'
              - '{}'
              name: name
            description: description
            title: title
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
            - expression:
              - '{}'
              - '{}'
              name: name
            description: description
            title: title
          id: 6
          userId: 5
        - rbVersion: rbVersion
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 1
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
          - expression:
            - '{}'
            - '{}'
            name: name
          activatedAt: 2000-01-23T04:56:07.000+00:00
          activate: true
          rules:
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
            - expression:
              - '{}'
              - '{}'
              name: name
            description: description
            title: title
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
            - expression:
              - '{}'
              - '{}'
              name: name
            description: description
            title: title
          id: 6
          userId: 5
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Ruleset'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_4:
      example:
        data:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_5:
      example:
        data:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 594488
          referralId: 0
          usageCounter: 3
          batchId: batchId
          discountCounter: 3.0937452626664474
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 7
          reservation: true
          attributes: '{}'
          id: 6
          value: value
          discountLimit: 670401.2593930737
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 7.143538047012306
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_6:
      example:
        data:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_7:
      example:
        data:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          code: code
          friendProfileIntegrationId: friendProfileIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 6
          usageLimit: 0
          id: 0
          usageCounter: 1
          advocateProfileIntegrationId: advocateProfileIntegrationId
          startDate: 2000-01-23T04:56:07.000+00:00
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_8:
      example:
        data:
        - accountID: 5
          defaultValidity: defaultValidity
          allowSubledger: true
          name: name
          description: description
          id: 5
          title: title
          subscribedApplications:
          - 2
          - 2
        - accountID: 5
          defaultValidity: defaultValidity
          allowSubledger: true
          name: name
          description: description
          id: 5
          title: title
          subscribedApplications:
          - 2
          - 2
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_9:
      example:
        data:
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 6
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 6
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AccessLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_10:
      example:
        data:
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 6
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 6
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/AccessLogEntry'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_11:
      example:
        data:
        - date: 2000-01-23T04:56:07.000+00:00
          couponRolledbackRedemptions: 1
          totalCouponRolledbackRedemptions: 1
          campaignRefundedDiscounts: 9.301444243932576
          campaignFreeItems: 2
          totalCampaignFreeItems: 4
          totalCampaignRefundedDiscounts: 3.616076749251911
          couponRedemptions: 7
          totalCampaignDiscountCosts: 7.061401241503109
          referralRedemptions: 6
          totalCampaignRevenue: 1.4658129805029452
          campaignRevenue: 6.027456183070403
          campaignDiscountCosts: 2.3021358869347655
          totalCampaignRefund: 5.637376656633329
          totalCouponsCreated: 4
          totalCouponRedemptions: 1
          totalReferralRedemptions: 7
          couponsCreated: 1
          referralsCreated: 5
          totalReferralsCreated: 9
          campaignRefund: 5.962133916683182
        - date: 2000-01-23T04:56:07.000+00:00
          couponRolledbackRedemptions: 1
          totalCouponRolledbackRedemptions: 1
          campaignRefundedDiscounts: 9.301444243932576
          campaignFreeItems: 2
          totalCampaignFreeItems: 4
          totalCampaignRefundedDiscounts: 3.616076749251911
          couponRedemptions: 7
          totalCampaignDiscountCosts: 7.061401241503109
          referralRedemptions: 6
          totalCampaignRevenue: 1.4658129805029452
          campaignRevenue: 6.027456183070403
          campaignDiscountCosts: 2.3021358869347655
          totalCampaignRefund: 5.637376656633329
          totalCouponsCreated: 4
          totalCouponRedemptions: 1
          totalReferralRedemptions: 7
          couponsCreated: 1
          referralsCreated: 5
          totalReferralsCreated: 9
          campaignRefund: 5.962133916683182
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CampaignAnalytics'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_12:
      example:
        data:
        - accountId: 1
          closedSessions: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 5.637376656633329
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        - accountId: 1
          closedSessions: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 5.637376656633329
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ApplicationCustomer'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_13:
      example:
        data:
        - accountId: 1
          closedSessions: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 5.637376656633329
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        - accountId: 1
          closedSessions: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes: '{}'
          totalSales: 5.637376656633329
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 7
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationCustomer'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_14:
      example:
        data:
        - couponUseAttempts: 5
          created: 2000-01-23T04:56:07.000+00:00
          totalOrdersNoCoupon: 3
          integrationId: integrationId
          couponRedemptions: 1
          couponFailedAttempts: 5
          accruedRevenue: 7.061401241503109
          name: name
          customerId: 6
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 9
          campaignName: campaignName
          accruedDiscounts: 2.3021358869347655
        - couponUseAttempts: 5
          created: 2000-01-23T04:56:07.000+00:00
          totalOrdersNoCoupon: 3
          integrationId: integrationId
          couponRedemptions: 1
          couponFailedAttempts: 5
          accruedRevenue: 7.061401241503109
          name: name
          customerId: 6
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 9
          campaignName: campaignName
          accruedDiscounts: 2.3021358869347655
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CustomerActivityReport'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_15:
      example:
        data:
        - couponUseAttempts: 5
          created: 2000-01-23T04:56:07.000+00:00
          totalOrdersNoCoupon: 3
          integrationId: integrationId
          couponRedemptions: 1
          couponFailedAttempts: 5
          accruedRevenue: 7.061401241503109
          name: name
          customerId: 6
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 9
          campaignName: campaignName
          accruedDiscounts: 2.3021358869347655
        - couponUseAttempts: 5
          created: 2000-01-23T04:56:07.000+00:00
          totalOrdersNoCoupon: 3
          integrationId: integrationId
          couponRedemptions: 1
          couponFailedAttempts: 5
          accruedRevenue: 7.061401241503109
          name: name
          customerId: 6
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 9
          campaignName: campaignName
          accruedDiscounts: 2.3021358869347655
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/CustomerActivityReport'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_16:
      example:
        data:
        - coupon: coupon
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          profileintegrationid: profileintegrationid
          total: 5.637376656633329
          referral: referral
          discounts:
            key: 5.962133916683182
          profileId: 1
          attributes: '{}'
          id: 0
          state: open
          applicationId: 6
          cartItems:
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
        - coupon: coupon
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          profileintegrationid: profileintegrationid
          total: 5.637376656633329
          referral: referral
          discounts:
            key: 5.962133916683182
          profileId: 1
          attributes: '{}'
          id: 0
          state: open
          applicationId: 6
          cartItems:
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
          - quantity: 1
            price: 1.4658129805029452
            name: name
            width: 2.3021358869347655
            length: 7.061401241503109
            weight: 5.962133916683182
            attributes: '{}'
            adjustment:
              pointPayment: 1
              remainingPrice: 0.4145608029883936
              payFromLoyaltyProgram: 3
            position: 9.301444243932576
            sku: sku
            category: category
            height: 5.637376656633329
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationSession'
          type: array
      required:
      - data
    inline_response_200_17:
      example:
        data:
        - effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: 5
          attributes: '{}'
          id: 6
          sessionId: 5
          applicationId: 1
          type: type
        - effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: 5
          attributes: '{}'
          id: 6
          sessionId: 5
          applicationId: 1
          type: type
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ApplicationEvent'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_18:
      example:
        data:
        - effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: 5
          attributes: '{}'
          id: 6
          sessionId: 5
          applicationId: 1
          type: type
        - effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: 5
          attributes: '{}'
          id: 6
          sessionId: 5
          applicationId: 1
          type: type
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationEvent'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_19:
      example:
        data:
        - data
        - data
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            type: string
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_20:
      example:
        data:
        - accountId: 1
          created: 2000-01-23T04:56:07.000+00:00
          editable: true
          name: name
          subscribedApplicationsIds:
          - 5
          - 5
          description: description
          suggestions:
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          id: 6
          eventType: eventType
          title: title
          type: string
          entity: Account
        - accountId: 1
          created: 2000-01-23T04:56:07.000+00:00
          editable: true
          name: name
          subscribedApplicationsIds:
          - 5
          - 5
          description: description
          suggestions:
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          id: 6
          eventType: eventType
          title: title
          type: string
          entity: Account
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_21:
      example:
        data:
        - accountId: 1
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subscribedApplicationsIds:
          - 5
          - 5
          description: description
          id: 6
          title: title
        - accountId: 1
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subscribedApplicationsIds:
          - 5
          - 5
          description: description
          id: 6
          title: title
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AccountAdditionalCost'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_22:
      example:
        data:
        - headers:
          - headers
          - headers
          payload: payload
          created: 2000-01-23T04:56:07.000+00:00
          verb: POST
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          title: title
          params:
          - ui: '{}'
            description: description
            type: string
            title: title
          - ui: '{}'
            description: description
            type: string
            title: title
          url: url
          enabled: true
          applicationIds:
          - 1
          - 1
        - headers:
          - headers
          - headers
          payload: payload
          created: 2000-01-23T04:56:07.000+00:00
          verb: POST
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          title: title
          params:
          - ui: '{}'
            description: description
            type: string
            title: title
          - ui: '{}'
            description: description
            type: string
            title: title
          url: url
          enabled: true
          applicationIds:
          - 1
          - 1
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_23:
      example:
        data:
        - webhookId: 6
          campaignId: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          applicationId: 1
        - webhookId: 6
          campaignId: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          applicationId: 1
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WebhookActivationLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_24:
      example:
        data:
        - requestTime: 2000-01-23T04:56:07.000+00:00
          request: request
          webhookId: 6
          response: response
          responseTime: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          id: id
          applicationId: 1
          url: url
          status: 5
        - requestTime: 2000-01-23T04:56:07.000+00:00
          request: request
          webhookId: 6
          response: response
          responseTime: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          id: id
          applicationId: 1
          url: url
          status: 5
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WebhookLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_25:
      example:
        data:
        - schema: '{}'
          handler: handler
          examplePayload: examplePayload
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 6
          mimeType: application/json
          handlerLanguage: talang
          title: title
          version: 5
          applicationIds:
          - 1
          - 1
        - schema: '{}'
          handler: handler
          examplePayload: examplePayload
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 6
          mimeType: application/json
          handlerLanguage: talang
          title: title
          version: 5
          applicationIds:
          - 1
          - 1
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_26:
      example:
        data:
        - releaseUpdate: true
          created: 2000-01-23T04:56:07.000+00:00
          roles:
          - 5
          - 5
          accountId: 1
          applicationNotificationSubscriptions: '{}'
          inviteToken: inviteToken
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          state: invited
          authMethod: authMethod
          latestFeature: latestFeature
          email: email
          policy: policy
        - releaseUpdate: true
          created: 2000-01-23T04:56:07.000+00:00
          roles:
          - 5
          - 5
          accountId: 1
          applicationNotificationSubscriptions: '{}'
          inviteToken: inviteToken
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          state: invited
          authMethod: authMethod
          latestFeature: latestFeature
          email: email
          policy: policy
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_27:
      example:
        data:
        - new: '{}'
          created: 2000-01-23T04:56:07.000+00:00
          old: '{}'
          id: 6
          userId: 1
          entity: entity
        - new: '{}'
          created: 2000-01-23T04:56:07.000+00:00
          old: '{}'
          id: 6
          userId: 1
          entity: entity
        hasMore: true
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Change'
          type: array
      required:
      - data
    inline_response_200_28:
      example:
        data:
        - filter: '{}'
          accountId: 1
          created: 2000-01-23T04:56:07.000+00:00
          id: 6
          userId: 5
          entity: Coupon
        - filter: '{}'
          accountId: 1
          created: 2000-01-23T04:56:07.000+00:00
          id: 6
          userId: 5
          entity: Coupon
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Export'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_29:
      example:
        data:
        - accountId: 1
          amount: 0
          created: 2000-01-23T04:56:07.000+00:00
          id: 6
          userId: 5
          entity: Coupon
        - accountId: 1
          amount: 0
          created: 2000-01-23T04:56:07.000+00:00
          id: 6
          userId: 5
          entity: Coupon
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Import'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_30:
      example:
        data:
        - accountID: 1
          members:
          - 5
          - 5
          name: name
          description: description
          id: 6
          acl: acl
        - accountID: 1
          members:
          - 5
          - 5
          name: name
          description: description
          id: 6
          acl: acl
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Role'
          type: array
      required:
      - data
      - totalResultSize
  securitySchemes:
    integration_auth:
      description: Requests are signed using the secret key of an Application.
      in: header
      name: Content-Signature
      type: apiKey
    api_key_v1:
      description: Ephemeral apikey authorization.
      in: header
      name: Authorization
      type: apiKey
    manager_auth:
      description: |
        The Management API operations use a simple bearer token to authenticate requests. You can obtain a bearer token from your credentials using the [createSession](#createSession) operation. This `token` property of the session is used to authenticate Campaign Manager requests with an HTTP header like `Authorization: Bearer $TOKEN`.
      in: header
      name: Authorization
      type: apiKey
