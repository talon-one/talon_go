openapi: 3.0.1
info:
  description: |
    The Talon.One API is used to manage applications and campaigns, as well as to
    integrate with your application. The operations in the _Integration API_ section
    are used to integrate with our platform, while the other operations are
    used to manage applications and campaigns.

    ### Where is the API?

    The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`

    [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put
  title: Talon.One API
  version: 1.0.0
servers:
- url: /
security:
- manager_auth: []
tags:
- description: |
    Operations for updating account information such as billing email addresses, inviting users, etc.
  name: Accounts and users
- description: |
    Analytics are used to retrieve statistical data about the performance of campaigns within an application.
  name: Analytics
- description: |
    Every request to the Integration API comes from an application.

    An application is typically an e-commerce site, a mobile app, or some other source of customer actions.

    An application is the owner of the API key used to send integration data.
    You may have multiple applications within one account, for example staging and production, or different international markets.
  name: Applications
- description: |
    Represents an arbitrary group of customer profiles grouped by mParticle.
  name: Audiences
- description: |
    Campaigns are the primary resource used to control the behavior of the Talon.One Rule Engine. They combine rulesets, coupons, and limits into a single unit.
  name: Campaigns
- description: |
    Coupons are unique codes belonging to a particular campaign. They don't define any behavior on their own, instead the campaign ruleset can include rules that validate coupons and carry out particular effects.
  name: Coupons
- description: |
    Represents the data of a customer, including sessions and events used for reporting and debugging in the Campaign Manager.
  name: Customer data
- description: |
    Represents the customer's information. For instance, their contact information.
  name: Customer profiles
- description: |
    Represents the data related to a customer session. Typically, a customer session is the value and content of the customer's cart.
    Sessions can be anonymous or linked to a customer profile and they have a life cycle from `open` to `closed`.
    In general, a session is closed when the customer completes the checkout step.
  name: Customer sessions
- description: Operations to alter the data model and Rule Engine to better suit Talon.One
    to the needs of your business.
  name: Customization
- description: |
    Represents a single occurrence of various customer actions.
    Each customer session contains one or more events. For example, updating a customer session records a `talon_session_updated` event.
  name: Events
- description: |
    Represents a program that rewards customers with giveaways, such as free gift cards.
  name: Giveaways
- description: |
    Represents set of string values that can be used in rule conditions.
  name: Collections
- description: |
    Use the Integration API to push data to and retrieve data from the Talon.One platform.

    For example, use this API to share shopping cart information as a session with Talon.One and evaluate promotion
    rules. You can also create custom events to track specific actions that do not fit into the session data model.

    Ensure you [authenticate](#section/Authentication) to make requests to the API.

    **Note:** To programmatically do what the Campaign Manager does,
    see the [Management API](/management-api).
  name: Integration API
- description: |
    Operations to query the Talon.One logs. They contain all incoming and outgoing requests.
  name: Logs
- description: |
    Represents a way to manage point wallets and subledgers.
  name: Loyalty
- description: |
    The Talon.One Management API is the channel between the Campaign Manager and the Rule Engine.

    Use the Management API to programmatically do what the Campaign Manager does.
    For example, use it for management purposes and backoffice systems.

    Ensure you [authenticate](#section/Authentication) to make requests to the API.

    **Warning:** This API is not meant to be used in real-time integrations that directly serve your end users.

    To send external data to and retrieve data from Talon.One in real-time integrations,
    use the [Integration API](/integration-api) instead.
  name: Management API
- description: |
    A referral is a code shared between a customer and a prospect.
    A referral is defined by an advocate, a friend and a referral code. The advocate is the person who
    invited their friend via referral program. The friend is the person who receives the invite from an advocate.
    The referral code is a code which is generated similar to a coupon code the code can be redeemed by
    either one or multiple advocates.
  name: Referrals
- description: |
    Represents a set of permissions assigned to a user.
  name: Roles
- description: |
    Represents a session used for authentication purposes.
    Create one with the [Create session](#operation/createSession) endpoint.
  name: Sessions
paths:
  /v2/customer_sessions/{customerSessionId}:
    put:
      description: |
        Update or create a [customer session](/docs/dev/concepts/entities#customer-session).
        For example, use this endpoint to share the content of a customer's cart with Talon.One and to check which
        promotion rules apply.

        **Note:** The currency for the session and the cart items in the session is the same as the
        Application that owns this session.

        **Session management**

        The Talon.One platform supports multiple simultaneous sessions for the same profile. If you have multiple ways of accessing the same Application you can either:

        - Track multiple independent sessions or,
        - Use the same session across all of them.

        You should share sessions when application access points share other state, such as the user's cart.
        If two points of access to the application have independent states, for example a user can have different
        items in their cart across the two) they should use independent customer session ID's.

        See more information and tips about session management in [Entities](/docs/dev/concepts/entities#customer-session).

        **Sessions and customer profiles**

        To link a session to a customer profile, set the `profileId` parameter in the request body to a customer profile's `integrationId`.
        To track an anonymous session use the empty string (`""`) as the `profileId`.
        **Note:** You do **not** have to create a customer profile first. If the specified profile does not exist, an empty profile is created automatically.

        **Performance tips**

        Updating a customer session returns a response with the requested integration state.

        You can use the `responseContent` property to save yourself extra API calls. For example, you can get
        the customer profile details directly without extra requests.

        You can also set `runRuleEngine` to `false` to prevent unwanted rule executions. This allows you to
        improve response times.

        If `runRuleEngine` is set to `true`, the response also includes:

        - The effects generated by the triggered campaigns.
        - The created coupons and referral objects.

        For more information, see the [integration tutorial](https://docs.talon.one/docs/dev/tutorials/integrating-talon-one).
      operationId: updateCustomerSessionV2
      parameters:
      - description: Indicates whether to persist the changes. Changes are ignored
          when `dry=true`.
        in: query
        name: dry
        schema:
          type: boolean
      - description: The custom identifier for this session, must be unique within
          the account.
        in: path
        name: customerSessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationStateV2'
          description: OK
      security:
      - api_key_v1: []
      summary: Update customer session
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/customer_profiles:
    put:
      description: |
        Update (or create) up to 1000 [customer profiles](/docs/dev/concepts/entities#customer-profile) in 1 request.

        The `integrationId` must be any identifier that remains stable for
        the customer. Do not use an ID that the customer can update
        themselves. For example, you can use a database ID.

        A customer profile [can be linked to one or more sessions](/integration-api/#tag/Customer-sessions).
      operationId: updateCustomerProfilesV2
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomerProfileIntegrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleCustomerProfileIntegrationResponseV2'
          description: OK
      security:
      - api_key_v1: []
      summary: Update multiple customer profiles
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/customer_profiles/{integrationId}:
    put:
      description: |
        Update (or create) a [Customer Profile](/docs/dev/concepts/entities#customer-profile).

        The `integrationId` must be any identifier that remains stable for
        the customer. Do not use an ID that the customer can update
        themselves. For example, you can use a database ID.

        **Performance tips**

        Updating a customer profile returns a response with the requested integration state.

        You can use the `responseContent` property to save yourself extra API calls. For example, you can get
        the customer profile details directly without extra requests.

        You can also set `runRuleEngine` to `false` to prevent unwanted rule executions. This allows you to
        improve response times.

        If `runRuleEngine` is set to `true`, the response includes:

        - The effects generated by the triggered campaigns.
        - The created coupons and referral objects.
      operationId: updateCustomerProfileV2
      parameters:
      - description: The custom identifier for this profile. Must be unique within
          the account.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      - description: Indicates whether to run the rule engine. Setting this property
          to `false` improves response times.
        in: query
        name: runRuleEngine
        schema:
          default: false
          type: boolean
      - description: |
          Indicates whether to persist the changes. Changes are ignored when `dry=true`.
          Only used when `runRuleEngine` is set to `true`.
        in: query
        name: dry
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileIntegrationRequestV2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationStateV2'
          description: OK
      security:
      - api_key_v1: []
      summary: Update customer profile
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audiences:
    post:
      description: |
        Create an Audience.
        Only use this endpoint to sync existing audiences from other platforms through a 3rd party integration.

        Once you create your first audience, new audience-specific rule conditions are enabled in the Rule Builder.

        **Important:** The authentication requires an mParticle API key instead of a Talon.One API key.
      operationId: createAudienceV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAudience'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
          description: Created
      security:
      - api_key_v1: []
      summary: Create audience
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audiences/{audienceId}:
    delete:
      description: |
        Delete an audience created by a third-party integration.

        **Warning:** This endpoint also removes any associations recorded between a customer profile and this audience.

        **Important:** The authentication requires an mParticle API key instead of a Talon.One API key.
      operationId: deleteAudienceV2
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete audience
      tags:
      - integration
    put:
      description: |
        Update an Audience created by a third-party integration.

        **Important:** The authentication requires an mParticle API key instead of a Talon.One API key.
      operationId: updateAudienceV2
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAudience'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
          description: OK
      security:
      - api_key_v1: []
      summary: Update audience
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audiences/{audienceId}/memberships:
    delete:
      description: |
        Remove all members from this audience.

        **Important:** The authentication requires an mParticle API key instead of a Talon.One API key.
      operationId: deleteAudienceMembershipsV2
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete audience memberships
      tags:
      - integration
  /v2/customer_audiences:
    post:
      description: |
        Update one or multiple customer profiles with the specified audiences.

        **Important:** The authentication requires an mParticle API key instead of a Talon.One API key.
      operationId: updateCustomerProfileAudiences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileAudienceRequest'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - api_key_v1: []
      summary: Update multiple customer profiles' audiences
      tags:
      - integration
      x-codegen-request-body-name: body
  /v2/audience_customers/{audienceId}/attributes:
    put:
      description: |
        Update the specified profile attributes to the provided value for all customers in the specified audience.

        **Important:** The authentication requires an mParticle API key instead of a Talon.One API key.
      operationId: updateAudienceCustomersAttributes
      parameters:
      - description: The ID of the audience. You get it via the `id` property when
          [creating an audience](#operation/createAudienceV2).
        in: path
        name: audienceId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - api_key_v1: []
      summary: Update profile attributes for all customers in audience
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/events:
    post:
      description: |
        Records an arbitrary event in a customer session. For example, an integration might record an event when a user updates their payment information.

        The `sessionId` body parameter is required, an event is always part of a session. Much like updating a customer session, if either the profile or the session do not exist, a new empty one will be created. Note that if the specified session already exists, it must belong to the same `profileId` or an error will be returned.

        As with customer sessions, you can use an empty string for `profileId` to indicate that this is an anonymous session.

        Updating a customer profile will return a response with the full integration state. This includes the current state of the customer profile, the customer session, the event that was recorded, and an array of effects that took place.
      operationId: trackEvent
      parameters:
      - description: Indicates whether to persist the changes. Changes are ignored
          when `dry=true`.
        in: query
        name: dry
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEvent'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationState'
          description: Created
      security:
      - api_key_v1: []
      summary: Track an Event
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/referrals:
    post:
      description: |
        Creates a referral code for an advocate. The code will be valid for the referral campaign for which is created, indicated in the `campaignId` parameter, and will be associated with the profile specified in the `advocateProfileIntegrationId` parameter as the advocate's profile.
      operationId: createReferral
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReferral'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: Created
      security:
      - api_key_v1: []
      summary: Create referral code for an advocate
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/referrals_for_multiple_advocates:
    post:
      description: |
        Creates unique referral codes for multiple advocates. The code will be valid for the referral campaign for which it is created, indicated in the `campaignId` parameter, and one referral code will be associated with one advocate using the profile specified in the `advocateProfileIntegrationId` parameter as the advocate's profile.
      operationId: createReferralsForMultipleAdvocates
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReferralsForMultipleAdvocates'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
          description: Created
        "204":
          content: {}
          description: No Content
      security:
      - api_key_v1: []
      summary: Create referral codes for multiple advocates
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/customer_data/{integrationId}:
    delete:
      description: |
        Delete all attributes on the customer profile and on entities that reference that customer profile.
      operationId: deleteCustomerData
      parameters:
      - description: The custom identifier for this profile, must be unique within
          the account.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - api_key_v1: []
      summary: Delete the personal data of a customer
      tags:
      - integration
  /v1/coupon_reservations/{couponValue}:
    delete:
      description: |
        Remove all passed customer profiles reservation from this coupon.
      operationId: deleteCouponReservation
      parameters:
      - description: The value of a coupon
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponReservations'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      security:
      - api_key_v1: []
      summary: Delete coupon reservations
      tags:
      - integration
      x-codegen-request-body-name: body
    post:
      description: |
        Create a coupon reservation for specified customer profiles on the specified coupon.

        Reserving a coupon allows you to associate a coupon code to a given customer(s).
        You can then list the reserved coupons of a given customer
        with the [List customer data endpoint](/integration-api/#operation/getCustomerInventory).

        If a coupon gets created for a specific user, it will automatically show up in their coupons.

        When a user redeems a coupon, a reservation is automatically created after the redemption and
        the used coupon will be returned in the [List customer data endpoint](/integration-api/#operation/getCustomerInventory).

        **Important:** This endpoint doesn't create a **strict** reservation. _Any_ customer
        can use a reserved coupon code and proceed to checkout.

        For example, you can use this endpoint and `List customer data` to create a "coupon wallet" by
        reserving coupon codes for a customer, and then displaying their "coupon wallet"
        when they visit your store.
      operationId: createCouponReservation
      parameters:
      - description: The value of a coupon
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponReservations'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: Created
      security:
      - api_key_v1: []
      summary: Create coupon reservation
      tags:
      - integration
      x-codegen-request-body-name: body
  /v1/coupon_reservations/customerprofiles/{couponValue}:
    get:
      description: |
        Return all users that have this coupon marked as reserved.
      operationId: getReservedCustomers
      parameters:
      - description: The value of a coupon
        in: path
        name: couponValue
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OK
      security:
      - api_key_v1: []
      summary: List users that have this coupon reserved
      tags:
      - integration
  /v1/customer_profiles/{integrationId}/inventory:
    get:
      description: |
        Return the customer inventory regarding entities referencing this customer profile's `integrationId`.

        Typical entities returned are: customer profile information, referral codes, loyalty points and reserved coupons.
        Reserved coupons also include redeemed coupons.
      operationId: getCustomerInventory
      parameters:
      - description: |
          The custom identifier for this profile, must be unique within the account.

          To get the `integrationId` of the profile from a `sessionId`, use the
          [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      - description: Set to `true` to include customer profile information in the
          response.
        in: query
        name: profile
        schema:
          type: boolean
      - description: Set to `true` to include referral information in the response.
        in: query
        name: referrals
        schema:
          type: boolean
      - description: Set to `true` to include coupon information in the response.
        in: query
        name: coupons
        schema:
          type: boolean
      - description: Set to `true` to include loyalty information in the response.
        in: query
        name: loyalty
        schema:
          type: boolean
      - description: Set to `true` to include giveaways information in the response.
        in: query
        name: giveaways
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInventory'
          description: OK
      security:
      - api_key_v1: []
      summary: List data associated with a specific customer profile
      tags:
      - integration
  /v1/applications:
    get:
      description: List all application in the current account.
      operationId: getApplications
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: OK
      summary: List Applications
      tags:
      - management
  /v1/applications/{applicationId}:
    get:
      description: Get the application specified by the ID.
      operationId: getApplication
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
      summary: Get Application
      tags:
      - management
  /v1/applications/{applicationId}/campaigns:
    get:
      description: |
        List the campaigns of the specified application that match your filter criteria.
      operationId: getCampaigns
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Capmaigns that are expired.
          - `archived`: Campaigns that are archived.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      - description: Filter results performing case-insensitive matching against the
          name of the campaign.
        in: query
        name: name
        schema:
          type: string
      - description: |
          Filter results performing case-insensitive matching against the tags of the campaign. When used in conjunction with the "name" query parameter, a logical OR will be performed to search both tags and name for the provided values
        in: query
        name: tags
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the campaign creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the campaign creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter results to campaigns owned by the specified campaign group
          ID.
        in: query
        name: campaignGroupId
        schema:
          type: integer
      - description: The ID of the Campaign Template this Campaign was created from.
        in: query
        name: templateId
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: List campaigns
      tags:
      - management
    post:
      description: |
        Create a campaign. A campaign is part of an Application and contains a set of promotion rules.
      operationId: createCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCampaign'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: Created
      summary: Create campaign
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}:
    delete:
      description: Delete the given campaign.
      operationId: deleteCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete campaign
      tags:
      - management
    get:
      description: Retrieve the given campaign.
      operationId: getCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: OK
      summary: Get campaign
      tags:
      - management
    put:
      description: Update the given campaign.
      operationId: updateCampaign
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: OK
      summary: Update campaign
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/copy:
    post:
      description: Copy the campaign into every specified application.
      operationId: copyCampaignToApplications
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCopy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: Copy the campaign into every specified application
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns_search:
    post:
      description: |
        Get a list of all the campaigns that match a set of attributes.
      operationId: getCampaignByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Capmaigns that are expired.
          - `archived`: Campaigns that are archived.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: OK
      summary: List campaigns that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets:
    get:
      description: |
        List all rulesets of this campaign. A ruleset is a revision of the rules of a campaign.
        **Important:** The response also includes deleted rules.
        You should only consider the latest revision of the returned rulesets.
      operationId: getRulesets
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: OK
      summary: List campaign rulesets
      tags:
      - management
    post:
      description: Create a set of rules. A ruleset is a revision of all the rules
        of a campaign.
      operationId: createRuleset
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRuleset'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: Created
      summary: Create ruleset
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets/{rulesetId}:
    get:
      description: Retrieve the specified ruleset.
      operationId: getRuleset
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - in: path
        name: rulesetId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: OK
      summary: Get ruleset
      tags:
      - management
    put:
      description: Update a ruleset.
      operationId: updateRuleset
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - in: path
        name: rulesetId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRuleset'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ruleset'
          description: OK
      summary: Update ruleset
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_with_recipients:
    post:
      description: Create coupons according to some pattern for up to 1000 recipients.
      operationId: createCouponsForMultipleRecipients
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCouponsForMultipleRecipients'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
        "204":
          content: {}
          description: No Content
      summary: Create coupons for multiple recipients
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons:
    delete:
      description: Deletes all the coupons matching the specified criteria.
      operationId: deleteCoupons
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: startsAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: startsBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: expiresAfter
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: expiresBefore
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete coupons
      tags:
      - management
    post:
      description: Create coupons according to some pattern. Up to 20.000 coupons
        can be created without a unique prefix. When a unique prefix is provided,
        up to 200.000 coupons can be created.
      operationId: createCoupons
      parameters:
      - description: |
          Possible values: `yes` or `no`.
          - `yes`: Increases the perfomance of the API call by returning a 204 response.
          - `no`: Returns a 200 response that contains essential data such as the updated customer profiles and session-related information.
        in: query
        name: silent
        schema:
          default: "yes"
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCoupons'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
        "204":
          content: {}
          description: No Content
      summary: Create coupons
      tags:
      - management
      x-codegen-request-body-name: body
    put:
      description: |
        Update a batch of coupons. You can find the `batchId` in the **Coupons** view of your Application
        in the Campaign Manager or by using [List coupons](#operation/getCouponsWithoutTotalCount).

        To update a specific coupon, use [Update coupon](#operation/updateCoupon).
      operationId: updateCouponBatch
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCouponBatch'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Update a batch of coupons
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/no_total:
    get:
      description: |
        List all the coupons matching the specified criteria.
      operationId: getCouponsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
      summary: List coupons
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/{couponId}:
    delete:
      description: Delete the specified coupon.
      operationId: deleteCoupon
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the coupon code to delete
        in: path
        name: couponId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete coupon
      tags:
      - management
    put:
      description: Update the specified coupon.
      operationId: updateCoupon
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the coupon code to update
        in: path
        name: couponId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCoupon'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: OK
      summary: Update coupon
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search:
    post:
      description: |
        Get a list of all the coupons that exactly match a set of attributes.

        The match is successful if all the attributes of the request are found in a coupon, even if the coupon has more attributes that are not present on the request.
      operationId: getCouponsByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponSearch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: OK
      summary: List coupons that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced/no_total:
    post:
      description: |
        Gets a list of all the coupons with attributes matching the query criteria
      operationId: searchCouponsAdvancedWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
      summary: List coupons that match the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/coupons_search_advanced/no_total:
    post:
      description: |
        Gets a list of all the coupons with attributes matching the query criteria in all active campaigns of an application
      operationId: searchCouponsAdvancedApplicationWideWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Capmaigns that are expired.
          - `archived`: Campaigns that are archived.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: OK
      summary: List coupons that match the given attributes in all active campaigns
        of an application
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/{referralId}:
    delete:
      description: Delete the specified referral.
      operationId: deleteReferral
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the referral code to delete
        in: path
        name: referralId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete referral
      tags:
      - management
    put:
      description: Update the specified referral.
      operationId: updateReferral
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: The ID of the referral code to delete
        in: path
        name: referralId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReferral'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'
          description: OK
      summary: Update referral
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/no_total:
    get:
      description: List all referrals of the specified campaign.
      operationId: getReferralsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Filter results performing case-insensitive matching against the
          referral code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: code
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches referrals in which the expiry date is set and in the past. The second matches referrals in which start date is null or in the past and expiry date is null or in the future, the third matches referrals in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only referrals where `usageCounter < usageLimit` will be returned, "false" will return only referrals where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter results by match with a profile id specified in the referral's
          AdvocateProfileIntegrationId field
        in: query
        name: advocate
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: OK
      summary: List referrals
      tags:
      - management
  /v1/loyalty_programs:
    get:
      description: List the loyalty programs of the account.
      operationId: getLoyaltyPrograms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
      summary: List loyalty programs
      tags:
      - management
  /v1/loyalty_programs/{programID}:
    get:
      description: |
        Get the specified [loyalty program](https://www.talon.one/glossary/loyalty).
        To list all loyalty programs, use [List loyalty programs](#operation/getLoyaltyPrograms).
      operationId: getLoyaltyProgram
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgram'
          description: OK
      summary: Get loyalty program
      tags:
      - management
  /v1/loyalty_programs/{programID}/import_points:
    post:
      description: |
        Upload a CSV file containing the [loyalty](https://www.talon.one/pillar-pages/loyalty) points that should be created.
        The file should be sent as multipart data.

        **Important**: Importing points does **not** overwrite existing points for any customer.

        The CSV file can contain the following columns:

        - `customerprofileid`: The integration ID of the customer profile that should receive the loyalty points.
        - `amount`: The amount of points to award to the customer profile.
        - `startdate`: The earliest date when the points can be redeemed. On this date and until the expiry date, the points are `active`.
        - `expirydate`: The latest date when the points can be redeemed. After this date, the points are `expired`.
        - `subledgerid` (optional): The ID of the subledger that should received the points.
        - `reason` (optional): A reason why these points were awarded.

        You can use the timezone of your choice. It is converted to UTC internally by Talon.One.

        Example:

        ```csv
        customerprofileid,amount,startdate,expirydate,subledgerid,reason
        URNGV8294NV,100,2009-11-10T23:00:00Z,2009-11-11T23:00:00Z,subledger1,appeasement
        ```
      operationId: importLoyaltyPoints
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import loyalty points via CSV file
      tags:
      - management
  /v1/loyalty_programs/{programID}/profile/{integrationID}:
    get:
      description: |
        Get the loyalty ledger for this profile integration ID.

        To get the `integrationId` of the profile from a `sessionId`, use the
        [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
      operationId: getLoyaltyPoints
      parameters:
      - description: The identifier for the application, must be unique within the
          account.
        in: path
        name: programID
        required: true
        schema:
          type: string
      - description: The identifier for the application, must be unique within the
          account.
        in: path
        name: integrationID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyLedger'
          description: OK
      summary: Get the Loyalty Ledger for this integrationID
      tags:
      - management
  /v1/loyalty_programs/{programID}/profile/{integrationID}/add_points:
    put:
      description: |
        Add points in the specified loyalty program for the given customer.

        To get the `integrationId` of the profile from a `sessionId`, use the
        [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
      operationId: addLoyaltyPoints
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: string
      - in: path
        name: integrationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyPoints'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Add points in loyalty program for given customer
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/loyalty_programs/{programID}/profile/{integrationID}/deduct_points:
    put:
      description: |
        Remove points from the specified loyalty program and specified customer profile.

        To get the `integrationId` of the profile from a `sessionId`, use the
        [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
      operationId: removeLoyaltyPoints
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: string
      - in: path
        name: integrationID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyPoints'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deduct points in loyalty program for given customer
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/loyalty_programs/{programID}/profile/{integrationID}/export_log:
    get:
      description: Download a file with a customer's ledger log in the loyalty program
      operationId: exportLoyaltyLedger
      parameters:
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      - in: path
        name: programID
        required: true
        schema:
          type: string
      - in: path
        name: integrationID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
      summary: Export a customer's loyalty ledger log to CSV file
      tags:
      - management
  /v1/loyalty_programs/{programID}/statistics:
    get:
      description: |
        Retrieve the statistics of the specified loyalty program such as the
        total active points, pending points, spent points and expired points.
      operationId: getLoyaltyStatistics
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyStatistics'
          description: OK
      summary: Get loyalty program statistics by loyalty program ID
      tags:
      - management
  /v1/loyalty_programs/{programID}/export_customer_balance:
    get:
      description: Download a file with the balance of each customer in the loyalty
        program
      operationId: exportLoyaltyBalance
      parameters:
      - in: path
        name: programID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
      summary: Export customer loyalty balance to a CSV file
      tags:
      - management
  /v1/giveaways/pools/{poolId}/import:
    post:
      description: |
        Upload a CSV file containing the giveaway codes that should be created. Send the file as multipart data.

        The CSV file can contain the following columns:
        - `code` (required): the code of your giveaway, for instance, a gift card redemption code.
        - `startdate`:  the start date in RFC3339 of the code redemption period.
        - `enddate`: the last date in RFC3339 of the code redemption period.
        - `attributes`: A json object describing _custom_ giveaway attribute names and their values. Double the double-quotes in the object.
          For example, if you created a custom attribute called `provider`, set it with `"{""provider"": ""myPartnerCompany""}"`.

        The `startdate` and `enddate` have nothing to do with the _validity_ of the codes. They are only used by the Rule Engine to award the codes or not.
        You can use the timezone of your choice. It is converted to UTC internally by Talon.One.
      operationId: importPoolGiveaways
      parameters:
      - in: path
        name: poolId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import giveaway codes into a giveaway pool
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}/import:
    post:
      description: Upload a CSV file containing the collection of string values that
        should be attached as payload for collection. The file should be sent as multipart
        data.
      operationId: importCollection
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - in: path
        name: collectionId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import collection via CSV file
      tags:
      - management
  /v1/applications/{applicationId}/health_report:
    get:
      description: |
        Display the health of the application and show the last time the Application
        was used.
      operationId: getApplicationApiHealth
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApiHealth'
          description: OK
      summary: Get report of health of application API
      tags:
      - management
  /v1/applications/{applicationId}/access_logs/no_total:
    get:
      description: |
        Retrieve the list of API calls to this Application matching the specified criteria.
      operationId: getAccessLogsWithoutTotalCount
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return results where the request path matches the given
          regular expression.
        in: query
        name: path
        schema:
          type: string
      - description: Only return results where the request method matches the given
          regular expression.
        in: query
        name: method
        schema:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: OK
      summary: Get access logs for Application
      tags:
      - management
  /v1/access_logs:
    get:
      description: |
        Fetches the access logs for the entire account. Sensitive requests (logins) are _always_ filtered from the logs.
      operationId: getAllAccessLogs
      parameters:
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results where the request path matches the given
          regular expression.
        in: query
        name: path
        schema:
          type: string
      - description: Only return results where the request method matches the given
          regular expression.
        in: query
        name: method
        schema:
          enum:
          - get
          - put
          - post
          - delete
          - patch
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
      summary: List access logs
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/analytics:
    get:
      description: Retrieve statistical data about the performance of the given campaign.
      operationId: getCampaignAnalytics
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - description: The time interval between the results in the returned time-series.
        in: query
        name: granularity
        schema:
          enum:
          - 1 hour
          - 1 day
          - 1 week
          - 1 month
          - 1 year
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: OK
      summary: Get analytics of campaigns
      tags:
      - management
  /v1/applications/{applicationId}/customers:
    get:
      description: List all the customers of the specified application.
      operationId: getApplicationCustomers
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results performing an exact matching against the profile
          integration identifier.
        in: query
        name: integrationId
        schema:
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: |
          When this flag is set, the result will include the total size of the result, across all pages. This might decrease performance on large data sets.
          With this flag set to true, `hasMore` will be true whenever there is a next page. `totalResultSize` will always be zero.
          With this flag set to false, `hasMore` will always be set to false. `totalResultSize` will contain the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: OK
      summary: List application's customers
      tags:
      - management
  /v1/applications/{applicationId}/customer_search:
    post:
      description: |
        Get a list of the application customers matching the provided criteria.

        The match is successful if all the attributes of the request are found in a profile, even if the profile has more attributes that are not present on the request.
      operationId: getApplicationCustomersByAttributes
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: |
          When this flag is set, the result will include the total size of the result, across all pages. This might decrease performance on large data sets.
          With this flag set to true, `hasMore` will be true whenever there is a next page. `totalResultSize` will always be zero.
          With this flag set to false, `hasMore` will always be set to false. `totalResultSize` will contain the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileSearchQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: OK
      summary: List application customers matching the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/customer_search/no_total:
    post:
      description: |
        Get a list of the customer profiles matching the provided criteria.

        The match is successful if all the attributes of the request are found in a profile, even if the profile has more attributes that are not present on the request.
      operationId: getCustomersByAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerProfileSearchQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: OK
      summary: List customer profiles matching the given attributes
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/customers/{customerId}:
    get:
      description: |
        Return the details of the specified customer profile.

        **Performance tip:** You can retrieve the same information via the Integration API, which can save you
        extra API requests. Consider these options:
        - Request the customer profile to be part of the response content using
          [Update Customer Session](/integration-api/operation#updateCustomerSessionV2).
        - Send an empty update with the [Update Customer Profile](/integration-api/#operation/updateCustomerProfileV2) endpoint with `runRuleEngine=false`.
      operationId: getCustomerProfile
      parameters:
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerProfile'
          description: OK
      summary: Get customer profile
      tags:
      - management
  /v1/customers/no_total:
    get:
      description: List all customer profiles.
      operationId: getCustomerProfiles
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: OK
      summary: List customer profiles
      tags:
      - management
  /v1/applications/{applicationId}/customers/{customerId}:
    get:
      description: |
        Retrieve the customers of the specified application.

        The `customerId` parameter is the value of the `id` property of a customer profile.
        Get it with the [List application's customers](#operation/getApplicationCustomers) endpoint.
      operationId: getApplicationCustomer
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomer'
          description: OK
      summary: Get application's customer
      tags:
      - management
  /v1/applications/{applicationId}/customer_activity_reports/no_total:
    get:
      description: Fetch summary reports for all application customers based on a
        time range. Instead of having the total number of results in the response,
        this endpoint only if there are more results.
      operationId: getCustomerActivityReportsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Only return reports matching the customer name
        in: query
        name: name
        schema:
          type: string
      - description: Only return reports matching the integrationId
        in: query
        name: integrationId
        schema:
          type: string
      - description: Only return reports matching the campaignName
        in: query
        name: campaignName
        schema:
          type: string
      - description: Only return reports matching the current customer referrer name
        in: query
        name: advocateName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
          description: OK
      summary: Get Activity Reports for Application Customers
      tags:
      - management
  /v1/applications/{applicationId}/customer_activity_reports/{customerId}:
    get:
      description: Fetch the summary report of a given customer in the given application,
        in a time range.
      operationId: getCustomerActivityReport
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: Only return results from after this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeStart
        required: true
        schema:
          format: date-time
          type: string
      - description: Only return results from before this timestamp, must be an RFC3339
          timestamp string
        in: query
        name: rangeEnd
        required: true
        schema:
          format: date-time
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerActivityReport'
          description: OK
      summary: Get customer's activity report
      tags:
      - management
  /v1/applications/{applicationId}/customers/{customerId}/analytics:
    get:
      description: Fetch analytics for a given customer in the given application.
      operationId: getCustomerAnalytics
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: customerId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAnalytics'
          description: OK
      summary: Get customer's analytics report
      tags:
      - management
  /v1/applications/{applicationId}/sessions:
    get:
      description: |
        List all the sessions of the specified Application.
      operationId: getApplicationSessions
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Profile integration ID filter for sessions. Must be exact match.
        in: query
        name: profile
        schema:
          type: string
      - description: Filter by sessions with this state. Must be exact match.
        in: query
        name: state
        schema:
          enum:
          - open
          - closed
          - cancelled
          type: string
      - description: Only return events created before this date. You can use any
          timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Only return events created after this date. You can use any timezone.
          Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Filter by sessions with this coupon. Must be exact match.
        in: query
        name: coupon
        schema:
          type: string
      - description: Filter by sessions with this referral. Must be exact match.
        in: query
        name: referral
        schema:
          type: string
      - description: Filter by sessions with this integrationId. Must be exact match.
        in: query
        name: integrationId
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: OK
      summary: List Application sessions
      tags:
      - management
  /v1/applications/{applicationId}/sessions/{sessionId}:
    get:
      description: |
        Get the details of the given session.
        You can list the sessions with the [List application sessions](#operation/getApplicationSessions) endpoint.
      operationId: getApplicationSession
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: sessionId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSession'
          description: OK
      summary: Get Application session
      tags:
      - management
  /v1/applications/{applicationId}/events/no_total:
    get:
      description: |
        Lists all events recorded for an application. Instead of having the total number of results in the response, this endpoint only if there are more results.
      operationId: getApplicationEventsWithoutTotalCount
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Comma-separated list of types by which to filter events. Must
          be exact match(es).
        in: query
        name: type
        schema:
          type: string
      - description: Only return events created before this date. You can use any
          timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Only return events created after this date. You can use any timezone.
          Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Session integration ID filter for events. Must be exact match.
        in: query
        name: session
        schema:
          type: string
      - description: Profile integration ID filter for events. Must be exact match.
        in: query
        name: profile
        schema:
          type: string
      - description: Customer name filter for events. Will match substrings case-insensitively.
        in: query
        name: customerName
        schema:
          minLength: 2
          type: string
      - description: Customer e-mail address filter for events. Will match substrings
          case-insensitively.
        in: query
        name: customerEmail
        schema:
          minLength: 2
          type: string
      - description: Coupon code
        in: query
        name: couponCode
        schema:
          type: string
      - description: Referral code
        in: query
        name: referralCode
        schema:
          type: string
      - description: Rule name filter for events
        in: query
        name: ruleQuery
        schema:
          type: string
      - description: Campaign name filter for events
        in: query
        name: campaignQuery
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
          description: OK
      summary: List Applications events
      tags:
      - management
  /v1/applications/{applicationId}/event_types:
    get:
      description: |
        Get all of the distinct values of the Event `type` property for events recorded in the application.

        See also: [Track an event](/integration-api/#operation/trackEvent)
      operationId: getApplicationEventTypes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
          description: OK
      summary: List Applications event types
      tags:
      - management
  /v1/audiences:
    get:
      description: |
        Get All audiences created in the account.
      operationId: getAudiences
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: |
          When this flag is set, the result will include the total size of the result, across all pages. This might decrease performance on large data sets.
          With this flag set to true, `hasMore` will be true whenever there is a next page. `totalResultSize` will always be zero.
          With this flag set to false, `hasMore` will always be set to false. `totalResultSize` will contain the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
          description: OK
      summary: List audiences
      tags:
      - management
  /v1/applications/{applicationId}/profile/{integrationId}/friends:
    get:
      description: |
        List the friends referred by the specified customer profile in this Application.
      operationId: getApplicationCustomerFriends
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: |
          When this flag is set, the result will include the total size of the result, across all pages. This might decrease performance on large data sets.
          With this flag set to true, `hasMore` will be true whenever there is a next page. `totalResultSize` will always be zero.
          With this flag set to false, `hasMore` will always be set to false. `totalResultSize` will contain the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: The Integration ID of the Advocate's Profile.
        in: path
        name: integrationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
          description: OK
      summary: List friends referred by customer profile
      tags:
      - management
  /v1/attributes:
    get:
      description: |
        Returns all the defined custom attributes for the account.
      operationId: getAttributes
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Returned attributes will be filtered by supplied entity
        in: query
        name: entity
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: OK
      summary: List custom attributes
      tags:
      - management
    post:
      description: |
        Create a _custom attribute_ in this account. Custom attributes allow you
        to attach new fields to Talon.One domain objects like campaigns, coupons,
        customers and so on.

        These attributes can then be given values when creating/updating these objects, and these values can be
        used in your campaign rules. For example, you could define a `zipCode` field for customer sessions,
        and add a rule to your campaign that only allows certain ZIP codes.

        These attributes are shared across all applications in your account, and are never required.
      operationId: createAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAttribute'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: Created
      summary: Create custom attribute
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/attributes/{attributeId}:
    get:
      description: |
        Returns custom attribute for the account by its id.
      operationId: getAttribute
      parameters:
      - in: path
        name: attributeId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: OK
      summary: Get a custom attribute
      tags:
      - management
    put:
      description: |
        Updates an existing custom attribute. Once created, the only property of a custom attribute that can be changed is the title (human readable description). This restriction is in place to prevent accidentally breaking live integrations. E.g. if you have a customer profile attribute with the name `region`, and your integration is sending `attributes.region` with customer profile updates, changing the name to `locale` would cause the integration requests to begin failing.

        If you **really** need to change the `type` or `name` property of a custom attribute, create a new attribute and update any relevant integrations and rules to use the new attribute. Then delete the old attribute when you are confident you have migrated any needed data from the old attribute to the new one.
      operationId: updateAttribute
      parameters:
      - in: path
        name: attributeId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAttribute'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: OK
      summary: Update a custom attribute
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/additional_costs:
    get:
      description: |
        Returns all the defined additional costs for the account.
      operationId: getAdditionalCosts
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
          description: OK
      summary: List additional costs
      tags:
      - management
    post:
      description: |
        Defines a new _additional cost_ in this account.

        These additional costs are shared across all applications in your account, and are never required.
      operationId: createAdditionalCost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAdditionalCost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: Created
      summary: Define a new additional cost
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/additional_costs/{additionalCostId}:
    get:
      description: |
        Returns additional cost for the account by its id.
      operationId: getAdditionalCost
      parameters:
      - in: path
        name: additionalCostId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: OK
      summary: Get an additional cost
      tags:
      - management
    put:
      description: |
        Updates an existing additional cost. Once created, the only property of an additional cost that can be changed is the title (human readable description). This restriction is in place to prevent accidentally breaking live integrations.
      operationId: updateAdditionalCost
      parameters:
      - in: path
        name: additionalCostId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAdditionalCost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdditionalCost'
          description: OK
      summary: Update an additional cost
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/webhooks:
    get:
      description: List all webhooks.
      operationId: getWebhooks
      parameters:
      - description: Filter by one or more application ids separated by comma
        in: query
        name: applicationIds
        schema:
          type: string
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
          description: OK
      summary: List webhooks
      tags:
      - management
  /v1/webhooks/{webhookId}:
    get:
      description: Returns an webhook by its id.
      operationId: getWebhook
      parameters:
      - in: path
        name: webhookId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: OK
      summary: Get Webhook
      tags:
      - management
  /v1/webhook_activation_logs:
    get:
      description: Webhook activation log entries would be created as soon as an integration
        request triggered an effect with a webhook
      operationId: getWebhookActivationLogs
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results by integration request UUID.
        in: query
        name: integrationRequestUuid
        schema:
          type: string
      - description: Filter results by Webhook.
        in: query
        name: webhookId
        schema:
          type: number
      - in: query
        name: applicationId
        schema:
          type: number
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Only return events created before this date. You can use any
          timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results where request and response times to return entries
          after parameter value, expected to be an RFC3339 timestamp string. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
          description: OK
      summary: List webhook activation log entries
      tags:
      - management
  /v1/webhook_logs:
    get:
      description: Retrieve all webhook log entries.
      operationId: getWebhookLogs
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results by HTTP status codes.
        in: query
        name: status
        schema:
          enum:
          - success
          - error
          type: string
      - description: Filter results by Webhook.
        in: query
        name: webhookId
        schema:
          type: number
      - in: query
        name: applicationId
        schema:
          type: number
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Filter results by request UUID.
        in: query
        name: requestUuid
        schema:
          type: string
      - description: Filter results where request and response times to return entries
          before parameter value, expected to be an RFC3339 timestamp string. You
          can use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results where request and response times to return entries
          after parameter value, expected to be an RFC3339 timestamp string. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
          description: OK
      summary: List webhook log entries
      tags:
      - management
  /v1/event_types:
    get:
      description: |
        Fetch all event type definitions for your account.
      operationId: getEventTypes
      parameters:
      - description: Filter by one or more application ids separated by comma
        in: query
        name: applicationIds
        schema:
          type: string
      - description: Filter results to event types with the given name. This parameter
          implies `includeOldVersions`.
        in: query
        name: name
        schema:
          type: string
      - description: Include all versions of every event type.
        in: query
        name: includeOldVersions
        schema:
          default: false
          type: boolean
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
          description: OK
      summary: List Event Types
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/import_coupons:
    post:
      description: |
        Upload a CSV file containing the coupons that should be created. The file should be sent as multipart data.

        The CSV file can contain the following columns:

        - `value` (required): The coupon code.
        - `expirydate`: The end date in RFC3339 of the code redemption period.
        - `startdate`: The start date in RFC3339 of the code redemption period.
        - `limitval`: The maximum amount of redemptions of this code. Defaults to `1` when not provided.
        - `attributes`: A json object describing _custom_ referral attribute names and their values. Double the double-quotes in the object.
          For example, if you created a custom attribute called `category`, set it with `"{""category"": ""10_off""}"`.

        You can use thhe timezone of your choice. It is converted to UTC internally by Talon.One.

        Example:

        ```
        "value","expirydate","startdate","recipientintegrationid","limitval","attributes"
        COUP1,2018-07-01T04:00:00Z,2018-05-01T04:00:00Z,cust123,1,"{""Category"": ""10_off""}"
        ```

        Once imported, you can find the `batchId` in the Campaign Manager or by
        using [List coupons](#operation/getReservedCustomers).
      operationId: importCoupons
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import coupons via CSV file
      tags:
      - management
  /v1/applications/{applicationId}/export_coupons:
    get:
      description: Download a file containing the coupons that match the given properties.
      operationId: exportCoupons
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - description: Filter results performing case-insensitive matching against the
          coupon code. Both the code and the query are folded to remove all non-alpha-numeric
          characters.
        in: query
        name: value
        schema:
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches coupons in which the expiry date is set and in the past. The second matches coupons in which start date is null or in the past and expiry date is null or in the future, the third matches coupons in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          Either "true" or "false". If "true", only coupons where `usageCounter < usageLimit` will be returned, "false" will return only coupons where `usageCounter >= usageLimit`.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter the results by matching them with the Id of a referral,
          that meaning the coupons that had been created as an effect of the usage
          of a referral code.
        in: query
        name: referralId
        schema:
          type: integer
      - description: Filter results by match with a profile id specified in the coupon's
          RecipientIntegrationId field
        in: query
        name: recipientIntegrationId
        schema:
          type: string
      - description: Filter results by batches of coupons
        in: query
        name: batchId
        schema:
          type: string
      - description: Filter results to an exact case-insensitive matching against
          the coupon code
        in: query
        name: exactMatch
        schema:
          default: false
          type: boolean
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      - description: |
          Filter results by the state of the campaign.

          - `enabled`: Campaigns that are scheduled, running (activated), or expired.
          - `running`: Campaigns that are running (activated).
          - `disabled`: Campaigns that are disabled.
          - `expired`: Capmaigns that are expired.
          - `archived`: Campaigns that are archived.
        in: query
        name: campaignState
        schema:
          enum:
          - enabled
          - disabled
          - archived
          - draft
          - scheduled
          - running
          - expired
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
      summary: Export coupons to CSV file
      tags:
      - management
  /v1/applications/{applicationId}/export_referrals:
    get:
      description: Download a file containing the referrals that match the given parameters.
      operationId: exportReferrals
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the referral creation timestamp. You can
          use any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          Either "expired", "validNow", or "validFuture". The first option matches referrals in which the expiry date is set and in the past. The second matches referrals in which start date is null or in the past and expiry date is null or in the future, the third matches referrals in which start date is set and in the future.
        in: query
        name: valid
        schema:
          enum:
          - expired
          - validNow
          - validFuture
          type: string
      - description: |
          If `true`, only referrals where `usageCounter < usageLimit` will be returned. If `false`, only referrals where `usageCounter >= usageLimit` will be returned.
        in: query
        name: usable
        schema:
          enum:
          - "true"
          - "false"
          type: string
      - description: Filter results by batches of referrals
        in: query
        name: batchId
        schema:
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
      summary: Export referrals to CSV file
      tags:
      - management
  /v1/applications/{applicationId}/export_effects:
    get:
      description: Download a file containing the triggered effects that match the
        given attributes.
      operationId: exportEffects
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results by campaign.
        in: query
        name: campaignId
        schema:
          type: number
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the coupon creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
      summary: Export triggered effects to CSV file
      tags:
      - management
  /v1/applications/{applicationId}/export_customer_sessions:
    get:
      description: Download a file containing the customer sessions that match the
        request.
      operationId: exportCustomerSessions
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: Only return sessions for the customer that matches this customer
          integration ID.
        in: query
        name: profileIntegrationId
        schema:
          type: string
      - description: Determines the format of dates in the export document.
        in: query
        name: dateFormat
        schema:
          enum:
          - excel
          - ISO8601
          type: string
      - description: Filter results by state.
        in: query
        name: customerSessionState
        schema:
          enum:
          - open
          - closed
          - cancelled
          type: string
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: csv
                type: string
          description: OK
      summary: Export customer sessions to CSV file
      tags:
      - management
  /v1/applications/{applicationId}/campaigns/{campaignId}/import_referrals:
    post:
      description: |
        Upload a CSV file containing the referrals that should be created.
        The file should be sent as multipart data.

        The CSV file can contain the following columns:

        - `code` (required): The referral code.
        - `advocateprofileintegrationid` (required): The profile ID of the advocate.
        - `startdate`: The start date in RFC3339 of the code redemption period.
        - `expirydate`: The end date in RFC3339 of the code redemption period.
        - `limitval`: The maximum amount of redemptions of this code. Unlimited (0) when blank.
        - `attributes`: A json object describing _custom_ referral attribute names and their values. Double the double-quotes in the object.
          For example, if you created a custom attribute called `category`, set it with `"{""category"": ""10_off""}"`.

        You can use the timezone of your choice. It is converted to UTC internally by Talon.One.
      operationId: importReferrals
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: integer
      - in: path
        name: campaignId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                upFile:
                  description: The file with the information about the data that should
                    be imported.
                  format: csv
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: OK
      summary: Import referrals via CSV file
      tags:
      - management
  /v1/users:
    get:
      description: |
        Retrieve all users in your account.
      operationId: getUsers
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
          description: OK
      summary: List users in account
      tags:
      - management
  /v1/users/{userId}:
    get:
      description: |
        Retrieves the data (including an invitation code) for a user. Non-admin users can only get themselves.
      operationId: getUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get a single user
      tags:
      - management
  /v1/changes:
    get:
      description: Get list of changes caused by API calls for an account. Only accessible
        for admins.
      operationId: getChanges
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - description: The field by which results should be sorted. Sorting defaults
          to ascending order, prefix the field name with `-` to sort in descending
          order.
        in: query
        name: sort
        schema:
          type: string
      - in: query
        name: applicationId
        schema:
          type: integer
      - description: Filter results on a case insensitive matching of the url path
          of the entity
        in: query
        name: entityPath
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: integer
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the change creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdBefore
        schema:
          format: date-time
          type: string
      - description: Filter results comparing the parameter value, expected to be
          an RFC3339 timestamp string, to the change creation timestamp. You can use
          any timezone. Talon.One will convert to UTC internally.
        in: query
        name: createdAfter
        schema:
          format: date-time
          type: string
      - description: |
          When this flag is set, the result will include the total size of the result, across all pages. This might decrease performance on large data sets.
          With this flag set to true, `hasMore` will be true whenever there is a next page. `totalResultSize` will always be zero.
          With this flag set to false, `hasMore` will always be set to false. `totalResultSize` will contain the total number of results for this query.
        in: query
        name: withTotalResultSize
        schema:
          type: boolean
      - description: When this flag is set to false, the state without the change
          will not be returned. The default value is true.
        in: query
        name: includeOld
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
          description: OK
      summary: Get audit log for an account
      tags:
      - management
  /v1/password_recovery_emails:
    post:
      description: |
        Send an email with a password recovery link to the email address of an existing account.
      operationId: createPasswordRecoveryEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordEmail'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPasswordEmail'
          description: Created
      summary: Request a password reset
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/reset_password:
    post:
      description: |
        Consumes the supplied password reset token and updates the password for
        the associated account.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPassword'
          description: Created
      summary: Reset password
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/accounts/{accountId}:
    get:
      description: |
        Return the details of your companies Talon.One account.
      operationId: getAccount
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
      summary: Get account details
      tags:
      - management
  /v1/accounts/{accountId}/analytics:
    get:
      description: |
        Return the analytics of your companies Talon.One account.
      operationId: getAccountAnalytics
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAnalytics'
          description: OK
      summary: Get account analytics
      tags:
      - management
  /v1/sessions:
    delete:
      description: Destroys the session.
      operationId: destroySession
      responses:
        "204":
          content: {}
          description: No Content
      summary: Destroy session
      tags:
      - management
    post:
      description: |
        Create a session to use the Management API endpoints.
        Use the value of the `token` property provided in the response as bearer token in other API calls.

        A token is valid for 3 months. In accordance with best pratices, use your generated token
        for all your API requests. Do **not** regenerate a token for each request.

        This endpoint has a rate limit of 3 to 6 requests per second per account, depending on your setup.
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParams'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Created
      summary: Create session
      tags:
      - management
      x-codegen-request-body-name: body
  /v1/exports:
    get:
      description: |
        List all past exports
      operationId: getExports
      parameters:
      - description: The number of items to include in this response. When omitted,
          the maximum value of 1000 will be used.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Skips the given number of items when paging through large result
          sets.
        in: query
        name: skip
        schema:
          type: integer
      - in: query
        name: applicationId
        schema:
          type: integer
      - in: query
        name: campaignId
        schema:
          type: integer
      - description: The name of the entity type that was exported.
        in: query
        name: entity
        schema:
          enum:
          - Coupon
          - Referral
          - Effect
          - CustomerSession
          - LoyaltyLedger
          - LoyaltyLedgerLog
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
          description: OK
      summary: Get Exports
      tags:
      - management
  /v1/roles:
    get:
      description: List all roles.
      operationId: getAllRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: OK
      summary: List roles
      tags:
      - management
  /v1/roles/{roleId}:
    get:
      description: |
        Get the details of the specified role. To see all the roles, use [List roles](#operation/getAllRoles).
      operationId: getRole
      parameters:
      - in: path
        name: roleId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
      summary: Get role
      tags:
      - management
components:
  schemas:
    ErrorResponse:
      properties:
        message:
          description: A message describing the error.
          type: string
        errors:
          description: An array of individual problems encountered during the request.
          items:
            $ref: '#/components/schemas/APIError'
          type: array
      required:
      - message
      type: object
    APIError:
      properties:
        title:
          description: Short description of the problem.
          type: string
        details:
          description: Longer description of this specific instance of the problem.
          type: string
        source:
          $ref: '#/components/schemas/ErrorSource'
      required:
      - source
      - title
      type: object
    FeatureFlag:
      properties:
        name:
          description: The name for the featureflag
          type: string
        value:
          description: The value for the featureflag
          type: string
        created:
          description: The exact moment this entity was last created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
      required:
      - name
      - value
      type: object
    ErrorSource:
      description: |
        The source of the current error, exactly one of `pointer`, `parameter` or `line` will be defined.
      properties:
        pointer:
          description: Pointer to the path in the payload that caused this error.
          type: string
        parameter:
          description: Query parameter that caused this error.
          type: string
        line:
          description: Line number in uploaded multipart file that caused this error.
            'N/A' if unknown.
          type: string
        resource:
          description: Pointer to the resource that caused this error
          type: string
      type: object
    Entity:
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - created
      - id
      type: object
    EntityWithTalangVisibleID:
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - created
      - id
      type: object
    MutableEntity:
      properties:
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
      required:
      - modified
      type: object
    AccountEntity:
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
      required:
      - accountId
      type: object
    UserEntity:
      properties:
        userId:
          description: The ID of the account that owns this entity.
          type: integer
      required:
      - userId
      type: object
    EmailEntity:
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
      required:
      - email
      type: object
    ApplicationEntity:
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
      required:
      - applicationId
      type: object
    LoyaltyProgramEntity:
      properties:
        programID:
          description: The ID of the loyalty program that owns this entity.
          type: integer
      required:
      - programID
      type: object
    CampaignGroupEntity:
      properties:
        campaignGroups:
          description: The IDs of the campaign groups that own this entity.
          items:
            type: integer
          type: array
      type: object
    MultiApplicationEntity:
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
      required:
      - applicationIds
      type: object
    CampaignEntity:
      properties:
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
      required:
      - campaignId
      type: object
    ApplicationSessionEntity:
      properties:
        sessionId:
          description: The globally unique Talon.One ID of the session where this
            entity was created.
          type: integer
      required:
      - sessionId
      type: object
    ApplicationCustomerEntity:
      properties:
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          example: 138
          type: integer
      type: object
    IntegrationEntity:
      properties:
        integrationId:
          description: The integration ID for this entity sent to and used in the
            Talon.One system.
          example: URNGV8294NV
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - created
      - integrationId
      type: object
    IntegrationProfileEntity:
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
      type: object
    CouponValue:
      properties:
        value:
          description: The actual coupon code.
          example: XMAS-20-2021
          minLength: 4
          title: Coupon Code
          type: string
      type: object
    CouponConstraints:
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
      type: object
    CodeGeneratorSettings:
      example:
        couponPattern: couponPattern
        validCharacters:
        - validCharacters
        - validCharacters
      properties:
        validCharacters:
          description: Set of characters to be used when generating random part of
            code. Defaults to [A-Z, 0-9] (in terms of RegExp).
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern that will be used to generate coupon codes. The character `#` acts as a placeholder and will be replaced by a random character from the `validCharacters` set.
          maxLength: 100
          minLength: 3
          type: string
      required:
      - couponPattern
      - validCharacters
      type: object
    Session:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        userId: 109
        token: dy_Fa_lQ4iDAnqldJFvVEmnsN8xDTxej19l0LZDBJhQ
      properties:
        userId:
          description: The ID of the user of this session
          example: 109
          type: integer
        token:
          description: The token to use as a bearer token to query Management API
            endpoints.
          example: dy_Fa_lQ4iDAnqldJFvVEmnsN8xDTxej19l0LZDBJhQ
          type: string
        created:
          description: Unix timestamp indicating when the session was first created.
          format: date-time
          type: string
      required:
      - created
      - token
      - userId
      type: object
    LoginParams:
      description: ""
      example:
        password: admin123456
        email: john.doe@example.com
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        password:
          description: The password for your account.
          example: admin123456
          type: string
      required:
      - email
      - password
      type: object
    AttributesMandatory:
      description: Arbitrary settings associated with attributes.
      example:
        campaigns:
        - campaigns
        - campaigns
        coupons:
        - coupons
        - coupons
      properties:
        campaigns:
          description: List of mandatory attributes for campaigns.
          items:
            type: string
          type: array
        coupons:
          description: List of mandatory attributes for campaigns.
          items:
            type: string
          type: array
      type: object
    AttributesSettings:
      description: Arbitrary settings associated with attributes.
      example:
        mandatory:
          campaigns:
          - campaigns
          - campaigns
          coupons:
          - coupons
          - coupons
      properties:
        mandatory:
          $ref: '#/components/schemas/AttributesMandatory'
      type: object
    UpdateApplication:
      properties:
        name:
          description: The name of this application.
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        currency:
          description: A string describing a default currency for new customer sessions.
          minLength: 1
          type: string
        caseSensitivity:
          description: A string indicating how should campaigns in this application
            deal with case sensitivity on coupon codes.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          description: Default priority for campaigns created in this application,
            can be one of (universal, stackable, exclusive). If no value is provided,
            this is set to "universal"
          enum:
          - universal
          - stackable
          - exclusive
          type: string
        exclusiveCampaignsStrategy:
          description: The strategy used when choosing exclusive campaigns for evaluation,
            can be one of (listOrder, lowestDiscount, highestDiscount). If no value
            is provided, this is set to "listOrder"
          enum:
          - listOrder
          - lowestDiscount
          - highestDiscount
          type: string
        defaultDiscountScope:
          description: The default scope to apply "setDiscount" effects on if no scope
            was provided with the effect.
          enum:
          - sessionTotal
          - cartItems
          - additionalCosts
          type: string
        enableCascadingDiscounts:
          description: Indicates if discounts should cascade for this application
          type: boolean
        enableFlattenedCartItems:
          description: Indicates if cart items of quantity larger than one should
            be separated into different items of quantity one
          type: boolean
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        sandbox:
          description: Indicates if this is a live or sandbox application
          type: boolean
      required:
      - currency
      - name
      - timezone
      type: object
    NewApplication:
      description: ""
      properties:
        name:
          description: The name of this application.
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        currency:
          description: A string describing a default currency for new customer sessions.
          minLength: 1
          type: string
        caseSensitivity:
          description: A string indicating how should campaigns in this application
            deal with case sensitivity on coupon codes.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          description: Default priority for campaigns created in this application,
            can be one of (universal, stackable, exclusive). If no value is provided,
            this is set to "universal"
          enum:
          - universal
          - stackable
          - exclusive
          type: string
        exclusiveCampaignsStrategy:
          description: The strategy used when choosing exclusive campaigns for evaluation,
            can be one of (listOrder, lowestDiscount, highestDiscount). If no value
            is provided, this is set to "listOrder"
          enum:
          - listOrder
          - lowestDiscount
          - highestDiscount
          type: string
        defaultDiscountScope:
          description: The default scope to apply "setDiscount" effects on if no scope
            was provided with the effect.
          enum:
          - sessionTotal
          - cartItems
          - additionalCosts
          type: string
        enableCascadingDiscounts:
          description: Indicates if discounts should cascade for this application
          type: boolean
        enableFlattenedCartItems:
          description: Indicates if cart items of quantity larger than one should
            be separated into different items of quantity one
          type: boolean
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        sandbox:
          description: Indicates if this is a live or sandbox application
          type: boolean
        key:
          description: Hex key for HMAC-signing API calls as coming from this application
            (16 hex digits)
          pattern: ^[a-fA-F0-9]{16}$
          type: string
      required:
      - currency
      - name
      - timezone
      type: object
    Application:
      description: ""
      example:
        enableFlattenedCartItems: true
        created: 2000-01-23T04:56:07.000+00:00
        timezone: timezone
        sandbox: true
        description: description
        attributesSettings:
          mandatory:
            campaigns:
            - campaigns
            - campaigns
            coupons:
            - coupons
            - coupons
        caseSensitivity: sensitive
        accountId: 3886
        enableCascadingDiscounts: true
        campaignPriority: universal
        loyaltyPrograms:
        - accountID: 5
          defaultValidity: defaultValidity
          defaultPending: defaultPending
          tiers:
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          allowSubledger: true
          created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          name: name
          description: description
          id: 6
          title: title
          subscribedApplications:
          - 1
          - 1
        - accountID: 5
          defaultValidity: defaultValidity
          defaultPending: defaultPending
          tiers:
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          allowSubledger: true
          created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          name: name
          description: description
          id: 6
          title: title
          subscribedApplications:
          - 1
          - 1
        name: name
        exclusiveCampaignsStrategy: listOrder
        modified: 2000-01-23T04:56:07.000+00:00
        defaultDiscountScope: sessionTotal
        currency: currency
        attributes: '{}'
        id: 6
        limits:
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The name of this application.
          minLength: 1
          type: string
        description:
          description: A longer description of the application.
          type: string
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        currency:
          description: A string describing a default currency for new customer sessions.
          minLength: 1
          type: string
        caseSensitivity:
          description: A string indicating how should campaigns in this application
            deal with case sensitivity on coupon codes.
          enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        limits:
          description: Default limits for campaigns created in this application
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignPriority:
          description: Default priority for campaigns created in this application,
            can be one of (universal, stackable, exclusive). If no value is provided,
            this is set to "universal"
          enum:
          - universal
          - stackable
          - exclusive
          type: string
        exclusiveCampaignsStrategy:
          description: The strategy used when choosing exclusive campaigns for evaluation,
            can be one of (listOrder, lowestDiscount, highestDiscount). If no value
            is provided, this is set to "listOrder"
          enum:
          - listOrder
          - lowestDiscount
          - highestDiscount
          type: string
        defaultDiscountScope:
          description: The default scope to apply "setDiscount" effects on if no scope
            was provided with the effect.
          enum:
          - sessionTotal
          - cartItems
          - additionalCosts
          type: string
        enableCascadingDiscounts:
          description: Indicates if discounts should cascade for this application
          type: boolean
        enableFlattenedCartItems:
          description: Indicates if cart items of quantity larger than one should
            be separated into different items of quantity one
          type: boolean
        attributesSettings:
          $ref: '#/components/schemas/AttributesSettings'
        sandbox:
          description: Indicates if this is a live or sandbox application
          type: boolean
        loyaltyPrograms:
          description: An array containing all the loyalty programs to which this
            application is subscribed
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
      required:
      - accountId
      - created
      - currency
      - id
      - loyaltyPrograms
      - modified
      - name
      - timezone
      type: object
    NewCampaignGroup:
      properties:
        name:
          description: The name of this campaign group.
          minLength: 1
          type: string
        description:
          description: A longer description of the campaign group.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this campaign group
            is enabled for
          items:
            type: integer
          type: array
        campaignIds:
          description: A list of the IDs of the campaigns that this campaign group
            owns
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    CampaignGroup:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The name of this campaign group.
          minLength: 1
          type: string
        description:
          description: A longer description of the campaign group.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this campaign group
            is enabled for
          items:
            type: integer
          type: array
        campaignIds:
          description: A list of the IDs of the campaigns that this campaign group
            owns
          items:
            type: integer
          type: array
      required:
      - accountId
      - created
      - id
      - modified
      - name
      type: object
    UpdateCampaignGroup:
      description: ""
      properties:
        name:
          description: The name of this campaign group.
          minLength: 1
          type: string
        description:
          description: A longer description of the campaign group.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this campaign group
            is enabled for
          items:
            type: integer
          type: array
        campaignIds:
          description: A list of the IDs of the campaigns that this campaign group
            owns
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    NewCampaign:
      example:
        activeRulesetId: 0
        description: description
        campaignGroups:
        - 6
        - 6
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
        features:
        - coupons
        - coupons
        name: name
        referralSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        couponSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes: '{}'
        endTime: 2000-01-23T04:56:07.000+00:00
        state: enabled
        limits:
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
      properties:
        name:
          description: A user-facing name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Timestamp the campaign will become inactive.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: ID of Ruleset this campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignGroups:
          description: The IDs of the campaign groups that own this entity.
          items:
            type: integer
          type: array
      required:
      - features
      - limits
      - name
      - state
      - tags
      type: object
    UpdateCampaign:
      example:
        activeRulesetId: 0
        description: description
        campaignGroups:
        - 6
        - 6
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
        features:
        - coupons
        - coupons
        name: name
        referralSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        couponSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        startTime: 2000-01-23T04:56:07.000+00:00
        attributes: '{}'
        endTime: 2000-01-23T04:56:07.000+00:00
        state: enabled
        limits:
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
      properties:
        name:
          description: A user-facing name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Timestamp when the campaign will become inactive.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: ID of Ruleset this campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignGroups:
          description: The IDs of the campaign groups that own this entity.
          items:
            type: integer
          type: array
      required:
      - features
      - limits
      - name
      - tags
      type: object
    Campaign:
      description: ""
      example:
        createdLoyaltyPointsEffectCount: 8
        discountCount: 7.143538047012306
        description: description
        templateId: 3
        features:
        - coupons
        - coupons
        createdLoyaltyPointsCount: 4.652396432933246
        couponSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 2
        state: enabled
        limits:
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
        - period: daily
          entities:
          - Coupon
          - Coupon
          limit: 0.5944895607614016
          action: action
        activeRulesetId: 6
        updatedBy: updatedBy
        created: 2000-01-23T04:56:07.000+00:00
        referralCreationCount: 6
        couponRedemptionCount: 3
        userId: 6
        couponCreationCount: 7
        campaignGroups:
        - 6
        - 6
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
        awardedGiveawaysCount: 0
        redeemedLoyaltyPointsEffectCount: 3
        discountEffectCount: 0
        createdBy: createdBy
        redeemedLoyaltyPointsCount: 7.740351818741173
        name: name
        referralSettings:
          couponPattern: couponPattern
          validCharacters:
          - validCharacters
          - validCharacters
        attributes: '{}'
        lastActivity: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        applicationId: 322
        referralRedemptionCount: 3
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: A user-facing name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Timestamp the campaign will become inactive.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        state:
          default: enabled
          description: |
            A disabled or archived campaign is not evaluated for rules or coupons.
          enum:
          - enabled
          - disabled
          - archived
          type: string
        activeRulesetId:
          description: ID of Ruleset this campaign applies on customer session evaluation.
          type: integer
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
        campaignGroups:
          description: The IDs of the campaign groups that own this entity.
          items:
            type: integer
          type: array
        couponRedemptionCount:
          description: Number of coupons redeemed in the campaign.
          type: integer
        referralRedemptionCount:
          description: Number of referral codes redeemed in the campaign.
          type: integer
        discountCount:
          description: Total amount of discounts redeemed in the campaign.
          type: number
        discountEffectCount:
          description: Total number of times discounts were redeemed in this campaign.
          type: integer
        couponCreationCount:
          description: Total number of coupons created by rules in this campaign.
          type: integer
        referralCreationCount:
          description: Total number of referrals created by rules in this campaign.
          type: integer
        awardedGiveawaysCount:
          description: Total number of giveaways awarded by rules in this campaign.
          type: integer
        createdLoyaltyPointsCount:
          description: Total number of loyalty points created by rules in this campaign.
          type: number
        createdLoyaltyPointsEffectCount:
          description: Total number of loyalty point creation effects triggered by
            rules in this campaign.
          type: integer
        redeemedLoyaltyPointsCount:
          description: Total number of loyalty points redeemed by rules in this campaign.
          type: number
        redeemedLoyaltyPointsEffectCount:
          description: Total number of loyalty point redemption effects triggered
            by rules in this campaign.
          type: integer
        lastActivity:
          description: Timestamp of the most recent event received by this campaign.
          format: date-time
          type: string
        updated:
          description: Timestamp of the most recent update to the campaign or any
            of its elements.
          format: date-time
          type: string
        createdBy:
          description: Name of the user who created this campaign if available.
          type: string
        updatedBy:
          description: Name of the user who last updated this campaign if available.
          type: string
        templateId:
          description: The ID of the Campaign Template this Campaign was created from.
          type: integer
      required:
      - applicationId
      - created
      - description
      - features
      - id
      - limits
      - name
      - state
      - tags
      - userId
      type: object
    NewRuleset:
      example:
        rbVersion: rbVersion
        bindings:
        - expression:
          - '{}'
          - '{}'
          name: name
          type: type
        - expression:
          - '{}'
          - '{}'
          name: name
          type: type
        activate: true
        rules:
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          description: description
          title: title
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          description: description
          title: title
      properties:
        rules:
          description: Set of rules to apply.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        rbVersion:
          description: A string indicating which version of the rulebuilder was used
            to create this ruleset.
          type: string
        activate:
          description: A boolean indicating whether this newly created ruleset should
            also be activated for the campaign that owns it
          type: boolean
      required:
      - bindings
      - rules
      type: object
    Ruleset:
      description: ""
      example:
        rbVersion: rbVersion
        created: 2000-01-23T04:56:07.000+00:00
        campaignId: 1
        bindings:
        - expression:
          - '{}'
          - '{}'
          name: name
          type: type
        - expression:
          - '{}'
          - '{}'
          name: name
          type: type
        activatedAt: 2000-01-23T04:56:07.000+00:00
        activate: true
        rules:
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          description: description
          title: title
        - condition:
          - '{}'
          - '{}'
          effects:
          - '{}'
          - '{}'
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          description: description
          title: title
        id: 6
        templateId: 5
        userId: 6
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        rules:
          description: Set of rules to apply.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        rbVersion:
          description: A string indicating which version of the rulebuilder was used
            to create this ruleset.
          type: string
        activate:
          description: A boolean indicating whether this newly created ruleset should
            also be activated for the campaign that owns it
          type: boolean
        campaignId:
          description: The ID of the campaign that owns this entity.
          title: Campaign ID
          type: integer
        templateId:
          description: The ID of the campaign template that owns this entity.
          title: Campaign Template ID
          type: integer
        activatedAt:
          description: Timestamp indicating when this Ruleset was activated.
          format: date-time
          type: string
      required:
      - bindings
      - created
      - id
      - rules
      - userId
      type: object
    Binding:
      example:
        expression:
        - '{}'
        - '{}'
        name: name
        type: type
      properties:
        name:
          description: A descriptive name for the value to be bound.
          type: string
        type:
          description: The kind of binding. Possible values are cartItemFilter, subledgerBalance.
          type: string
        expression:
          description: A Talang expression that will be evaluated and its result attached
            to the name of the binding.
          items:
            properties: {}
            type: object
          type: array
      required:
      - expression
      - name
      type: object
    Rule:
      example:
        condition:
        - '{}'
        - '{}'
        effects:
        - '{}'
        - '{}'
        bindings:
        - expression:
          - '{}'
          - '{}'
          name: name
          type: type
        - expression:
          - '{}'
          - '{}'
          name: name
          type: type
        description: description
        title: title
      properties:
        title:
          description: A short description of the rule.
          type: string
        description:
          description: A longer, more detailed description of the rule.
          type: string
        bindings:
          description: An array that provides objects with variable names (name) and
            talang expressions to whose result they are bound (expression) during
            rule evaluation. The order of the evaluation is decided by the position
            in the array.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        condition:
          description: A Talang expression that will be evaluated in the context of
            the given event.
          items:
            properties: {}
            type: object
          minItems: 1
          type: array
        effects:
          description: An array of effectful Talang expressions in arrays that will
            be evaluated when a rule matches.
          items:
            properties: {}
            type: object
          type: array
      required:
      - condition
      - effects
      - title
      type: object
    TemplateLimitConfig:
      description: ""
      properties:
        action:
          description: The limitable action to which this limit will be applied
          type: string
        limit:
          description: The value to set for the limit
          minimum: 0
          type: number
        period:
          description: The period on which the budget limit recurs
          enum:
          - daily
          - weekly
          - monthly
          - yearly
          type: string
        entities:
          description: The entities that make the address of this limit
          items:
            enum:
            - Coupon
            - Referral
            - Profile
            - Identifier
            type: string
          type: array
        description:
          description: The description of this budget configuration
          type: string
      required:
      - action
      - description
      - entities
      - limit
      type: object
    LimitConfig:
      example:
        period: daily
        entities:
        - Coupon
        - Coupon
        limit: 0.5944895607614016
        action: action
      properties:
        action:
          description: The limitable action to which this limit will be applied
          type: string
        limit:
          description: The value to set for the limit
          minimum: 0
          type: number
        period:
          description: The period on which the budget limit recurs
          enum:
          - daily
          - weekly
          - monthly
          - yearly
          type: string
        entities:
          description: The entities that make the address of this limit
          items:
            enum:
            - Coupon
            - Referral
            - Profile
            - Identifier
            type: string
          type: array
      required:
      - action
      - entities
      - limit
      type: object
    CampaignSet:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        version:
          description: Version of the campaign set
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignSetBranchNode'
      required:
      - applicationId
      - created
      - id
      - set
      - version
      type: object
    CampaignSetNode:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    CampaignSetBranchNode:
      properties:
        type:
          description: Indicates the node type
          enum:
          - SET
          type: string
        name:
          description: Name of the set
          type: string
        operator:
          description: How does the set operates on its elements
          enum:
          - ALL
          - FIRST
          type: string
        elements:
          description: Child elements of this set
          items:
            $ref: '#/components/schemas/CampaignSetNode'
          type: array
      required:
      - elements
      - name
      - operator
      - type
      type: object
    CampaignSetLeafNode:
      properties:
        type:
          description: Indicates the node type
          enum:
          - CAMPAIGN
          type: string
        campaignId:
          description: ID of the campaign
          type: integer
      required:
      - campaignId
      - type
      type: object
    NewCampaignSet:
      description: ""
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        version:
          description: Version of the campaign set
          minimum: 1
          type: integer
        set:
          $ref: '#/components/schemas/CampaignSetBranchNode'
      required:
      - applicationId
      - set
      - version
      type: object
    ReferralConstraints:
      properties:
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
      type: object
    UpdateReferralBatch:
      properties:
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        batchID:
          description: The id of the batch the referral belongs to.
          example: 32535-43255
          title: Batch ID
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
      required:
      - batchID
      type: object
    NewReferral:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        friendProfileIntegrationId: friendProfileIntegrationId
        usageLimit: 80082
        campaignId: 6
        attributes: '{}'
        startDate: 2000-01-23T04:56:07.000+00:00
        advocateProfileIntegrationId: advocateProfileIntegrationId
      properties:
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        campaignId:
          description: ID of the campaign from which the referral received the referral
            code.
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationId:
          description: The Integration ID of the Advocate's Profile.
          title: Advocate's Profile ID
          type: string
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile
          title: Friend's Profile ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
      required:
      - advocateProfileIntegrationId
      - campaignId
      type: object
    ImportEntity:
      properties:
        importId:
          description: The ID of the Import which created this referral.
          type: integer
      type: object
    Referral:
      description: ""
      example:
        code: code
        created: 2000-01-23T04:56:07.000+00:00
        usageLimit: 668355
        campaignId: 8
        usageCounter: 6
        batchId: batchId
        advocateProfileIntegrationId: advocateProfileIntegrationId
        expiryDate: 2000-01-23T04:56:07.000+00:00
        importId: 9
        friendProfileIntegrationId: friendProfileIntegrationId
        attributes: '{}'
        id: 6
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        campaignId:
          description: ID of the campaign from which the referral received the referral
            code.
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationId:
          description: The Integration ID of the Advocate's Profile.
          title: Advocate's Profile ID
          type: string
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile
          title: Friend's Profile ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        importId:
          description: The ID of the Import which created this referral.
          type: integer
        code:
          description: The actual referral code.
          minLength: 4
          title: Referral code
          type: string
        usageCounter:
          description: The number of times this referral code has been successfully
            used.
          title: Referral code Usages
          type: integer
        batchId:
          description: The ID of the batch the referrals belong to.
          title: Batch ID
          type: string
      required:
      - advocateProfileIntegrationId
      - campaignId
      - code
      - created
      - id
      - usageCounter
      - usageLimit
      type: object
    UpdateReferral:
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        friendProfileIntegrationId: friendProfileIntegrationId
        usageLimit: 80082
        attributes: '{}'
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        friendProfileIntegrationId:
          description: An optional Integration ID of the Friend's Profile
          title: Friend's Profile ID
          type: string
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
      type: object
    NewReferralsForMultipleAdvocates:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        advocateProfileIntegrationIds:
        - advocateProfileIntegrationIds
        - advocateProfileIntegrationIds
        - advocateProfileIntegrationIds
        - advocateProfileIntegrationIds
        - advocateProfileIntegrationIds
        validCharacters:
        - validCharacters
        - validCharacters
        usageLimit: 80082
        campaignId: 6
        referralPattern: referralPattern
        attributes: '{}'
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        startDate:
          description: Timestamp at which point the referral code becomes valid.
          format: date-time
          title: Referral code valid from
          type: string
        expiryDate:
          description: Expiry date of the referral code. Referral never expires if
            this is omitted, zero, or negative.
          format: date-time
          title: Referral code valid until
          type: string
        usageLimit:
          description: |
            The number of times a referral code can be used. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          maximum: 999999
          minimum: 0
          title: Referral code Usage Limit
          type: integer
        campaignId:
          description: The ID of the campaign from which the referral received the
            referral code.
          title: Referral's Campaign ID
          type: integer
        advocateProfileIntegrationIds:
          description: An array containing all the respective advocate profiles.
          items:
            type: string
          maxItems: 1000
          minItems: 1
          title: Advocate Profile List
          type: array
        attributes:
          description: Arbitrary properties associated with this item.
          properties: {}
          type: object
        validCharacters:
          description: Set of characters to be used when generating random part of
            code. Defaults to [A-Z, 0-9] (in terms of RegExp).
          items:
            type: string
          type: array
        referralPattern:
          description: |
            The pattern that will be used to generate referrals. The character `#` acts as a placeholder and will be replaced by a random character from the `validCharacters` set.
          maxLength: 100
          minLength: 3
          type: string
      required:
      - advocateProfileIntegrationIds
      - campaignId
      - usageLimit
      type: object
    AttributeQuery:
      description: Object representing a set of of attributes and their respective
        values.
      example:
        language: english
      type: object
    CouponSearch:
      example:
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a coupon. All provided attributes
            will be exactly matched against attributes
          properties: {}
          type: object
      required:
      - attributes
      type: object
    CampaignSearch:
      example:
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a campaign. All provided attributes
            will be exactly matched against campaign attributes
          properties: {}
          type: object
      required:
      - attributes
      type: object
    CampaignCopy:
      example:
        name: name
        description: description
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        applicationIds:
        - 0
        - 0
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        name:
          description: Name of the copied campaign (Defaults to "Copy of original
            campaign name")
          type: string
        applicationIds:
          description: Application IDs of the applications to which a campaign should
            be copied to
          items:
            type: integer
          type: array
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        startTime:
          description: Timestamp when the campaign will become active.
          format: date-time
          type: string
        endTime:
          description: Timestamp when the campaign will become inactive.
          format: date-time
          type: string
        tags:
          description: A list of tags for the campaign.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
      required:
      - applicationIds
      type: object
    NewCoupons:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        recipientIntegrationId: recipientIntegrationId
        uniquePrefix: uniquePrefix
        couponPattern: couponPattern
        validCharacters:
        - validCharacters
        - validCharacters
        usageLimit: 100
        numberOfCoupons: 0
        attributes: '{}'
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        numberOfCoupons:
          description: The number of new coupon codes to generate for the campaign.
            Must be at least 1.
          type: integer
        uniquePrefix:
          description: A unique prefix to prepend to all generated coupons.
          title: Coupon code unique prefix
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        recipientIntegrationId:
          description: The integration ID for this coupon's beneficiary's profile
          title: Receiving customer profile integration ID
          type: string
        validCharacters:
          description: Set of characters to be used when generating random part of
            code. Defaults to [A-Z, 0-9] (in terms of RegExp).
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern that will be used to generate coupon codes. The character `#` acts as a placeholder and will be replaced by a random character from the `validCharacters` set.
          maxLength: 100
          minLength: 3
          type: string
      required:
      - numberOfCoupons
      - usageLimit
      type: object
    NewCouponsForMultipleRecipients:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        couponPattern: couponPattern
        validCharacters:
        - validCharacters
        - validCharacters
        usageLimit: 100
        recipientsIntegrationIds:
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        - recipientsIntegrationIds
        attributes: '{}'
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        recipientsIntegrationIds:
          description: The integration IDs for recipients
          items:
            type: string
          maxItems: 1000
          minItems: 1
          title: Receiving customer profiles integration IDs
          type: array
        validCharacters:
          description: Set of characters to be used when generating random part of
            code. Defaults to [A-Z, 0-9] (in terms of RegExp).
          items:
            type: string
          type: array
        couponPattern:
          description: |
            The pattern that will be used to generate coupon codes. The character `#` acts as a placeholder and will be replaced by a random character from the `validCharacters` set.
          maxLength: 100
          minLength: 3
          type: string
      required:
      - recipientsIntegrationIds
      - usageLimit
      type: object
    UpdateCoupon:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        recipientIntegrationId: recipientIntegrationId
        usageLimit: 100
        attributes: '{}'
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        recipientIntegrationId:
          description: The integration ID for this coupon's beneficiary's profile
          title: Receiving customer profile integration ID
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
      type: object
    UpdateCouponBatch:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        usageLimit: 100
        attributes: '{}'
        batchID: batchID
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
        batchID:
          description: The id of the batch the coupon belongs to.
          title: Batch ID
          type: string
      required:
      - batchID
      type: object
    Coupon:
      description: ""
      example:
        recipientIntegrationId: recipientIntegrationId
        created: 2000-01-23T04:56:07.000+00:00
        campaignId: 211
        usageLimit: 100
        referralId: 326632952
        usageCounter: 10
        batchId: 32535-43255
        discountCounter: 3.5571952270680973
        expiryDate: 2000-01-23T04:56:07.000+00:00
        importId: 1
        reservation: true
        attributes: '{}'
        id: 6
        value: XMAS-20-2021
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
        discountRemainder: 6.965117697638846
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        value:
          description: The actual coupon code.
          example: XMAS-20-2021
          minLength: 4
          title: Coupon Code
          type: string
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        usageCounter:
          description: The number of times this coupon has been successfully used.
          example: 10
          title: Number of coupon usages
          type: integer
        discountCounter:
          description: The amount of discounts given on rules redeeming this coupon.
            Only usable if a coupon discount budget was set for this coupon.
          title: Discounts Given
          type: number
        discountRemainder:
          description: The remaining discount this coupon can give.
          title: Coupon Discount Remainder
          type: number
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          title: Attributes of coupon
          type: object
        referralId:
          description: The integration ID of the referring customer (if any) for whom
            this coupon was created as an effect.
          example: 326632952
          title: Advocate ID
          type: integer
        recipientIntegrationId:
          description: The Integration ID of the customer that is allowed to redeem
            this coupon.
          title: Recipient ID
          type: string
        importId:
          description: The ID of the Import which created this coupon.
          title: Import ID
          type: integer
        reservation:
          description: This value controls what reservations mean to a coupon. If
            set to true the coupon reservation is used to mark it as a favorite, if
            set to false the coupon reservation is used as a requirement of usage.
            This value defaults to true if not specified.
          example: true
          title: Reservation Status
          type: boolean
        batchId:
          description: The id of the batch the coupon belongs to.
          example: 32535-43255
          title: Batch ID
          type: string
      required:
      - campaignId
      - created
      - id
      - usageCounter
      - usageLimit
      - value
      type: object
    InventoryCoupon:
      description: ""
      example:
        recipientIntegrationId: recipientIntegrationId
        created: 2000-01-23T04:56:07.000+00:00
        campaignId: 211
        usageLimit: 100
        referralId: 326632952
        profileRedemptionCount: 5
        usageCounter: 10
        batchId: 32535-43255
        discountCounter: 0.8008281904610115
        expiryDate: 2000-01-23T04:56:07.000+00:00
        importId: 1
        reservation: true
        attributes: '{}'
        id: 6
        state: state
        value: XMAS-20-2021
        discountLimit: 30.0
        startDate: 2000-01-23T04:56:07.000+00:00
        discountRemainder: 6.027456183070403
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        value:
          description: The actual coupon code.
          example: XMAS-20-2021
          minLength: 4
          title: Coupon Code
          type: string
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        usageCounter:
          description: The number of times this coupon has been successfully used.
          example: 10
          title: Number of coupon usages
          type: integer
        discountCounter:
          description: The amount of discounts given on rules redeeming this coupon.
            Only usable if a coupon discount budget was set for this coupon.
          title: Discounts Given
          type: number
        discountRemainder:
          description: The remaining discount this coupon can give.
          title: Coupon Discount Remainder
          type: number
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          title: Attributes of coupon
          type: object
        referralId:
          description: The integration ID of the referring customer (if any) for whom
            this coupon was created as an effect.
          example: 326632952
          title: Advocate ID
          type: integer
        recipientIntegrationId:
          description: The Integration ID of the customer that is allowed to redeem
            this coupon.
          title: Recipient ID
          type: string
        importId:
          description: The ID of the Import which created this coupon.
          title: Import ID
          type: integer
        reservation:
          description: This value controls what reservations mean to a coupon. If
            set to true the coupon reservation is used to mark it as a favorite, if
            set to false the coupon reservation is used as a requirement of usage.
            This value defaults to true if not specified.
          example: true
          title: Reservation Status
          type: boolean
        batchId:
          description: The id of the batch the coupon belongs to.
          example: 32535-43255
          title: Batch ID
          type: string
        profileRedemptionCount:
          description: The number of times the coupon was redeemed by the profile.
          title: Number of coupon usages
          type: integer
        state:
          description: |
            Can be either active, used, expired, pending or disabled.
            active: reserved coupons that are neither pending nor used nor expired, and have a non-exhausted limit counter.
            used: coupons that are not pending, and have reached their redemption limit or were redeemed by the profile before expiration.
            expired: all non-pending, non-active, non-used coupons that were not redeemed by the profile.
            pending: coupons that have a start date in the future.
            disabled: coupons of non-active campaigns.
          title: State of the coupon
          type: string
      required:
      - campaignId
      - created
      - id
      - profileRedemptionCount
      - state
      - usageCounter
      - usageLimit
      - value
      type: object
    CampaignAnalytics:
      description: ""
      example:
        date: 2000-01-23T04:56:07.000+00:00
        couponRolledbackRedemptions: 1
        totalCouponRolledbackRedemptions: 1
        campaignRefundedDiscounts: 9.301444243932576
        totalDeductedLoyaltyPoints: 9.018348186070783
        couponRedemptions: 7
        totalCampaignDiscountCosts: 7.061401241503109
        referralRedemptions: 6
        totalCampaignRevenue: 1.4658129805029452
        campaignRevenue: 6.027456183070403
        campaignDiscountCosts: 2.3021358869347655
        totalReferralRedemptions: 7
        couponsCreated: 1
        addedLoyaltyPoints: 9.369310271410669
        campaignRefund: 5.962133916683182
        campaignFreeItems: 2
        totalAddedLoyaltyPoints: 6.683562403749608
        totalCampaignFreeItems: 4
        totalCampaignRefundedDiscounts: 3.616076749251911
        totalCampaignRefund: 5.637376656633329
        totalCouponsCreated: 4
        deductedLoyaltyPoints: 8.762042012749001
        totalCouponRedemptions: 1
        referralsCreated: 5
        totalReferralsCreated: 9
      properties:
        date:
          format: date-time
          type: string
        campaignRevenue:
          description: Amount of revenue in this campaign (for coupon or discount
            sessions).
          type: number
        totalCampaignRevenue:
          description: Amount of revenue in this campaign since it began (for coupon
            or discount sessions).
          type: number
        campaignRefund:
          description: Amount of refunds in this campaign (for coupon or discount
            sessions).
          type: number
        totalCampaignRefund:
          description: Amount of refunds in this campaign since it began (for coupon
            or discount sessions).
          type: number
        campaignDiscountCosts:
          description: Amount of cost caused by discounts given in the campaign.
          type: number
        totalCampaignDiscountCosts:
          description: Amount of cost caused by discounts given in the campaign since
            it began.
          type: number
        campaignRefundedDiscounts:
          description: Amount of discounts rolledback due to refund in the campaign.
          type: number
        totalCampaignRefundedDiscounts:
          description: Amount of discounts rolledback due to refund in the campaign
            since it began.
          type: number
        campaignFreeItems:
          description: Amount of free items given in the campaign.
          type: integer
        totalCampaignFreeItems:
          description: Amount of free items given in the campaign since it began.
          type: integer
        couponRedemptions:
          description: Number of coupon redemptions in the campaign.
          type: integer
        totalCouponRedemptions:
          description: Number of coupon redemptions in the campaign since it began.
          type: integer
        couponRolledbackRedemptions:
          description: Number of coupon redemptions that have been rolled back (due
            to canceling closed session) in the campaign.
          type: integer
        totalCouponRolledbackRedemptions:
          description: Number of coupon redemptions that have been rolled back (due
            to canceling closed session) in the campaign since it began.
          type: integer
        referralRedemptions:
          description: Number of referral redemptions in the campaign.
          type: integer
        totalReferralRedemptions:
          description: Number of referral redemptions in the campaign since it began.
          type: integer
        couponsCreated:
          description: Number of coupons created in the campaign by the rule engine.
          type: integer
        totalCouponsCreated:
          description: Number of coupons created in the campaign by the rule engine
            since it began.
          type: integer
        referralsCreated:
          description: Number of referrals created in the campaign by the rule engine.
          type: integer
        totalReferralsCreated:
          description: Number of referrals created in the campaign by the rule engine
            since it began.
          type: integer
        addedLoyaltyPoints:
          description: Number of added loyalty points in the campaign in a specific
            interval.
          type: number
        totalAddedLoyaltyPoints:
          description: Number of added loyalty points in the campaign since it began.
          type: number
        deductedLoyaltyPoints:
          description: Number of deducted loyalty points in the campaign in a specific
            interval.
          type: number
        totalDeductedLoyaltyPoints:
          description: Number of deducted loyalty points in the campaign since it
            began.
          type: number
      required:
      - addedLoyaltyPoints
      - campaignDiscountCosts
      - campaignFreeItems
      - campaignRefund
      - campaignRefundedDiscounts
      - campaignRevenue
      - couponRedemptions
      - couponRolledbackRedemptions
      - couponsCreated
      - date
      - deductedLoyaltyPoints
      - referralRedemptions
      - referralsCreated
      - totalAddedLoyaltyPoints
      - totalCampaignDiscountCosts
      - totalCampaignFreeItems
      - totalCampaignRefund
      - totalCampaignRefundedDiscounts
      - totalCampaignRevenue
      - totalCouponRedemptions
      - totalCouponRolledbackRedemptions
      - totalCouponsCreated
      - totalDeductedLoyaltyPoints
      - totalReferralRedemptions
      - totalReferralsCreated
      type: object
    LoyaltyStatistics:
      description: ""
      example:
        date: 2000-01-23T04:56:07.000+00:00
        totalMembers: 5.637376656633329
        totalSpentPoints: 1.4658129805029452
        spentPoints:
          createdManually: 7.061401241503109
          createdViaRuleEngine: 9.301444243932576
        totalActivePoints: 0.8008281904610115
        totalPendingPoints: 6.027456183070403
        totalExpiredPoints: 5.962133916683182
        newMembers: 2.3021358869347655
        earnedPoints:
          createdManually: 7.061401241503109
          createdViaRuleEngine: 9.301444243932576
      properties:
        date:
          description: Date at which data point was collected.
          format: date-time
          type: string
        totalActivePoints:
          description: Total of active points for this loyalty program.
          type: number
        totalPendingPoints:
          description: Total of pending points for this loyalty program.
          type: number
        totalSpentPoints:
          description: Total of spent points for this loyalty program.
          type: number
        totalExpiredPoints:
          description: Total of expired points for this loyalty program.
          type: number
        totalMembers:
          description: Number of loyalty program members.
          type: number
        newMembers:
          description: Number of members who joined on this day.
          type: number
        spentPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
        earnedPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
      required:
      - date
      - earnedPoints
      - newMembers
      - spentPoints
      - totalActivePoints
      - totalExpiredPoints
      - totalMembers
      - totalPendingPoints
      - totalSpentPoints
      type: object
    LoyaltyDashboardData:
      description: Datapoint for the graphs and cards on a loyalty program dashboard.
      properties:
        date:
          description: Date at which data point was collected.
          format: date-time
          type: string
        totalActivePoints:
          description: Total of active points for this loyalty program.
          type: number
        totalPendingPoints:
          description: Total of pending points for this loyalty program.
          type: number
        totalSpentPoints:
          description: Total of spent points for this loyalty program.
          type: number
        totalExpiredPoints:
          description: Total of expired points for this loyalty program.
          type: number
        totalMembers:
          description: Number of loyalty program members.
          type: number
        newMembers:
          description: Number of members who joined on this day.
          type: number
        spentPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
        earnedPoints:
          $ref: '#/components/schemas/LoyaltyDashboardPointsBreakdown'
      required:
      - date
      - earnedPoints
      - newMembers
      - spentPoints
      - totalActivePoints
      - totalExpiredPoints
      - totalMembers
      - totalPendingPoints
      - totalSpentPoints
      type: object
    LoyaltyDashboardPointsBreakdown:
      example:
        createdManually: 7.061401241503109
        createdViaRuleEngine: 9.301444243932576
      properties:
        createdManually:
          type: number
        createdViaRuleEngine:
          type: number
      required:
      - createdManually
      - createdViaRuleEngine
      type: object
    ApplicationApiHealth:
      description: Report of health of the API connection of an application
      example:
        summary: OK
        lastUsed: 2000-01-23T04:56:07.000+00:00
      properties:
        summary:
          description: One-word summary of the health of the API connection of an
            application
          enum:
          - OK
          - WARNING
          - ERROR
          - CRITICAL
          - NONE
          type: string
        lastUsed:
          description: time of last request relevant to the API health test
          format: date-time
          type: string
      required:
      - lastUsed
      - summary
      type: object
    AccessLogEntry:
      description: Log of application accesses
      example:
        method: method
        requestPayload: requestPayload
        responsePayload: responsePayload
        requestUri: requestUri
        time: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        status: 0
      properties:
        uuid:
          description: UUID reference of request
          type: string
        status:
          description: HTTP status code of response
          type: integer
        method:
          description: HTTP method of request
          type: string
        requestUri:
          description: target URI of request
          type: string
        time:
          description: timestamp of request
          format: date-time
          type: string
        requestPayload:
          description: payload of request
          type: string
        responsePayload:
          description: payload of response
          type: string
      required:
      - method
      - requestPayload
      - requestUri
      - responsePayload
      - status
      - time
      - uuid
      type: object
    WebhookLogEntry:
      description: Log of webhook api calls
      example:
        requestTime: 2000-01-23T04:56:07.000+00:00
        request: request
        webhookId: 6
        response: response
        responseTime: 2000-01-23T04:56:07.000+00:00
        integrationRequestUuid: integrationRequestUuid
        id: id
        applicationId: 1
        url: url
        status: 5
      properties:
        id:
          description: UUID reference of the webhook request
          type: string
        integrationRequestUuid:
          description: UUID reference of the integration request linked to this webhook
            request
          type: string
        webhookId:
          description: ID of the webhook that triggered the request
          type: integer
        applicationId:
          description: ID of the application that triggered the webhook
          type: integer
        url:
          description: Target url of request
          type: string
        request:
          description: Request message
          type: string
        response:
          description: Response message
          type: string
        status:
          description: HTTP status code of response
          type: integer
        requestTime:
          description: Timestamp of request
          format: date-time
          type: string
        responseTime:
          description: Timestamp of response
          format: date-time
          type: string
      required:
      - id
      - integrationRequestUuid
      - request
      - requestTime
      - url
      - webhookId
      type: object
    WebhookActivationLogEntry:
      description: Log of activated webhooks
      example:
        webhookId: 6
        campaignId: 5
        created: 2000-01-23T04:56:07.000+00:00
        integrationRequestUuid: integrationRequestUuid
        applicationId: 1
      properties:
        integrationRequestUuid:
          description: UUID reference of the integration request that triggered the
            effect with the webhook
          type: string
        webhookId:
          description: ID of the webhook that triggered the request
          type: integer
        applicationId:
          description: ID of the application that triggered the webhook
          type: integer
        campaignId:
          description: ID of the campaign that triggered the webhook
          type: integer
        created:
          description: Timestamp of request
          format: date-time
          type: string
      required:
      - applicationId
      - campaignId
      - created
      - integrationRequestUuid
      - webhookId
      type: object
    User:
      description: ""
      example:
        created: 2000-01-23T04:56:07.000+00:00
        roles:
        - 6
        - 6
        accountId: 3886
        applicationNotificationSubscriptions: '{}'
        inviteToken: inviteToken
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        id: 6
        state: invited
        latestFeedTimestamp: 2000-01-23T04:56:07.000+00:00
        authMethod: authMethod
        email: john.doe@example.com
        policy: '{}'
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        inviteToken:
          description: Invite token, empty if the user as already accepted their invite.
          type: string
        state:
          description: Current user state.
          enum:
          - invited
          - active
          - deactivated
          type: string
        name:
          description: Full name
          type: string
        policy:
          description: User ACL Policy
          properties: {}
          type: object
        latestFeedTimestamp:
          description: Latest timestamp the user has been notified for feed.
          format: date-time
          type: string
        roles:
          description: Contains a list of all roles the user is a member of
          items:
            type: integer
          type: array
        applicationNotificationSubscriptions:
          properties: {}
          type: object
        authMethod:
          description: The Authentication method for this user
          type: string
      required:
      - accountId
      - created
      - email
      - id
      - inviteToken
      - modified
      - name
      - policy
      - state
      type: object
    NewInvitation:
      description: Parameters for inviting a new user
      properties:
        name:
          description: Name of the user being invited.
          type: string
        email:
          format: email
          type: string
        acl:
          description: a blob of acl json
          type: string
        roles:
          description: An array of roleIDs to assign the new user to
          items:
            type: integer
          type: array
      required:
      - acl
      - email
      type: object
    Change:
      description: ""
      example:
        new: '{}'
        created: 2000-01-23T04:56:07.000+00:00
        old: '{}'
        id: 6
        applicationId: 1
        userId: 6
        entity: entity
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        applicationId:
          description: ID of application associated with change
          type: integer
        entity:
          description: API endpoint on which the change was initiated.
          type: string
        old:
          description: Resource before the change occurred.
          properties: {}
          type: object
        new:
          description: Resource after the change occurred.
          properties: {}
          type: object
      required:
      - created
      - entity
      - id
      - userId
      type: object
    LoyaltyPoints:
      description: Points to add or deduct
      example:
        name: name
        validityDuration: validityDuration
        pendingDuration: pendingDuration
        subLedgerID: subLedgerID
        points: 8008281.904610115
      properties:
        points:
          description: Amount of loyalty points
          exclusiveMaximum: true
          exclusiveMinimum: true
          maximum: 1E+8
          minimum: 0
          type: number
        name:
          description: Allows to specify a name for the addition or deduction
          type: string
        validityDuration:
          description: Indicates the duration after which the added loyalty points
            should expire. The format is a number followed by one letter indicating
            the time unit, like '1h' or '40m' (defined by Go time package).
          type: string
        pendingDuration:
          description: Indicates the amount of time before the points are considered
            valid. The format is a number followed by one letter indicating the time
            unit, like '1h' or '40m' (defined by Go time package).
          type: string
        subLedgerID:
          description: This specifies if we are adding loyalty points to the main
            ledger or a subledger
          type: string
      required:
      - points
      type: object
    LoyaltyProgram:
      description: ""
      example:
        accountID: 5
        defaultValidity: defaultValidity
        defaultPending: defaultPending
        tiers:
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          minPoints: 2.302135886934765E7
          id: 6
          programID: 5
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          minPoints: 2.302135886934765E7
          id: 6
          programID: 5
        allowSubledger: true
        created: 2000-01-23T04:56:07.000+00:00
        timezone: timezone
        name: name
        description: description
        id: 6
        title: title
        subscribedApplications:
        - 1
        - 1
      properties:
        id:
          description: The ID of loyalty program. Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        title:
          description: The display title for the Loyalty Program.
          type: string
        description:
          description: Description of our Loyalty Program.
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program
          type: boolean
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        accountID:
          description: The ID of the Talon.One account that owns this program.
          type: integer
        name:
          description: The internal name for the Loyalty Program. This is an immutable
            value.
          type: string
        tiers:
          description: The tiers in this loyalty program
          items:
            $ref: '#/components/schemas/LoyaltyTier'
          type: array
      required:
      - accountID
      - allowSubledger
      - created
      - defaultPending
      - defaultValidity
      - description
      - id
      - name
      - subscribedApplications
      - title
      type: object
    LoyaltyTier:
      description: ""
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        minPoints: 2.302135886934765E7
        id: 6
        programID: 5
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        programID:
          description: The ID of the loyalty program that owns this entity.
          type: integer
        name:
          description: The name of the tier
          type: string
        minPoints:
          description: The minimum amount of points required to be eligible for the
            tier
          exclusiveMaximum: true
          maximum: 1E+8
          minimum: 0
          type: number
      required:
      - created
      - id
      - minPoints
      - name
      - programID
      type: object
    NewLoyaltyTier:
      description: A tier in a loyalty program
      properties:
        name:
          description: The name of the tier
          type: string
        minPoints:
          description: The minimum amount of points required to be eligible for the
            tier
          exclusiveMaximum: true
          maximum: 1E+8
          minimum: 0
          type: number
      required:
      - minPoints
      - name
      type: object
    BaseLoyaltyProgram:
      properties:
        title:
          description: The display title for the Loyalty Program.
          type: string
        description:
          description: Description of our Loyalty Program.
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program
          type: boolean
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
      type: object
    NewLoyaltyProgram:
      description: ""
      properties:
        title:
          description: The display title for the Loyalty Program.
          type: string
        description:
          description: Description of our Loyalty Program.
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program
          type: boolean
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        name:
          description: The internal name for the Loyalty Program. This is an immutable
            value.
          type: string
        tiers:
          description: The tiers in this loyalty program
          items:
            $ref: '#/components/schemas/NewLoyaltyTier'
          type: array
      required:
      - allowSubledger
      - defaultPending
      - defaultValidity
      - name
      - title
      type: object
    UpdateLoyaltyProgram:
      description: ""
      properties:
        title:
          description: The display title for the Loyalty Program.
          type: string
        description:
          description: Description of our Loyalty Program.
          type: string
        subscribedApplications:
          description: A list containing the IDs of all applications that are subscribed
            to this Loyalty Program.
          items:
            type: integer
          type: array
        defaultValidity:
          description: Indicates the default duration after which new loyalty points
            should expire. The format is a number, followed by one letter indicating
            the unit; like '1h' or '40m'.
          type: string
        defaultPending:
          description: Indicates the default duration for the pending time, after
            which points will be valid. The format is a number followed by a duration
            unit, like '1h' or '40m'.
          type: string
        allowSubledger:
          description: Indicates if this program supports subledgers inside the program
          type: boolean
        timezone:
          description: A string containing an IANA timezone descriptor.
          minLength: 1
          type: string
        tiers:
          description: The tiers in this loyalty program
          items:
            $ref: '#/components/schemas/NewLoyaltyTier'
          type: array
      type: object
    LoyaltyLedgerEntry:
      description: A single row of the ledger, describing one addition or deduction.
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        eventID: 7
        amount: 9.301444243932576
        customerProfileID: customerProfileID
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        subLedgerID: subLedgerID
        customerSessionID: customerSessionID
        type: type
        userID: 3
        programID: 2
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          format: date-time
          type: string
        programID:
          type: integer
        customerProfileID:
          type: string
        customerSessionID:
          type: string
        eventID:
          type: integer
        type:
          description: |
            The type of the ledger transaction. Possible values are addition, subtraction, expire or expiring (for expiring points ledgers)
          type: string
        amount:
          type: number
        startDate:
          format: date-time
          type: string
        expiryDate:
          format: date-time
          type: string
        name:
          description: A name referencing the condition or effect that added this
            entry, or the specific name provided in an API call.
          type: string
        subLedgerID:
          description: This specifies if we are adding loyalty points to the main
            ledger or a subledger
          type: string
        userID:
          description: This is the ID of the user who created this entry, if the addition
            or subtraction was done manually.
          type: integer
      required:
      - amount
      - created
      - customerProfileID
      - name
      - programID
      - subLedgerID
      - type
      type: object
    LoyaltyLedger:
      description: Ledger of Balance in Loyalty Program for a Customer.
      example:
        ledger:
          total: 0.8008281904610115
          totalSpentPoints: 5.962133916683182
          activePoints:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          expiringPoints:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          totalActivePoints: 6.027456183070403
          totalPendingPoints: 1.4658129805029452
          totalExpiredPoints: 5.637376656633329
          transactions:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          expiredPoints:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          currentTier:
            name: name
            id: 9
          pendingPoints:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            eventID: 7
            amount: 9.301444243932576
            customerProfileID: customerProfileID
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            subLedgerID: subLedgerID
            customerSessionID: customerSessionID
            type: type
            userID: 3
            programID: 2
            startDate: 2000-01-23T04:56:07.000+00:00
        subLedgers:
          key:
            total: 0.8008281904610115
            totalSpentPoints: 5.962133916683182
            activePoints:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            expiringPoints:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            totalActivePoints: 6.027456183070403
            totalPendingPoints: 1.4658129805029452
            totalExpiredPoints: 5.637376656633329
            transactions:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            expiredPoints:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            currentTier:
              name: name
              id: 9
            pendingPoints:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              eventID: 7
              amount: 9.301444243932576
              customerProfileID: customerProfileID
              created: 2000-01-23T04:56:07.000+00:00
              name: name
              subLedgerID: subLedgerID
              customerSessionID: customerSessionID
              type: type
              userID: 3
              programID: 2
              startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        ledger:
          $ref: '#/components/schemas/LoyaltySubLedger'
        subLedgers:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltySubLedger'
          description: A map containing a list of all loyalty subledger balances.
          type: object
      required:
      - ledger
      type: object
    LoyaltySubLedger:
      description: Ledger of Balance in Loyalty Program for a Customer.
      example:
        total: 0.8008281904610115
        totalSpentPoints: 5.962133916683182
        activePoints:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        expiringPoints:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        totalActivePoints: 6.027456183070403
        totalPendingPoints: 1.4658129805029452
        totalExpiredPoints: 5.637376656633329
        transactions:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        expiredPoints:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        currentTier:
          name: name
          id: 9
        pendingPoints:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          eventID: 7
          amount: 9.301444243932576
          customerProfileID: customerProfileID
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subLedgerID: subLedgerID
          customerSessionID: customerSessionID
          type: type
          userID: 3
          programID: 2
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          description: |
            ⚠️ Deprecated: Use 'totalActivePoints' property instead. Total amount of currently active and available points in the customer's balance.
          title: Current Balance (Deprecated)
          type: number
        totalActivePoints:
          description: Total amount of currently active and available points in the
            customer's balance.
          title: Current Balance
          type: number
        totalPendingPoints:
          description: Total amount of pending points, which are not active yet but
            will become active in the future.
          title: Total pending points
          type: number
        totalSpentPoints:
          description: Total amount of points already spent by this customer.
          title: Total spent points
          type: number
        totalExpiredPoints:
          description: Total amount of points, that expired without ever being spent.
          title: Total expired points
          type: number
        transactions:
          description: List of all events that have happened such as additions, subtractions
            and expiries.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        expiringPoints:
          description: List of all points that will expire.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        activePoints:
          description: List of all currently active points.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        pendingPoints:
          description: List of all points pending activation.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        expiredPoints:
          description: List of expired points.
          items:
            $ref: '#/components/schemas/LoyaltyLedgerEntry'
          type: array
        currentTier:
          $ref: '#/components/schemas/Tier'
      required:
      - total
      - totalActivePoints
      - totalExpiredPoints
      - totalPendingPoints
      - totalSpentPoints
      type: object
    Loyalty:
      description: Customer specific information about loyalty points.
      example:
        programs:
          key:
            ledger:
              pendingBalance: 7.457744773683766
              currentBalance: 6.84685269835264
              spentBalance: 4.965218492984954
              tentativeCurrentBalance: 5.025004791520295
              pointsToNextTier: 9.369310271410669
              expiredBalance: 1.1730742509559433
              currentTier:
                name: name
                id: 9
            subLedgers:
              key:
                pendingBalance: 7.457744773683766
                currentBalance: 6.84685269835264
                spentBalance: 4.965218492984954
                tentativeCurrentBalance: 5.025004791520295
                pointsToNextTier: 9.369310271410669
                expiredBalance: 1.1730742509559433
                currentTier:
                  name: name
                  id: 9
            name: name
            id: 1
            title: title
      properties:
        programs:
          additionalProperties:
            $ref: '#/components/schemas/LoyaltyProgramLedgers'
          description: A map holding information about the loyalty programs balance
          title: Customer's current loyalty program balance.
          type: object
      required:
      - programs
      type: object
    LoyaltyProgramLedgers:
      description: Customer specific information about loyalty points.
      example:
        ledger:
          pendingBalance: 7.457744773683766
          currentBalance: 6.84685269835264
          spentBalance: 4.965218492984954
          tentativeCurrentBalance: 5.025004791520295
          pointsToNextTier: 9.369310271410669
          expiredBalance: 1.1730742509559433
          currentTier:
            name: name
            id: 9
        subLedgers:
          key:
            pendingBalance: 7.457744773683766
            currentBalance: 6.84685269835264
            spentBalance: 4.965218492984954
            tentativeCurrentBalance: 5.025004791520295
            pointsToNextTier: 9.369310271410669
            expiredBalance: 1.1730742509559433
            currentTier:
              name: name
              id: 9
        name: name
        id: 1
        title: title
      properties:
        id:
          description: The internal ID of loyalty program
          type: integer
        title:
          description: Visible name of loyalty program
          type: string
        name:
          description: Internal name of loyalty program
          type: string
        ledger:
          $ref: '#/components/schemas/LedgerInfo'
        subLedgers:
          additionalProperties:
            $ref: '#/components/schemas/LedgerInfo'
          description: A map containing information about each loyalty subledger
          type: object
      required:
      - id
      - ledger
      - name
      - title
      type: object
    LedgerInfo:
      description: ""
      example:
        pendingBalance: 7.457744773683766
        currentBalance: 6.84685269835264
        spentBalance: 4.965218492984954
        tentativeCurrentBalance: 5.025004791520295
        pointsToNextTier: 9.369310271410669
        expiredBalance: 1.1730742509559433
        currentTier:
          name: name
          id: 9
      properties:
        currentBalance:
          description: Sum of current active points amounts
          title: Current balance
          type: number
        pendingBalance:
          description: Sum of pending points amounts
          title: Pending balance
          type: number
        expiredBalance:
          description: Sum of expired points amounts
          title: Expired balance
          type: number
        spentBalance:
          description: Sum of spent points amounts
          title: Spent balance
          type: number
        tentativeCurrentBalance:
          description: Sum of current active points amounts, including additions and
            deductions on open sessions
          title: Tentative current balance
          type: number
        currentTier:
          $ref: '#/components/schemas/Tier'
        pointsToNextTier:
          description: Points required to move up a tier.
          type: number
      required:
      - currentBalance
      - expiredBalance
      - pendingBalance
      - spentBalance
      - tentativeCurrentBalance
      type: object
    Tier:
      example:
        name: name
        id: 9
      properties:
        id:
          description: The internal ID of the tier
          type: integer
        name:
          description: The name of the tier
          type: string
      required:
      - id
      - name
      type: object
    LoyaltyProgramBalance:
      description: The balance in a Loyalty Program for some Customer.
      properties:
        currentBalance:
          description: Sum of current active points amounts
          title: Current balance
          type: number
        pendingBalance:
          description: Sum of pending points amounts
          title: Pending balance
          type: number
        expiredBalance:
          description: Sum of expired points amounts
          title: Expired balance
          type: number
        spentBalance:
          description: Sum of spent points amounts
          title: Spent balance
          type: number
        tentativeCurrentBalance:
          description: Sum of current active points amounts, including additions and
            deductions on open sessions
          title: Tentative current balance
          type: number
      required:
      - currentBalance
      - expiredBalance
      - pendingBalance
      - spentBalance
      - tentativeCurrentBalance
      type: object
    CustomerProfileSearchQuery:
      example:
        integrationIDs:
        - integrationIDs
        - integrationIDs
        profileIDs:
        - 0
        - 0
        attributes: '{}'
      properties:
        attributes:
          description: Properties to match against a customer profile. All provided
            attributes will be exactly matched against profile attributes
          properties: {}
          type: object
        integrationIDs:
          items:
            type: string
          type: array
        profileIDs:
          items:
            type: integer
          type: array
      type: object
    NewCustomerProfile:
      properties:
        attributes:
          description: Arbitrary properties associated with this item
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
      type: object
    CustomerProfile:
      description: ""
      example:
        accountId: 7
        closedSessions: 3
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: URNGV8294NV
        attributes:
          Language: english
          ShippingCountry: DE
        totalSales: 299.99
        lastActivity: 2000-01-23T04:56:07.000+00:00
        id: 6
        loyaltyMemberships:
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 9
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 9
        audienceMemberships:
        - name: name
          id: 3
        - name: name
          id: 3
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created.
          format: date-time
          type: string
        integrationId:
          description: The integration ID for this entity sent to and used in the
            Talon.One system.
          example: URNGV8294NV
          format: string
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        accountId:
          description: The ID of the Talon.One account that owns this profile.
          title: Profile belongs to Account
          type: integer
        closedSessions:
          description: The total amount of closed sessions by a customer. A closed
            session is a successful purchase.
          example: 3
          title: Closed sessions
          type: integer
        totalSales:
          description: Sum of all purchases made by this customer
          example: 299.99
          title: Total Sales
          type: number
        loyaltyMemberships:
          description: A list of loyalty programs joined by the customer
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          title: Loyalty programed joined
          type: array
        audienceMemberships:
          description: A list of audiences the customer belongs to
          items:
            $ref: '#/components/schemas/AudienceMembership'
          title: Audience memberships
          type: array
        lastActivity:
          description: Timestamp of the most recent event received from this customer
          format: date-time
          title: Last activity of customer
          type: string
      required:
      - accountId
      - attributes
      - closedSessions
      - created
      - id
      - integrationId
      - lastActivity
      - totalSales
      type: object
    CustomerInventory:
      example:
        coupons:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          profileRedemptionCount: 5
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 0.8008281904610115
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          state: state
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.027456183070403
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          profileRedemptionCount: 5
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 0.8008281904610115
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          state: state
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.027456183070403
        referrals:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        profile:
          accountId: 7
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        loyalty:
          programs:
            key:
              ledger:
                pendingBalance: 7.457744773683766
                currentBalance: 6.84685269835264
                spentBalance: 4.965218492984954
                tentativeCurrentBalance: 5.025004791520295
                pointsToNextTier: 9.369310271410669
                expiredBalance: 1.1730742509559433
                currentTier:
                  name: name
                  id: 9
              subLedgers:
                key:
                  pendingBalance: 7.457744773683766
                  currentBalance: 6.84685269835264
                  spentBalance: 4.965218492984954
                  tentativeCurrentBalance: 5.025004791520295
                  pointsToNextTier: 9.369310271410669
                  expiredBalance: 1.1730742509559433
                  currentTier:
                    name: name
                    id: 9
              name: name
              id: 1
              title: title
        giveaways:
        - code: code
          importId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          importId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        profile:
          $ref: '#/components/schemas/CustomerProfile'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        referrals:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
        coupons:
          items:
            $ref: '#/components/schemas/InventoryCoupon'
          type: array
        giveaways:
          items:
            $ref: '#/components/schemas/Giveaway'
          type: array
      type: object
    NewCustomerSession:
      description: ""
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        coupon:
          description: Any coupon code entered.
          maxLength: 100
          title: Coupon entered in session
          type: string
        referral:
          description: Any referral code entered.
          maxLength: 100
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`, after which valid transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. `closed` → `cancelled`

            For more information, see [Entities](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Items in customer's cart
          type: array
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts.
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        total:
          description: The total sum of the cart in one session.
          title: Session Total
          type: number
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
      type: object
    NewCustomerSessionV2:
      description: ""
      example:
        couponCodes: XMAS-20-2021
        additionalCosts:
          shipping:
            price: 9
        profileId: URNGV8294NV
        identifiers:
        - 91.11.156.141
        referralCode: NT2K54D9
        attributes:
          ShippingCity: Berlin
        state: open
        cartItems:
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        couponCodes:
          description: Any coupon codes entered.
          example: XMAS-20-2021
          items:
            maxLength: 100
            type: string
          title: Coupons entered in session
          type: array
        referralCode:
          description: Any referral code entered.
          example: NT2K54D9
          maxLength: 100
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`,
            after which valid transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. `closed` → `cancelled`

            For more information, see [Entites](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - cancelled
          example: open
          title: Customer's session state
          type: string
        cartItems:
          description: All items the customer will be purchasing in this session
          items:
            $ref: '#/components/schemas/CartItem'
          title: Customer session's cart items
          type: array
        additionalCosts:
          additionalProperties:
            $ref: '#/components/schemas/AdditionalCost'
          description: Any costs associated with the session that can not be explicitly
            attributed to cart items. Examples include shipping costs and service
            fees.
          example:
            shipping:
              price: 9
          type: object
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts.
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          example:
            ShippingCity: Berlin
          properties: {}
          type: object
      type: object
    CustomerAnalytics:
      description: ""
      example:
        freeItems: 1
        acceptedCoupons: 0
        totalDiscounts: 7.061401241503109
        totalDiscountedOrders: 5
        totalOrders: 5
        totalRevenue: 2.3021358869347655
        createdCoupons: 6
      properties:
        acceptedCoupons:
          description: Total accepted coupons for this customer
          type: integer
        createdCoupons:
          description: Total created coupons for this customer
          type: integer
        freeItems:
          description: Total free items given to this customer
          type: integer
        totalOrders:
          description: Total orders made by this customer
          type: integer
        totalDiscountedOrders:
          description: Total orders made by this customer that had a discount
          type: integer
        totalRevenue:
          description: Total Revenue across all closed sessions
          type: number
        totalDiscounts:
          description: The sum of discounts that were given across all closed sessions
          type: number
      required:
      - acceptedCoupons
      - createdCoupons
      - freeItems
      - totalDiscountedOrders
      - totalDiscounts
      - totalOrders
      - totalRevenue
      type: object
    CustomerActivityReport:
      description: ""
      example:
        couponUseAttempts: 1
        created: 2000-01-23T04:56:07.000+00:00
        totalOrdersNoCoupon: 9
        integrationId: URNGV8294NV
        couponRedemptions: 6
        couponFailedAttempts: 5
        accruedRevenue: 2.3021358869347655
        name: name
        customerId: 0
        lastActivity: 2000-01-23T04:56:07.000+00:00
        totalOrders: 7
        campaignName: campaignName
        accruedDiscounts: 5.637376656633329
      properties:
        integrationId:
          description: The integration ID for this entity sent to and used in the
            Talon.One system.
          example: URNGV8294NV
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        name:
          description: The name for this customer profile.
          type: string
        customerId:
          description: The internal Talon.One ID of the customer.
          type: integer
        lastActivity:
          description: The last activity of the customer.
          format: date-time
          type: string
        couponRedemptions:
          description: Number of coupon redemptions in all customer campaigns.
          type: integer
        couponUseAttempts:
          description: Number of coupon use attempts in all customer campaigns.
          type: integer
        couponFailedAttempts:
          description: Number of failed coupon use attempts in all customer campaigns.
          type: integer
        accruedDiscounts:
          description: Number of accrued discounts in all customer campaigns.
          type: number
        accruedRevenue:
          description: Amount of accrued revenue in all customer campaigns.
          type: number
        totalOrders:
          description: Number of orders in all customer campaigns.
          type: integer
        totalOrdersNoCoupon:
          description: Number of orders without coupon used in all customer campaigns.
          type: integer
        campaignName:
          description: The name of the campaign this customer belongs to.
          type: string
      required:
      - accruedDiscounts
      - accruedRevenue
      - campaignName
      - couponFailedAttempts
      - couponRedemptions
      - couponUseAttempts
      - created
      - customerId
      - integrationId
      - name
      - totalOrders
      - totalOrdersNoCoupon
      type: object
    CustomerSession:
      description: ""
      example:
        coupon: coupon
        created: 2000-01-23T04:56:07.000+00:00
        identifiers:
        - 91.11.156.141
        integrationId: integrationId
        total: 0.8008281904610115
        referral: referral
        discounts:
          key: 6.027456183070403
        profileId: URNGV8294NV
        attributes: '{}'
        state: open
        applicationId: 322
        cartItems:
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
        updated: 2000-01-23T04:56:07.000+00:00
        firstSession: true
      properties:
        integrationId:
          description: The integration ID for this entity sent to and used in the
            Talon.One system.
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        coupon:
          description: Any coupon code entered.
          maxLength: 100
          title: Coupon entered in session
          type: string
        referral:
          description: Any referral code entered.
          maxLength: 100
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`, after which valid transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. `closed` → `cancelled`

            For more information, see [Entities](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - cancelled
          title: Customer's session state
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          title: Items in customer's cart
          type: array
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts.
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        total:
          description: The total sum of the cart in one session.
          title: Session Total
          type: number
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          properties: {}
          type: object
        firstSession:
          description: Indicates whether this is the first session for the customer's
            profile. Will always be true for anonymous sessions.
          title: First session ever?
          type: boolean
        discounts:
          additionalProperties:
            type: number
          description: A map of labelled discount values, values will be in the same
            currency as the application associated with the session.
          title: Customer's current discounts
          type: object
        updated:
          description: Timestamp of the most recent event received on this session
          format: date-time
          title: Last activity on the session
          type: string
      required:
      - applicationId
      - attributes
      - cartItems
      - coupon
      - created
      - discounts
      - firstSession
      - integrationId
      - profileId
      - referral
      - state
      - total
      - updated
      type: object
    CustomerSessionV2:
      description: ""
      example:
        couponCodes: XMAS-20-2021
        created: 2000-01-23T04:56:07.000+00:00
        identifiers:
        - 91.11.156.141
        integrationId: URNGV8294NV
        total: 5.637376656633329
        additionalCosts:
          shipping:
            price: 9
        additionalCostTotal: 2.3021358869347655
        profileId: URNGV8294NV
        referralCode: NT2K54D9
        attributes:
          ShippingCity: Berlin
        state: open
        applicationId: 322
        cartItems:
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
        updated: 2000-01-23T04:56:07.000+00:00
        firstSession: true
        cartItemTotal: 99.99
      properties:
        integrationId:
          description: The integration ID for this entity sent to and used in the
            Talon.One system.
          example: URNGV8294NV
          format: string
          type: string
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        couponCodes:
          description: Any coupon codes entered.
          example: XMAS-20-2021
          items:
            maxLength: 100
            type: string
          title: Coupons entered in session
          type: array
        referralCode:
          description: Any referral code entered.
          example: NT2K54D9
          maxLength: 100
          title: Referral code entered in session
          type: string
        state:
          default: open
          description: |
            Indicates the current state of the session. Sessions can be created as `open` or `closed`,
            after which valid transitions are:

            1. `open` → `closed`
            2. `open` → `cancelled`
            3. `closed` → `cancelled`

            For more information, see [Entites](/docs/dev/concepts/entities#customer-session).
          enum:
          - open
          - closed
          - cancelled
          example: open
          title: Customer's session state
          type: string
        cartItems:
          description: All items the customer will be purchasing in this session
          items:
            $ref: '#/components/schemas/CartItem'
          title: Customer session's cart items
          type: array
        additionalCosts:
          additionalProperties:
            $ref: '#/components/schemas/AdditionalCost'
          description: Any costs associated with the session that can not be explicitly
            attributed to cart items. Examples include shipping costs and service
            fees.
          example:
            shipping:
              price: 9
          type: object
        identifiers:
          description: |
            Session custom identifiers that you can set limits on or use inside your rules.

            For example, you can use IP addresses as identifiers to potentially identify devices
            and limit discounts abuse in case of customers creating multiple accounts.
          example:
          - 91.11.156.141
          items:
            type: string
          maxItems: 5
          type: array
        attributes:
          description: |
            A key-value map of the sessions attributes. The potentially valid attributes are configured in your accounts developer settings.
          example:
            ShippingCity: Berlin
          properties: {}
          type: object
        firstSession:
          description: Indicates whether this is the first session for the customer's
            profile. Will always be true for anonymous sessions.
          title: First session ever?
          type: boolean
        total:
          description: The total sum of cart-items, as well as additional costs, before
            any discounts applied
          title: Session Total
          type: number
        cartItemTotal:
          description: The total sum of cart-items before any discounts applied
          example: 99.99
          title: Cart Items Total
          type: number
        additionalCostTotal:
          description: The total sum of additional costs before any discounts applied
          title: Additional Costs Total
          type: number
        updated:
          description: Timestamp of the most recent event received on this session
          format: date-time
          title: Last activity on the session
          type: string
      required:
      - additionalCostTotal
      - applicationId
      - attributes
      - cartItemTotal
      - cartItems
      - created
      - firstSession
      - integrationId
      - profileId
      - state
      - total
      - updated
      type: object
    CartItem:
      example:
        quantity: 1
        price: 99.99
        name: Air Glide
        width: 6.027456183070403
        length: 1.4658129805029452
        weight: 1130.0
        attributes:
          image: 11.jpeg
          material: leather
        position: 5.962133916683182
        sku: "124102847"
        category: shoes
        height: 0.8008281904610115
      properties:
        name:
          description: Name of item
          example: Air Glide
          minLength: 1
          title: Name of item
          type: string
        sku:
          description: Stock keeping unit of item
          example: "124102847"
          minLength: 1
          title: SKU of item
          type: string
        quantity:
          description: |
            Quantity of item. **Important:** If you enabled [cart item flattening](https://help.talon.one/hc/en-us/articles/360016036899-Flattening-Cart-Items),
            the quantity is always one and the same cart item might receive multiple per-item discounts. Ensure you can process multiple discounts on one cart item correctly.
          example: 1
          minimum: 1
          title: Quantity of item
          type: integer
        price:
          description: Price of item
          example: 99.99
          title: Price of item
          type: number
        category:
          description: Type, group or model of the item
          example: shoes
          title: Item category
          type: string
        weight:
          description: Weight of item in grams
          example: 1130.0
          title: Weight of item
          type: number
        height:
          description: Height of item in mm
          title: Height of item
          type: number
        width:
          description: Width of item in mm
          title: Width of item
          type: number
        length:
          description: Length of item in mm
          title: Length of item
          type: number
        position:
          description: Position of the Cart Item in the Cart (calculated internally)
          title: Position of Cart Item
          type: number
        attributes:
          description: |
            Arbitrary properties associated with this item.
            You can use built-in attributes or create your own. See [Attributes](https://docs.talon.one/docs/dev/concepts/attributes).
          example:
            image: 11.jpeg
            material: leather
          properties: {}
          title: Item attributes
          type: object
      required:
      - name
      - price
      - quantity
      - sku
      type: object
      x-attributable: true
    AdditionalCost:
      properties:
        price:
          example: 4.5
          title: Price of additional cost
          type: number
      required:
      - price
      type: object
    IntegrationEvent:
      description: ""
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          properties: {}
          type: object
      required:
      - attributes
      - type
      type: object
    NewEvent:
      description: ""
      example:
        profileId: URNGV8294NV
        attributes: '{}'
        sessionId: sessionId
        type: type
      properties:
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          properties: {}
          type: object
        sessionId:
          description: The ID of the session that this event occurred in.
          minLength: 1
          title: Session ID of Event
          type: string
      required:
      - attributes
      - sessionId
      - type
      type: object
    Event:
      description: ""
      example:
        effects:
        - addItemToCart
        created: 2000-01-23T04:56:07.000+00:00
        profileId: URNGV8294NV
        meta:
          campaigns: '{}'
          coupons: '{}'
          referralRejectionReason:
            reason: ReferralNotFound
            campaignId: 1
            referralId: 1
          warnings: '{}'
          couponRejectionReason:
            reason: CouponNotFound
            campaignId: 244
            couponId: 4928
        ledgerEntries:
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          accountId: 2
          eventId: 4
          reason: reason
          amount: 100
          created: 2000-01-23T04:56:07.000+00:00
          profileId: URNGV8294NV
          loyaltyProgramId: 323414846
          id: 6
          referenceId: 7
        - expiryDate: 2000-01-23T04:56:07.000+00:00
          accountId: 2
          eventId: 4
          reason: reason
          amount: 100
          created: 2000-01-23T04:56:07.000+00:00
          profileId: URNGV8294NV
          loyaltyProgramId: 323414846
          id: 6
          referenceId: 7
        attributes: '{}'
        id: 6
        sessionId: sessionId
        applicationId: 322
        type: type
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          minLength: 1
          title: Event Type
          type: string
        attributes:
          description: Arbitrary additional JSON data associated with the event.
          properties: {}
          type: object
        sessionId:
          description: The ID of the session that this event occurred in.
          title: Session ID of Event
          type: string
        effects:
          description: |
            An array of "effects" that must be applied in response to this event. Example effects include `addItemToCart` or `setDiscount`.
          example:
          - addItemToCart
          items:
            properties: {}
            type: object
          type: array
        ledgerEntries:
          description: Ledger entries for the event.
          items:
            $ref: '#/components/schemas/LedgerEntry'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - applicationId
      - attributes
      - created
      - effects
      - id
      - ledgerEntries
      - type
      type: object
    IntegrationState:
      description: |
        Contains all state that might interest application integration plugins. This is the response type returned by all of the Integration API operations.
      example:
        coupon:
          recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        session:
          coupon: coupon
          created: 2000-01-23T04:56:07.000+00:00
          identifiers:
          - 91.11.156.141
          integrationId: integrationId
          total: 0.8008281904610115
          referral: referral
          discounts:
            key: 6.027456183070403
          profileId: URNGV8294NV
          attributes: '{}'
          state: open
          applicationId: 322
          cartItems:
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
          updated: 2000-01-23T04:56:07.000+00:00
          firstSession: true
        profile:
          accountId: 7
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        loyalty:
          programs:
            key:
              ledger:
                pendingBalance: 7.457744773683766
                currentBalance: 6.84685269835264
                spentBalance: 4.965218492984954
                tentativeCurrentBalance: 5.025004791520295
                pointsToNextTier: 9.369310271410669
                expiredBalance: 1.1730742509559433
                currentTier:
                  name: name
                  id: 9
              subLedgers:
                key:
                  pendingBalance: 7.457744773683766
                  currentBalance: 6.84685269835264
                  spentBalance: 4.965218492984954
                  tentativeCurrentBalance: 5.025004791520295
                  pointsToNextTier: 9.369310271410669
                  expiredBalance: 1.1730742509559433
                  currentTier:
                    name: name
                    id: 9
              name: name
              id: 1
              title: title
        event:
          effects:
          - addItemToCart
          created: 2000-01-23T04:56:07.000+00:00
          profileId: URNGV8294NV
          meta:
            campaigns: '{}'
            coupons: '{}'
            referralRejectionReason:
              reason: ReferralNotFound
              campaignId: 1
              referralId: 1
            warnings: '{}'
            couponRejectionReason:
              reason: CouponNotFound
              campaignId: 244
              couponId: 4928
          ledgerEntries:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 2
            eventId: 4
            reason: reason
            amount: 100
            created: 2000-01-23T04:56:07.000+00:00
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 7
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 2
            eventId: 4
            reason: reason
            amount: 100
            created: 2000-01-23T04:56:07.000+00:00
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 7
          attributes: '{}'
          id: 6
          sessionId: sessionId
          applicationId: 322
          type: type
      properties:
        session:
          $ref: '#/components/schemas/CustomerSession'
        profile:
          $ref: '#/components/schemas/CustomerProfile'
        event:
          $ref: '#/components/schemas/Event'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        coupon:
          $ref: '#/components/schemas/Coupon'
      required:
      - event
      - profile
      - session
      type: object
    IntegrationStateV2:
      description: |
        Contains all entities that might interest Talon.One integrations. This is the response type returned by the V2 PUT customer_session endpoint
      example:
        effects:
        - rulesetId: 73
          ruleIndex: 2
          campaignId: 244
          ruleName: Give 20% discount
          triggeredByCoupon: 4928
          effectType: rejectCoupon
          props: '{}'
        - rulesetId: 73
          ruleIndex: 2
          campaignId: 244
          ruleName: Give 20% discount
          triggeredByCoupon: 4928
          effectType: rejectCoupon
          props: '{}'
        referral:
          code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        triggeredCampaigns:
        - createdLoyaltyPointsEffectCount: 8
          discountCount: 7.143538047012306
          description: description
          templateId: 3
          features:
          - coupons
          - coupons
          createdLoyaltyPointsCount: 4.652396432933246
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          activeRulesetId: 6
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 6
          couponRedemptionCount: 3
          userId: 6
          couponCreationCount: 7
          campaignGroups:
          - 6
          - 6
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          awardedGiveawaysCount: 0
          redeemedLoyaltyPointsEffectCount: 3
          discountEffectCount: 0
          createdBy: createdBy
          redeemedLoyaltyPointsCount: 7.740351818741173
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        - createdLoyaltyPointsEffectCount: 8
          discountCount: 7.143538047012306
          description: description
          templateId: 3
          features:
          - coupons
          - coupons
          createdLoyaltyPointsCount: 4.652396432933246
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          activeRulesetId: 6
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 6
          couponRedemptionCount: 3
          userId: 6
          couponCreationCount: 7
          campaignGroups:
          - 6
          - 6
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          awardedGiveawaysCount: 0
          redeemedLoyaltyPointsEffectCount: 3
          discountEffectCount: 0
          createdBy: createdBy
          redeemedLoyaltyPointsCount: 7.740351818741173
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        coupons:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        customerProfile:
          accountId: 7
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        customerSession:
          couponCodes: XMAS-20-2021
          created: 2000-01-23T04:56:07.000+00:00
          identifiers:
          - 91.11.156.141
          integrationId: URNGV8294NV
          total: 5.637376656633329
          additionalCosts:
            shipping:
              price: 9
          additionalCostTotal: 2.3021358869347655
          profileId: URNGV8294NV
          referralCode: NT2K54D9
          attributes:
            ShippingCity: Berlin
          state: open
          applicationId: 322
          cartItems:
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
          updated: 2000-01-23T04:56:07.000+00:00
          firstSession: true
          cartItemTotal: 99.99
        loyalty:
          programs:
            key:
              ledger:
                pendingBalance: 7.457744773683766
                currentBalance: 6.84685269835264
                spentBalance: 4.965218492984954
                tentativeCurrentBalance: 5.025004791520295
                pointsToNextTier: 9.369310271410669
                expiredBalance: 1.1730742509559433
                currentTier:
                  name: name
                  id: 9
              subLedgers:
                key:
                  pendingBalance: 7.457744773683766
                  currentBalance: 6.84685269835264
                  spentBalance: 4.965218492984954
                  tentativeCurrentBalance: 5.025004791520295
                  pointsToNextTier: 9.369310271410669
                  expiredBalance: 1.1730742509559433
                  currentTier:
                    name: name
                    id: 9
              name: name
              id: 1
              title: title
        awardedGiveaways:
        - code: code
          importId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          importId: 1
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          poolId: 4
          attributes: '{}'
          id: 6
          used: true
          startDate: 2000-01-23T04:56:07.000+00:00
        event:
          effects:
          - addItemToCart
          created: 2000-01-23T04:56:07.000+00:00
          profileId: URNGV8294NV
          meta:
            campaigns: '{}'
            coupons: '{}'
            referralRejectionReason:
              reason: ReferralNotFound
              campaignId: 1
              referralId: 1
            warnings: '{}'
            couponRejectionReason:
              reason: CouponNotFound
              campaignId: 244
              couponId: 4928
          ledgerEntries:
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 2
            eventId: 4
            reason: reason
            amount: 100
            created: 2000-01-23T04:56:07.000+00:00
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 7
          - expiryDate: 2000-01-23T04:56:07.000+00:00
            accountId: 2
            eventId: 4
            reason: reason
            amount: 100
            created: 2000-01-23T04:56:07.000+00:00
            profileId: URNGV8294NV
            loyaltyProgramId: 323414846
            id: 6
            referenceId: 7
          attributes: '{}'
          id: 6
          sessionId: sessionId
          applicationId: 322
          type: type
        createdCoupons:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        ruleFailureReasons:
        - rulesetID: 5
          ruleIndex: 4
          campaignID: 7
          referralID: 3
          ruleName: ruleName
          conditionIndex: 0
          effectIndex: 6
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
        - rulesetID: 5
          ruleIndex: 4
          campaignID: 7
          referralID: 3
          ruleName: ruleName
          conditionIndex: 0
          effectIndex: 6
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
        createdReferrals:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        customerSession:
          $ref: '#/components/schemas/CustomerSessionV2'
        customerProfile:
          $ref: '#/components/schemas/CustomerProfile'
        event:
          $ref: '#/components/schemas/Event'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        referral:
          $ref: '#/components/schemas/Referral'
        coupons:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
        triggeredCampaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
        effects:
          items:
            $ref: '#/components/schemas/Effect'
          type: array
        ruleFailureReasons:
          items:
            $ref: '#/components/schemas/RuleFailureReason'
          type: array
        createdCoupons:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
        createdReferrals:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
        awardedGiveaways:
          items:
            $ref: '#/components/schemas/Giveaway'
          type: array
      required:
      - createdCoupons
      - createdReferrals
      - effects
      type: object
    ApplicationCustomer:
      description: ""
      example:
        accountId: 1
        closedSessions: 3
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: integrationId
        attributes:
          Language: english
          ShippingCountry: DE
        totalSales: 299.99
        lastActivity: 2000-01-23T04:56:07.000+00:00
        id: 6
        loyaltyMemberships:
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 9
        - joined: 2000-01-23T04:56:07.000+00:00
          loyaltyProgramId: 9
        advocateIntegrationId: advocateIntegrationId
        audienceMemberships:
        - name: name
          id: 3
        - name: name
          id: 3
      properties:
        id:
          description: Unique ID for this entity. Unique ID for this entity.
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created. The exact moment this entity was created. The
            exact moment this entity was created.
          format: date-time
          type: string
        integrationId:
          description: The integration ID for this entity sent to and used in the
            Talon.One system. The integration ID for this entity sent to and used
            in the Talon.One system.
          format: string
          type: string
        attributes:
          description: Arbitrary properties associated with this item
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        accountId:
          description: The ID of the Talon.One account that owns this profile. The
            ID of the Talon.One account that owns this profile.
          type: integer
        closedSessions:
          description: The total amount of closed sessions by a customer. A closed
            session is a successful purchase.
          example: 3
          title: Closed sessions
          type: integer
        totalSales:
          description: Sum of all purchases made by this customer
          example: 299.99
          title: Total Sales
          type: number
        loyaltyMemberships:
          description: A list of loyalty programs joined by the customer
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          title: Loyalty programed joined
          type: array
        audienceMemberships:
          description: A list of audiences the customer belongs to
          items:
            $ref: '#/components/schemas/AudienceMembership'
          title: Audience memberships
          type: array
        lastActivity:
          description: Timestamp of the most recent event received from this customer
          format: date-time
          title: Last activity of customer
          type: string
        advocateIntegrationId:
          description: The Integration ID of the Customer Profile that referred this
            Customer in the Application.
          type: string
      required:
      - accountId
      - attributes
      - closedSessions
      - created
      - id
      - integrationId
      - lastActivity
      - totalSales
      type: object
    ApplicationReferee:
      description: ""
      example:
        friendIntegrationId: friendIntegrationId
        code: code
        created: 2000-01-23T04:56:07.000+00:00
        sessionId: sessionId
        advocateIntegrationId: advocateIntegrationId
        applicationId: 322
      properties:
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        sessionId:
          description: Integration ID of the session in which the customer redeemed
            the referral
          type: string
        advocateIntegrationId:
          description: Integration ID of the Advocate's Profile
          title: Advocate's Profile ID
          type: string
        friendIntegrationId:
          description: Integration ID of the Friend's Profile
          title: Friend's Profile ID
          type: string
        code:
          description: Advocate's referral code.
          type: string
        created:
          description: Timestamp of the moment the customer redeemed the referral
          format: date-time
          type: string
      required:
      - advocateIntegrationId
      - applicationId
      - code
      - created
      - friendIntegrationId
      - sessionId
      type: object
    ApplicationSession:
      description: ""
      example:
        coupon: coupon
        created: 2000-01-23T04:56:07.000+00:00
        integrationId: URNGV8294NV
        profileintegrationid: profileintegrationid
        total: 6.027456183070403
        referral: referral
        discounts:
          key: 0.8008281904610115
        profileId: 138
        attributes: '{}'
        id: 6
        state: open
        applicationId: 322
        cartItems:
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
        - quantity: 1
          price: 99.99
          name: Air Glide
          width: 6.027456183070403
          length: 1.4658129805029452
          weight: 1130.0
          attributes:
            image: 11.jpeg
            material: leather
          position: 5.962133916683182
          sku: "124102847"
          category: shoes
          height: 0.8008281904610115
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created. The exact moment
            this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          example: 138
          type: integer
        integrationId:
          description: The integration ID for this entity sent to and used in the
            Talon.One system.
          example: URNGV8294NV
          format: string
          type: string
        profileintegrationid:
          description: Integration ID of the customer for the session.
          type: string
        coupon:
          description: Any coupon code entered.
          type: string
        referral:
          description: Any referral code entered.
          type: string
        state:
          description: |
            Indicating if the customer session is in progress (`open`), `closed`, or `cancelled`.
            For more information about customer sessions, see [Customer sessions](/docs/dev/concepts/entities#customer-session-states) in the docs.
          enum:
          - open
          - closed
          - cancelled
          type: string
        cartItems:
          description: Serialized JSON representation.
          items:
            $ref: '#/components/schemas/CartItem'
          type: array
        discounts:
          additionalProperties:
            type: number
          description: A map of labelled discount values, in the same currency as
            the session.
          type: object
        total:
          description: The total sum of the session before any discounts applied.
          type: number
        attributes:
          description: Arbitrary properties associated with this item
          properties: {}
          type: object
      required:
      - applicationId
      - cartItems
      - coupon
      - created
      - discounts
      - id
      - integrationId
      - referral
      - state
      - total
      type: object
    ApplicationEvent:
      description: ""
      example:
        effects:
        - '{}'
        - '{}'
        created: 2000-01-23T04:56:07.000+00:00
        profileId: 138
        attributes: '{}'
        id: 6
        sessionId: 0
        applicationId: 322
        type: type
        ruleFailureReasons:
        - rulesetID: 5
          ruleIndex: 4
          campaignID: 7
          referralID: 3
          ruleName: ruleName
          conditionIndex: 0
          effectIndex: 6
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
        - rulesetID: 5
          ruleIndex: 4
          campaignID: 7
          referralID: 3
          ruleName: ruleName
          conditionIndex: 0
          effectIndex: 6
          details: details
          couponID: 4928
          referralValue: referralValue
          campaignName: campaignName
          couponValue: couponValue
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        profileId:
          description: The globally unique Talon.One ID of the customer that created
            this entity.
          example: 138
          type: integer
        sessionId:
          description: The globally unique Talon.One ID of the session that contains
            this event.
          type: integer
        type:
          description: A string representing the event. Must not be a reserved event
            name.
          type: string
        attributes:
          description: Additional JSON serialized data associated with the event.
          properties: {}
          type: object
        effects:
          description: An array containing the effects that were applied as a result
            of this event.
          items:
            properties: {}
            type: object
          type: array
        ruleFailureReasons:
          description: An array containing the rule failure reasons which happened
            during this event.
          items:
            $ref: '#/components/schemas/RuleFailureReason'
          type: array
      required:
      - applicationId
      - attributes
      - created
      - effects
      - id
      - type
      type: object
    NewAccount:
      properties:
        companyName:
          minLength: 1
          type: string
      required:
      - companyName
      type: object
    AccountAnalytics:
      example:
        liveActiveCampaigns: 2
        expiredCoupons: 3
        roles: 1
        activeCampaigns: 5
        activeCoupons: 9
        sandboxApplications: 1
        activeRules: 1
        users: 1
        liveApplications: 6
        campaigns: 5
        coupons: 7
        expiredReferralCodes: 7
        webhooks: 7
        loyaltyPrograms: 1
        referralCodes: 2
        applications: 0
        activeReferralCodes: 4
        customAttributes: 6
      properties:
        applications:
          description: Total number of applications in the account
          type: integer
        liveApplications:
          description: Total number of live applications in the account
          type: integer
        sandboxApplications:
          description: Total number of sandbox applications in the account
          type: integer
        campaigns:
          description: Total number of campaigns in the account
          type: integer
        activeCampaigns:
          description: Total number of active campaigns in the account
          type: integer
        liveActiveCampaigns:
          description: Total number of active campaigns in live applications in the
            account
          type: integer
        coupons:
          description: Total number of coupons in the account
          type: integer
        activeCoupons:
          description: Total number of active coupons in the account
          type: integer
        expiredCoupons:
          description: Total number of expired coupons in the account
          type: integer
        referralCodes:
          description: Total number of referral codes in the account
          type: integer
        activeReferralCodes:
          description: Total number of active referral codes in the account
          type: integer
        expiredReferralCodes:
          description: Total number of expired referral codes in the account
          type: integer
        activeRules:
          description: Total number of active rules in the account
          type: integer
        users:
          description: Total number of users in the account
          type: integer
        roles:
          description: Total number of roles in the account
          type: integer
        customAttributes:
          description: Total number of custom attributes in the account
          type: integer
        webhooks:
          description: Total number of webhooks in the account
          type: integer
        loyaltyPrograms:
          description: Total number of loyalty programs in the account
          type: integer
      required:
      - activeCampaigns
      - activeCoupons
      - activeReferralCodes
      - activeRules
      - applications
      - campaigns
      - coupons
      - customAttributes
      - expiredCoupons
      - expiredReferralCodes
      - liveActiveCampaigns
      - liveApplications
      - loyaltyPrograms
      - referralCodes
      - roles
      - sandboxApplications
      - users
      - webhooks
      type: object
    AccountLimits:
      properties:
        liveApplications:
          description: Total number of allowed live applications in the account
          type: integer
        sandboxApplications:
          description: Total number of allowed sandbox applications in the account
          type: integer
        activeCampaigns:
          description: Total number of allowed active campaigns in live applications
            in the account
          type: integer
        coupons:
          description: Total number of allowed coupons in the account
          type: integer
        referralCodes:
          description: Total number of allowed referral codes in the account
          type: integer
        activeRules:
          description: Total number of allowed active rulesets in the account
          type: integer
        liveLoyaltyPrograms:
          description: Total number of allowed live loyalty programs in the account
          type: integer
        sandboxLoyaltyPrograms:
          description: Total number of allowed sandbox loyalty programs in the account
          type: integer
        webhooks:
          description: Total number of allowed webhooks in the account
          type: integer
        users:
          description: Total number of allowed users in the account
          type: integer
        apiVolume:
          description: Allowed volume of API requests to the account
          type: integer
        promotionTypes:
          description: Array of promotion types that are employed in the account
          items:
            type: string
          type: array
      required:
      - activeCampaigns
      - activeRules
      - apiVolume
      - coupons
      - liveApplications
      - liveLoyaltyPrograms
      - promotionTypes
      - referralCodes
      - sandboxApplications
      - sandboxLoyaltyPrograms
      - users
      - webhooks
      type: object
    UpdateAccount:
      properties:
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
        companyName:
          description: Name of your company.
          minLength: 1
          type: string
        billingEmail:
          description: The billing email address associated with your company account.
          format: email
          type: string
        state:
          description: State of the account (active, deactivated)
          enum:
          - active
          - deactivated
          type: string
        planExpires:
          description: The point in time at which your current plan expires.
          format: date-time
          type: string
      required:
      - billingEmail
      - companyName
      type: object
    Account:
      description: ""
      example:
        applicationCount: 5
        planExpires: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        campaignsActiveCount: 7
        companyName: companyName
        campaignsInactiveCount: 9
        planName: planName
        applicationLimit: 0
        userCount: 2
        billingEmail: billingEmail
        campaignLimit: 1
        domainName: domainName
        apiLimit: 5
        modified: 2000-01-23T04:56:07.000+00:00
        attributes: '{}'
        id: 6
        state: active
        userLimit: 6
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        companyName:
          minLength: 1
          type: string
        domainName:
          description: Subdomain Name for yourcompany.talon.one
          type: string
        state:
          description: State of the account (active, deactivated)
          enum:
          - active
          - deactivated
          type: string
        billingEmail:
          description: The billing email address associated with your company account.
          format: email
          type: string
        planName:
          description: The name of your booked plan.
          type: string
        planExpires:
          description: The point in time at which your current plan expires.
          format: date-time
          type: string
        applicationLimit:
          description: The maximum number of Applications covered by your plan.
          type: integer
        userLimit:
          description: The maximum number of Campaign Manager Users covered by your
            plan.
          type: integer
        campaignLimit:
          description: The maximum number of Campaigns covered by your plan.
          type: integer
        apiLimit:
          description: The maximum number of Integration API calls covered by your
            plan per billing period.
          type: integer
        applicationCount:
          description: The current number of Applications in your account.
          type: integer
        userCount:
          description: The current number of Campaign Manager Users in your account.
          type: integer
        campaignsActiveCount:
          description: The current number of active Campaigns in your account.
          type: integer
        campaignsInactiveCount:
          description: The current number of inactive Campaigns in your account.
          type: integer
        attributes:
          description: Arbitrary properties associated with this campaign
          properties: {}
          type: object
      required:
      - applicationCount
      - billingEmail
      - campaignsActiveCount
      - campaignsInactiveCount
      - companyName
      - created
      - domainName
      - id
      - modified
      - state
      - userCount
      type: object
    NewAccountSignUp:
      description: ""
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        password:
          description: The password for your account.
          example: admin123456
          type: string
        companyName:
          minLength: 1
          type: string
      required:
      - companyName
      - email
      - password
      type: object
    NewUser:
      description: ""
      properties:
        email:
          description: The email address associated with your account.
          example: john.doe@example.com
          format: email
          type: string
        password:
          description: The password for your account.
          example: admin123456
          type: string
        name:
          description: Your name.
          type: string
        inviteToken:
          minLength: 1
          type: string
      required:
      - email
      - inviteToken
      - password
      type: object
    UpdateUser:
      properties:
        name:
          description: Your name.
          type: string
        policy:
          description: a blob of acl json
          type: string
        state:
          description: New state ("deactivated" or "active") for the user. Only usable
            by admins for the user.
          enum:
          - deactivated
          - active
          type: string
        roles:
          description: Update
          items:
            type: integer
          type: array
        applicationNotificationSubscriptions:
          properties: {}
          type: object
      type: object
    ChangeProfilePassword:
      properties:
        password:
          description: Your old password.
          type: string
        newPassword:
          description: Your new password.
          type: string
      required:
      - newPassword
      - password
      type: object
    NewInviteEmail:
      properties:
        email:
          format: email
          minLength: 1
          type: string
        token:
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    NewPasswordEmail:
      example:
        email: email
      properties:
        email:
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    NewPassword:
      example:
        password: password
        resetToken: resetToken
      properties:
        password:
          description: The new password for your account.
          type: string
        resetToken:
          minLength: 1
          type: string
      required:
      - password
      - resetToken
      type: object
    Environment:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        slots:
          description: The slots defined for this application.
          items:
            $ref: '#/components/schemas/SlotDef'
          type: array
        functions:
          description: The functions defined for this application.
          items:
            $ref: '#/components/schemas/FunctionDef'
          type: array
        templates:
          description: The templates defined for this application.
          items:
            $ref: '#/components/schemas/TemplateDef'
          type: array
        variables:
          description: A stringified version of the environment's Talang variables
            scope
          type: string
        giveawaysPools:
          description: The giveaways pools that the application is subscribed to.
          items:
            $ref: '#/components/schemas/GiveawaysPool'
          type: array
        loyaltyPrograms:
          description: The loyalty programs that the application is subscribed to.
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
        attributes:
          description: The attributes that the application is subscribed to.
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
        additionalCosts:
          description: The additional costs that the application is subscribed to.
          items:
            $ref: '#/components/schemas/AccountAdditionalCost'
          type: array
        audiences:
          description: The audiences contained in the account which the application
            belongs to.
          items:
            $ref: '#/components/schemas/Audience'
          type: array
      required:
      - applicationId
      - created
      - functions
      - id
      - slots
      - templates
      - variables
      type: object
    SlotDef:
      properties:
        name:
          description: The dot-separated path to this slot for use in Talang.
          type: string
        type:
          description: The type of this slot, one of string, number, boolean, or list[type].
          type: string
        title:
          description: Campaigner-friendly name for the slot.
          type: string
        description:
          description: A short description of the slot.
          type: string
        help:
          description: Extended help text for the slot.
          type: string
        writable:
          description: Whether or not this slot can be updated by rule effects.
          type: boolean
      required:
      - name
      - title
      - type
      - writable
      type: object
    FuncArgDef:
      properties:
        type:
          description: The type of value this argument expects.
          enum:
          - string
          - boolean
          - number
          - time
          minLength: 1
          type: string
        description:
          description: A campaigner-friendly description of the argument, this will
            also be shown in the rule editor.
          type: string
      required:
      - description
      - type
      type: object
    TemplateArgDef:
      description: ""
      example:
        ui: '{}'
        description: description
        type: string
        title: title
      properties:
        type:
          description: The type of value this argument expects.
          enum:
          - string
          - boolean
          - number
          - time
          minLength: 1
          type: string
        description:
          description: A campaigner-friendly description of the argument, this will
            also be shown in the rule editor.
          type: string
        title:
          description: A campaigner friendly name for the argument, this will be shown
            in the rule editor.
          minLength: 1
          type: string
        ui:
          description: Arbitrary metadata that may be used to render an input for
            this argument.
          properties: {}
          type: object
      required:
      - description
      - title
      - type
      - ui
      type: object
    FunctionDef:
      properties:
        name:
          description: The function name used in Talang.
          minLength: 1
          type: string
        type:
          description: The type of this function argument.
          type: string
        description:
          description: A short description of the function.
          type: string
        help:
          description: Extended help text for the function.
          type: string
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/FuncArgDef'
          type: array
      required:
      - args
      - name
      - type
      type: object
    CampaignTemplateParams:
      properties:
        name:
          description: Name of the campaign template parameter.
          minLength: 1
          type: string
        type:
          description: Can be one of the following three ['string','number','boolean']
          type: string
        description:
          description: Explains the meaning of this template parameter and the placeholder
            value that will define it. It is used on campaign creation from this template.
          type: string
      required:
      - description
      - name
      - type
      type: object
    NewCampaignTemplate:
      properties:
        name:
          description: The campaign template name.
          minLength: 1
          type: string
        description:
          description: Customer-facing text that explains the objective of the template.
          type: string
        instructions:
          description: Customer-facing text that explains how to use the template.
            For example, you can use this property to explain the available attributes
            of this template, and how they can be modified when a user uses this template
            to create a new campaign.
          type: string
        campaignAttributes:
          description: The Campaign Attributes that Campaigns created from this template
            will have by default.
          properties: {}
          type: object
        couponAttributes:
          description: The Campaign Attributes that Coupons created from this template
            will have by default.
          properties: {}
          type: object
        state:
          description: Only Campaign Templates in 'available' state may be used to
            create Campaigns.
          enum:
          - draft
          - enabled
          - disabled
          type: string
        tags:
          description: A list of tags for the campaign template.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign template.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign template
          items:
            $ref: '#/components/schemas/TemplateLimitConfig'
          type: array
        templateParams:
          description: Template parameters are fields which can be used to replace
            values in a rule.
          items:
            $ref: '#/components/schemas/CampaignTemplateParams'
          type: array
      required:
      - description
      - instructions
      - name
      - state
      type: object
    UpdateCampaignTemplate:
      properties:
        name:
          description: The campaign template name.
          minLength: 1
          type: string
        description:
          description: Customer-facing text that explains the objective of the template.
          type: string
        instructions:
          description: Customer-facing text that explains how to use the template.
            For example, you can use this property to explain the available attributes
            of this template, and how they can be modified when a user uses this template
            to create a new campaign.
          type: string
        campaignAttributes:
          description: The Campaign Attributes that Campaigns created from this template
            will have by default.
          properties: {}
          type: object
        couponAttributes:
          description: The Campaign Attributes that Coupons created from this template
            will have by default.
          properties: {}
          type: object
        state:
          description: Only Campaign Templates in 'available' state may be used to
            create Campaigns.
          enum:
          - draft
          - enabled
          - disabled
          type: string
        activeRulesetId:
          description: The ID of the Ruleset this Campaign Template will use.
          type: integer
        tags:
          description: A list of tags for the campaign template.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign template.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign template
          items:
            $ref: '#/components/schemas/TemplateLimitConfig'
          type: array
        templateParams:
          description: Template parameters are fields which can be used to replace
            values in a rule.
          items:
            $ref: '#/components/schemas/CampaignTemplateParams'
          type: array
        applicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this campaign template
          items:
            type: integer
          type: array
      required:
      - applicationsIds
      - description
      - instructions
      - name
      - state
      type: object
    CampaignTemplate:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: The campaign template name.
          minLength: 1
          type: string
        description:
          description: Customer-facing text that explains the objective of the template.
          type: string
        instructions:
          description: Customer-facing text that explains how to use the template.
            For example, you can use this property to explain the available attributes
            of this template, and how they can be modified when a user uses this template
            to create a new campaign.
          type: string
        campaignAttributes:
          description: The Campaign Attributes that Campaigns created from this template
            will have by default.
          properties: {}
          type: object
        couponAttributes:
          description: The Campaign Attributes that Coupons created from this template
            will have by default.
          properties: {}
          type: object
        state:
          description: Only Campaign Templates in 'available' state may be used to
            create Campaigns.
          enum:
          - draft
          - enabled
          - disabled
          type: string
        activeRulesetId:
          description: The ID of the Ruleset this Campaign Template will use.
          type: integer
        tags:
          description: A list of tags for the campaign template.
          items:
            maxLength: 50
            minLength: 1
            type: string
          maxItems: 50
          type: array
        features:
          description: A list of features for the campaign template.
          items:
            enum:
            - coupons
            - referrals
            - loyalty
            - giveaways
            type: string
          type: array
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        referralSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        limits:
          description: The set of limits that will operate for this campaign template
          items:
            $ref: '#/components/schemas/TemplateLimitConfig'
          type: array
        templateParams:
          description: Template parameters are fields which can be used to replace
            values in a rule.
          items:
            $ref: '#/components/schemas/CampaignTemplateParams'
          type: array
        applicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this campaign template A list of the IDs of the applications that are
            subscribed to this campaign template
          items:
            description: ""
            type: integer
          type: array
        updated:
          description: Timestamp of the most recent update to the campaign template
            or any of its elements.
          format: date-time
          type: string
        updatedBy:
          description: Name of the user who last updated this campaign template if
            available.
          type: string
        validApplicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          type: array
      required:
      - accountId
      - applicationsIds
      - created
      - description
      - id
      - instructions
      - name
      - state
      - userId
      - validApplicationIds
      type: object
    CreateTemplateCampaign:
      properties:
        name:
          description: A user-facing name for this campaign.
          minLength: 1
          title: Campaign Name
          type: string
        description:
          description: A detailed description of the campaign.
          title: Campaign Description
          type: string
        templateId:
          description: The ID of the Campaign Template which will be used in order
            to create the Campaign.
          type: integer
        campaignAttributesOverrides:
          description: Custom Campaign Attributes. If the the Campaign Template defines
            the same values, they will be overridden.
          properties: {}
          type: object
        templateParamValues:
          description: Actual values to replace the template placeholder values in
            the Ruleset bindings. Values for all Template Parameters must be provided.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        limitOverrides:
          description: Limits for this Campaign. If the Campaign Template or Application
            define default values for the same limits, they will be overridden.
          items:
            $ref: '#/components/schemas/LimitConfig'
          type: array
      required:
      - name
      - templateId
      type: object
    CreateTemplateCampaignResponse:
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        ruleset:
          $ref: '#/components/schemas/Ruleset'
      required:
      - campaign
      - ruleset
      type: object
    NewTemplateDef:
      properties:
        title:
          description: Campaigner-friendly name for the template that will be shown
            in the rule editor.
          minLength: 1
          type: string
        description:
          description: A short description of the template that will be shown in the
            rule editor.
          type: string
        help:
          description: Extended help text for the template.
          type: string
        category:
          description: Used for grouping templates in the rule editor sidebar.
          minLength: 1
          type: string
        expr:
          description: A Talang expression that contains variable bindings referring
            to args.
          items:
            properties: {}
            type: object
          type: array
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        expose:
          default: false
          description: A flag to control exposure in Rule Builder.
          type: boolean
      required:
      - args
      - category
      - expr
      - title
      type: object
    TemplateDef:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        title:
          description: Campaigner-friendly name for the template that will be shown
            in the rule editor.
          minLength: 1
          type: string
        description:
          description: A short description of the template that will be shown in the
            rule editor.
          type: string
        help:
          description: Extended help text for the template.
          type: string
        category:
          description: Used for grouping templates in the rule editor sidebar.
          minLength: 1
          type: string
        expr:
          description: A Talang expression that contains variable bindings referring
            to args.
          items:
            properties: {}
            type: object
          type: array
        args:
          description: An array of argument definitions.
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        expose:
          default: false
          description: A flag to control exposure in Rule Builder.
          type: boolean
        name:
          description: The template name used in Talang.
          minLength: 1
          type: string
      required:
      - applicationId
      - args
      - category
      - created
      - description
      - expr
      - help
      - id
      - name
      - title
      type: object
    NewAttribute:
      description: ""
      example:
        editable: true
        name: name
        subscribedApplicationsIds:
        - 0
        - 0
        description: description
        suggestions:
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        eventType: eventType
        title: title
        type: string
        entity: Account
      properties:
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Account
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          - Giveaway
          - Referral
          type: string
        eventType:
          type: string
        name:
          description: The attribute name that will be used in API requests and Talang.
            E.g. if `name == "region"` then you would set the region attribute by
            including an `attributes.region` property in your request payload.
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
          - (list location)
          type: string
        description:
          description: A description of this attribute.
          type: string
        suggestions:
          description: A list of suggestions for the attribute.
          items:
            minLength: 1
            type: string
          maxItems: 50
          type: array
        editable:
          description: Whether or not this attribute can be edited.
          type: boolean
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this attribute
          items:
            type: integer
          type: array
      required:
      - description
      - editable
      - entity
      - name
      - suggestions
      - title
      - type
      type: object
    Attribute:
      description: ""
      example:
        accountId: 3886
        created: 2000-01-23T04:56:07.000+00:00
        editable: true
        name: name
        subscribedApplicationsIds:
        - 6
        - 6
        description: description
        suggestions:
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        - suggestions
        id: 6
        eventType: eventType
        title: title
        type: string
        entity: Account
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Account
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          - Giveaway
          - Referral
          type: string
        eventType:
          type: string
        name:
          description: The attribute name that will be used in API requests and Talang.
            E.g. if `name == "region"` then you would set the region attribute by
            including an `attributes.region` property in your request payload.
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
          - (list location)
          type: string
        description:
          description: A description of this attribute.
          type: string
        suggestions:
          description: A list of suggestions for the attribute.
          items:
            minLength: 1
            type: string
          maxItems: 50
          type: array
        editable:
          description: Whether or not this attribute can be edited.
          type: boolean
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this attribute
          items:
            type: integer
          type: array
      required:
      - accountId
      - created
      - description
      - editable
      - entity
      - id
      - name
      - suggestions
      - title
      - type
      type: object
    NewAdditionalCost:
      description: ""
      example:
        name: name
        subscribedApplicationsIds:
        - 0
        - 0
        description: description
        title: title
      properties:
        name:
          description: The additional cost name that will be used in API requests
            and Talang. E.g. if `name == "shipping"` then you would set the shipping
            additional cost by including an `additionalCosts.shipping` property in
            your request payload.
          type: string
        title:
          description: The human-readable name for the additional cost that will be
            shown in the Campaign Manager. Like `name`, the combination of entity
            and title must also be unique.
          type: string
        description:
          description: A description of this additional cost.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this additional cost
          items:
            type: integer
          type: array
      required:
      - description
      - name
      - title
      type: object
    AccountAdditionalCost:
      description: ""
      example:
        accountId: 3886
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        subscribedApplicationsIds:
        - 6
        - 6
        description: description
        id: 6
        title: title
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The additional cost name that will be used in API requests
            and Talang. E.g. if `name == "shipping"` then you would set the shipping
            additional cost by including an `additionalCosts.shipping` property in
            your request payload.
          type: string
        title:
          description: The human-readable name for the additional cost that will be
            shown in the Campaign Manager. Like `name`, the combination of entity
            and title must also be unique.
          type: string
        description:
          description: A description of this additional cost.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that are subscribed to
            this additional cost
          items:
            type: integer
          type: array
      required:
      - accountId
      - created
      - description
      - id
      - name
      - title
      type: object
    NewEventType:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        title:
          description: The human-friendly display name for this event type. Use a
            short, past-tense, description of the event.
          minLength: 1
          type: string
        name:
          description: The machine-friendly canonical name for this event type. This
            will be used in URLs, and cannot be changed after an event type has been
            created.
          minLength: 1
          type: string
        description:
          description: |
            An explanation of when the event type is triggered. Write this with a campaign manager in mind. For example:

            > The "Payment Accepted" event is triggered after successful processing of a payment by our payment gateway.
          type: string
        mimeType:
          description: This defines how the request payload will be parsed before
            your handler code is run.
          enum:
          - application/json
          - application/x-www-form-urlencoded
          - none
          type: string
        examplePayload:
          description: It is often helpful to include an example payload with the
            event type definition for documentation purposes.
          type: string
        schema:
          description: |
            It is strongly recommended to define a JSON schema that will be used to perform structural validation of request payloads after parsing.
          properties: {}
          type: object
        handlerLanguage:
          description: The language of the handler code. Currently only `"talang"`
            is supported.
          enum:
          - talang
          type: string
        handler:
          description: |
            Code that will be run after successful parsing & validation of the payload for this event.
            This code _may_ choose to evaluate campaign rules.
          type: string
        version:
          description: |
            The version of this event type. When updating an existing event type this must be **exactly** `currentVersion + 1`.
          type: integer
      required:
      - applicationIds
      - description
      - handler
      - mimeType
      - name
      - title
      - version
      type: object
    EventType:
      description: ""
      example:
        schema: '{}'
        handler: handler
        examplePayload: examplePayload
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: 6
        mimeType: application/json
        handlerLanguage: talang
        title: title
        version: 1
        applicationIds:
        - 6
        - 6
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        title:
          description: The human-friendly display name for this event type. Use a
            short, past-tense, description of the event.
          minLength: 1
          type: string
        name:
          description: The machine-friendly canonical name for this event type. This
            will be used in URLs, and cannot be changed after an event type has been
            created.
          minLength: 1
          type: string
        description:
          description: |
            An explanation of when the event type is triggered. Write this with a campaign manager in mind. For example:

            > The "Payment Accepted" event is triggered after successful processing of a payment by our payment gateway.
          type: string
        mimeType:
          description: This defines how the request payload will be parsed before
            your handler code is run.
          enum:
          - application/json
          - application/x-www-form-urlencoded
          - none
          type: string
        examplePayload:
          description: It is often helpful to include an example payload with the
            event type definition for documentation purposes.
          type: string
        schema:
          description: |
            It is strongly recommended to define a JSON schema that will be used to perform structural validation of request payloads after parsing.
          properties: {}
          type: object
        handlerLanguage:
          description: The language of the handler code. Currently only `"talang"`
            is supported.
          enum:
          - talang
          type: string
        handler:
          description: |
            Code that will be run after successful parsing & validation of the payload for this event.
            This code _may_ choose to evaluate campaign rules.
          type: string
        version:
          description: |
            The version of this event type. When updating an existing event type this must be **exactly** `currentVersion + 1`.
          type: integer
      required:
      - applicationIds
      - created
      - description
      - handler
      - id
      - mimeType
      - name
      - title
      - version
      type: object
    NewWebhook:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        title:
          description: Friendly title for this webhook
          type: string
        verb:
          description: API method for this webhook
          enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
          type: string
        url:
          description: API url (supports templating using parameters) for this webhook
          type: string
        headers:
          description: List of API HTTP headers for this webhook
          items:
            pattern: ^([^:,]*):([^]*|[^,]*)$
            type: string
          type: array
        payload:
          description: API payload (supports templating using parameters) for this
            webhook
          type: string
        params:
          description: Array of template argument definitions
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        enabled:
          description: Enables or disables webhook from showing in rule builder
          type: boolean
      required:
      - applicationIds
      - enabled
      - headers
      - params
      - title
      - url
      - verb
      type: object
    Webhook:
      description: ""
      example:
        headers:
        - headers
        - headers
        payload: payload
        created: 2000-01-23T04:56:07.000+00:00
        verb: POST
        modified: 2000-01-23T04:56:07.000+00:00
        id: 6
        title: title
        params:
        - ui: '{}'
          description: description
          type: string
          title: title
        - ui: '{}'
          description: description
          type: string
          title: title
        url: url
        enabled: true
        applicationIds:
        - 6
        - 6
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        applicationIds:
          description: The IDs of the applications that are related to this entity.
            The IDs of the applications that are related to this entity.
          items:
            description: ""
            type: integer
          minItems: 1
          type: array
        title:
          description: Friendly title for this webhook
          type: string
        verb:
          description: API method for this webhook
          enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
          type: string
        url:
          description: API url (supports templating using parameters) for this webhook
          type: string
        headers:
          description: List of API HTTP headers for this webhook
          items:
            pattern: ^([^:,]*):([^]*|[^,]*)$
            type: string
          type: array
        payload:
          description: API payload (supports templating using parameters) for this
            webhook
          type: string
        params:
          description: Array of template argument definitions
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        enabled:
          description: Enables or disables webhook from showing in rule builder
          type: boolean
      required:
      - applicationIds
      - created
      - enabled
      - headers
      - id
      - modified
      - params
      - title
      - url
      - verb
      type: object
    NewAudience:
      example:
        name: mPTravel
        integration: mparticle
        integrationId: URNGV8294NV
      properties:
        name:
          description: The human-friendly display name for this Audience.
          example: mPTravel
          minLength: 1
          type: string
        integration:
          description: Integration that this audience was created in.
          enum:
          - mparticle
          example: mparticle
          type: string
        integrationId:
          description: The ID of this Audience in the third-party integration
          example: URNGV8294NV
          minLength: 1
          type: string
      required:
      - integration
      - integrationId
      - name
      type: object
    UpdateAudience:
      example:
        name: mPTravel
      properties:
        name:
          description: The human-friendly display name for this Audience.
          example: mPTravel
          minLength: 1
          type: string
      required:
      - name
      type: object
    Audience:
      description: ""
      example:
        accountId: 3886
        created: 2000-01-23T04:56:07.000+00:00
        name: mPTravel
        integration: mparticle
        integrationId: URNGV8294NV
        id: 6
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        name:
          description: The human-friendly display name for this Audience.
          example: mPTravel
          minLength: 1
          type: string
        integration:
          description: Integration that this audience was created in.
          enum:
          - mparticle
          example: mparticle
          type: string
        integrationId:
          description: The ID of this Audience in the third-party integration
          example: URNGV8294NV
          minLength: 1
          type: string
      required:
      - accountId
      - created
      - id
      - integration
      - integrationId
      - name
      type: object
    ManagerConfig:
      properties:
        schemaVersion:
          type: integer
      required:
      - schemaVersion
      type: object
    Export:
      description: ""
      example:
        filter: '{}'
        accountId: 3886
        created: 2000-01-23T04:56:07.000+00:00
        id: 6
        userId: 6
        entity: Coupon
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: The name of the entity that was exported.
          enum:
          - Coupon
          - Referral
          - Effect
          - CustomerSession
          - LoyaltyLedger
          - LoyaltyLedgerLog
          type: string
        filter:
          description: Map of keys and values that were used to filter the exported
            rows
          properties: {}
          type: object
      required:
      - accountId
      - created
      - entity
      - filter
      - id
      - userId
      type: object
    Import:
      description: ""
      example:
        accountId: 3886
        amount: 0
        created: 2000-01-23T04:56:07.000+00:00
        id: 6
        userId: 0
        entity: entity
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        userId:
          description: The ID of the account that owns this entity.
          type: integer
        entity:
          description: The name of the entity that was imported. Possible values are
            Coupons and LoyaltyPoints.
          type: string
        amount:
          description: The number of members that imported.
          minimum: 0
          type: integer
      required:
      - accountId
      - amount
      - created
      - entity
      - id
      - userId
      type: object
    FeaturesFeed:
      description: ""
      properties:
        title:
          type: string
        pubDate:
          type: string
      type: object
    LibraryAttribute:
      description: ""
      properties:
        entity:
          description: The name of the entity that can have this attribute. When creating
            or updating the entities of a given type, you can include an `attributes`
            object with keys corresponding to the `name` of the custom attributes
            for that type.
          enum:
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
          type: string
        name:
          description: |
            The attribute name that will be used in API requests and Talang. E.g. if `name == "region"` then you would set the region attribute by including an `attributes.region` property in your request payload.
          type: string
        title:
          description: The human-readable name for the attribute that will be shown
            in the Campaign Manager. Like `name`, the combination of entity and title
            must also be unique.
          type: string
        type:
          description: The data type of the attribute, a `time` attribute must be
            sent as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            timestamp format.
          enum:
          - string
          - number
          - boolean
          - time
          type: string
        description:
          description: A description of the attribute.
          type: string
        presets:
          description: The presets that indicate to which industry the attribute applies
            to.
          items:
            type: string
          type: array
        suggestions:
          description: Short suggestions that are used to group attributes.
          items:
            type: string
          type: array
      required:
      - description
      - entity
      - name
      - presets
      - suggestions
      - title
      - type
      type: object
    Role:
      description: ""
      example:
        accountId: 3886
        created: 2000-01-23T04:56:07.000+00:00
        campaignGroupID: 6
        members:
        - 1
        - 1
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 6
        acl: '{}'
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        campaignGroupID:
          description: The ID of the Campaign Group this role was created for.
          type: integer
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        members:
          description: A list of user identifiers assigned to this role
          items:
            type: integer
          type: array
        acl:
          description: Role ACL Policy
          properties: {}
          type: object
      required:
      - accountId
      - acl
      - created
      - id
      - modified
      - name
      type: object
    NewRole:
      description: ""
      properties:
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        acl:
          description: Role Policy this should be a stringified blob of json
          type: string
        members:
          description: An array of user identifiers
          items:
            type: integer
          type: array
      required:
      - acl
      - members
      - name
      type: object
    UpdateRole:
      properties:
        name:
          description: Name of the role
          type: string
        description:
          description: Description of the role
          type: string
        acl:
          description: Role Policy this should be a stringified blob of json
          type: string
        members:
          description: An array of user identifiers
          items:
            type: integer
          type: array
      type: object
    RoleAssign:
      description: ""
      properties:
        users:
          description: An array of userIDs
          items:
            type: integer
          type: array
        roles:
          description: An array of roleIDs
          items:
            type: integer
          type: array
      required:
      - roles
      - users
      type: object
    RoleMembership:
      properties:
        RoleID:
          description: ID of role
          type: integer
        UserID:
          description: ID of User
          type: integer
      required:
      - RoleID
      - UserID
      type: object
    CouponReservations:
      example:
        integrationIDs:
        - ty238-32fke9
        - 3gy32-008ye9
      properties:
        integrationIDs:
          description: List of Integration IDs
          example:
          - ty238-32fke9
          - 3gy32-008ye9
          items:
            type: string
          type: array
      required:
      - integrationIDs
      type: object
    LedgerEntry:
      description: ""
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        accountId: 2
        eventId: 4
        reason: reason
        amount: 100
        created: 2000-01-23T04:56:07.000+00:00
        profileId: URNGV8294NV
        loyaltyProgramId: 323414846
        id: 6
        referenceId: 7
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        profileId:
          description: ID of the customers profile as used within this Talon.One account.
            May be omitted or set to the empty string if the customer does not yet
            have a known profile ID.
          example: URNGV8294NV
          type: string
        accountId:
          description: The ID of the Talon.One account that owns this profile.
          type: integer
        loyaltyProgramId:
          description: ID of the ledger
          example: 323414846
          type: integer
        eventId:
          description: ID of the related event
          type: integer
        amount:
          description: Amount of loyalty points
          example: 100
          type: integer
        reason:
          description: reason for awarding/deducting points
          type: string
        expiryDate:
          description: Expiry date of the points
          format: date-time
          type: string
        referenceId:
          description: The ID of the balancing ledgerEntry
          type: integer
      required:
      - accountId
      - amount
      - created
      - eventId
      - expiryDate
      - id
      - loyaltyProgramId
      - profileId
      - reason
      type: object
    LoyaltyMembership:
      example:
        joined: 2000-01-23T04:56:07.000+00:00
        loyaltyProgramId: 9
      properties:
        joined:
          description: The moment in which the loyalty program was joined.
          format: date-time
          title: Loyalty program joined at
          type: string
        loyaltyProgramId:
          description: The ID of the loyalty program belonging to this entity.
          title: Loyalty program ID
          type: integer
      required:
      - loyaltyProgramId
      type: object
    Meta:
      example:
        campaigns: '{}'
        coupons: '{}'
        referralRejectionReason:
          reason: ReferralNotFound
          campaignId: 1
          referralId: 1
        warnings: '{}'
        couponRejectionReason:
          reason: CouponNotFound
          campaignId: 244
          couponId: 4928
      properties:
        campaigns:
          description: Maps each evaluated campaign ID to a key-value list of that
            campaigns attributes. Campaigns without attributes will be omitted.
          properties: {}
          type: object
        coupons:
          description: Maps the coupon value to a key-value list of that coupons attributes.
          properties: {}
          type: object
        couponRejectionReason:
          $ref: '#/components/schemas/CouponRejectionReason'
        referralRejectionReason:
          $ref: '#/components/schemas/ReferralRejectionReason'
        warnings:
          description: Contains warnings about possible misuse.
          properties: {}
          type: object
      type: object
    CouponRejectionReason:
      description: Holds a reference to the campaign, the coupon and the reason for
        which that coupon was rejected. Should only be present when there is a 'rejectCoupon'
        effect.
      example:
        reason: CouponNotFound
        campaignId: 244
        couponId: 4928
      properties:
        campaignId:
          example: 244
          type: integer
        couponId:
          example: 4928
          type: integer
        reason:
          enum:
          - CouponNotFound
          - CouponPartOfNotRunningCampaign
          - CouponLimitReached
          - CampaignLimitReached
          - ProfileLimitReached
          - CouponRecipientDoesNotMatch
          - CouponExpired
          - CouponStartDateInFuture
          - CouponRejectedByCondition
          - EffectCouldNotBeApplied
          example: CouponNotFound
          type: string
      required:
      - campaignId
      - couponId
      - reason
      type: object
    ReferralRejectionReason:
      description: Holds a reference to the campaign, the referral and the reason
        for which that referral was rejected. Should only be present when there is
        a 'rejectReferral' effect.
      example:
        reason: ReferralNotFound
        campaignId: 1
        referralId: 1
      properties:
        campaignId:
          type: integer
        referralId:
          type: integer
        reason:
          enum:
          - ReferralNotFound
          - ReferralRecipientIdSameAsAdvocate
          - ReferralPartOfNotRunningCampaign
          - ReferralLimitReached
          - CampaignLimitReached
          - ProfileLimitReached
          - ReferralRecipientDoesNotMatch
          - ReferralExpired
          - ReferralStartDateInFuture
          - ReferralRejectedByCondition
          - EffectCouldNotBeApplied
          type: string
      required:
      - campaignId
      - reason
      - referralId
      type: object
    ApplicationAPIKey:
      description: ""
      properties:
        title:
          description: Title for API Key
          type: string
        expires:
          description: The date the API key expired
          format: date-time
          type: string
        platform:
          description: Platform the API key is valid for.
          enum:
          - none
          - segment
          - braze
          - mparticle
          - selligent
          - iterable
          type: string
        id:
          description: ID of the API Key
          type: integer
        createdBy:
          description: ID of user who created
          type: integer
        accountID:
          description: ID of account the key is used for
          type: integer
        applicationID:
          description: ID of application the key is used for
          type: integer
        created:
          description: The date the API key was created
          format: date-time
          type: string
      required:
      - accountID
      - applicationID
      - created
      - createdBy
      - expires
      - id
      - title
      type: object
    NewApplicationAPIKey:
      description: ""
      properties:
        title:
          description: Title for API Key
          type: string
        expires:
          description: The date the API key expired
          format: date-time
          type: string
        platform:
          description: Platform the API key is valid for.
          enum:
          - none
          - segment
          - braze
          - mparticle
          - selligent
          - iterable
          type: string
        id:
          description: ID of the API Key
          type: integer
        createdBy:
          description: ID of user who created
          type: integer
        accountID:
          description: ID of account the key is used for
          type: integer
        applicationID:
          description: ID of application the key is used for
          type: integer
        created:
          description: The date the API key was created
          format: date-time
          type: string
        key:
          description: Raw API Key
          type: string
      required:
      - accountID
      - applicationID
      - created
      - createdBy
      - expires
      - id
      - key
      - title
      type: object
    CreateApplicationAPIKey:
      properties:
        title:
          description: Title for API Key
          type: string
        expires:
          description: The date the API key expired
          format: date-time
          type: string
        platform:
          description: Platform the API key is valid for.
          enum:
          - none
          - segment
          - braze
          - mparticle
          - selligent
          - iterable
          type: string
      required:
      - expires
      - title
      type: object
    Notification:
      properties:
        id:
          description: id of the notification
          type: integer
        name:
          description: name of the notification
          type: string
        description:
          description: description of the notification
          type: string
      required:
      - description
      - id
      - name
      type: object
    Notifications:
      items:
        $ref: '#/components/schemas/Notification'
      type: array
    SamlConnection:
      description: ""
      properties:
        assertionConsumerServiceURL:
          description: The location where the SAML assertion is sent with a HTTP POST.
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
      required:
      - accountId
      - assertionConsumerServiceURL
      - audienceURI
      - created
      - enabled
      - id
      - issuer
      - name
      - signOnURL
      type: object
    NewSamlConnection:
      description: ""
      properties:
        x509certificate:
          description: X.509 Certificate.
          minLength: 1
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
      required:
      - accountId
      - enabled
      - issuer
      - name
      - signOnURL
      - x509certificate
      type: object
    SamlConnectionMetadata:
      properties:
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        accountId:
          type: number
        metadataDocument:
          description: Identity Provider metadata XML document.
          minLength: 1
          type: string
      required:
      - accountId
      - enabled
      - metadataDocument
      - name
      type: object
    BaseSamlConnection:
      properties:
        accountId:
          description: The ID of the account that owns this entity.
          type: integer
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        enabled:
          description: Determines if this SAML connection active.
          type: boolean
        issuer:
          description: Identity Provider Entity ID.
          minLength: 1
          type: string
        signOnURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
        signOutURL:
          description: Single Sign-Out URL.
          type: string
        metadataURL:
          description: Metadata URL.
          type: string
        audienceURI:
          description: |
            The application-defined unique identifier that is the intended audience of the SAML assertion.
            This is most often the SP Entity ID of your application. When not specified, the ACS URL will be used.
          type: string
      required:
      - accountId
      - enabled
      - issuer
      - name
      - signOnURL
      type: object
    SamlLoginEndpoint:
      properties:
        name:
          description: ID of the SAML service.
          minLength: 1
          type: string
        loginURL:
          description: Single Sign-On URL.
          minLength: 1
          type: string
      required:
      - loginURL
      - name
      type: object
    Effect:
      description: ""
      example:
        rulesetId: 73
        ruleIndex: 2
        campaignId: 244
        ruleName: Give 20% discount
        triggeredByCoupon: 4928
        effectType: rejectCoupon
        props: '{}'
      properties:
        campaignId:
          description: The ID of the campaign that triggered this effect
          example: 244
          type: integer
        rulesetId:
          description: The ID of the ruleset that was active in the campaign when
            this effect was triggered
          example: 73
          type: integer
        ruleIndex:
          description: The position of the rule that triggered this effect within
            the ruleset
          example: 2
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect
          example: Give 20% discount
          type: string
        effectType:
          description: The type of effect that was triggered
          example: rejectCoupon
          type: string
        triggeredByCoupon:
          description: The ID of the coupon that was being evaluated when this effect
            was triggered
          example: 4928
          type: integer
        props:
          type: object
      required:
      - campaignId
      - effectType
      - props
      - ruleIndex
      - ruleName
      - rulesetId
      type: object
    EffectEntity:
      description: Definition of all properties that are present on all effects, independent
        of their type
      properties:
        campaignId:
          description: The ID of the campaign that triggered this effect
          example: 244
          type: integer
        rulesetId:
          description: The ID of the ruleset that was active in the campaign when
            this effect was triggered
          example: 73
          type: integer
        ruleIndex:
          description: The position of the rule that triggered this effect within
            the ruleset
          example: 2
          type: integer
        ruleName:
          description: The name of the rule that triggered this effect
          example: Give 20% discount
          type: string
        effectType:
          description: The type of effect that was triggered
          example: rejectCoupon
          type: string
        triggeredByCoupon:
          description: The ID of the coupon that was being evaluated when this effect
            was triggered
          example: 4928
          type: integer
      required:
      - campaignId
      - effectType
      - ruleIndex
      - ruleName
      - rulesetId
      type: object
    EffectProps:
      type: object
    AcceptCouponEffectProps:
      description: The properties specific to the "acceptCoupon" effect. This gets
        triggered whenever the coupon is valid and all other conditions in the rules
        of its campaign are met.
      properties:
        value:
          description: The coupon code that was accepted
          type: string
      required:
      - value
      type: object
    AcceptReferralEffectProps:
      description: The properties specific to the "acceptReferral" effect. TThis gets
        triggered whenever the referral code is valid and all other conditions in
        the rules of its campaign are met.
      properties:
        value:
          description: The referral code that was accepted
          type: string
      required:
      - value
      type: object
    RedeemReferralEffectProps:
      description: The properties specific to the "redeemReferral" effect. This gets
        triggered whenever the referral code is valid, and a rule was triggered that
        contains a "redeem referral" effect.
      properties:
        id:
          description: The id of the referral code that was redeemed
          type: integer
        value:
          description: The referral code that was redeemed
          type: string
      required:
      - id
      - value
      type: object
    RejectCouponEffectProps:
      description: The properties specific to the "rejectCoupon" effect. This gets
        triggered whenever the coupon was rejected. See rejectionReason for more info
        on why.
      properties:
        value:
          description: The coupon code that was rejected
          type: string
        rejectionReason:
          description: The reason why this coupon was rejected
          type: string
        conditionIndex:
          description: The index of the condition that caused the rejection of the
            coupon
          type: integer
        effectIndex:
          description: The index of the effect that caused the rejection of the coupon
          type: integer
        details:
          description: More details about the failure
          type: string
      required:
      - rejectionReason
      - value
      type: object
    RejectReferralEffectProps:
      description: The properties specific to the "rejectReferral" effect. This gets
        triggered whenever the referral code was rejected. See rejectionReason for
        more info on why.
      properties:
        value:
          description: The referral code that was rejected
          type: string
        rejectionReason:
          description: The reason why this referral code was rejected
          type: string
        conditionIndex:
          description: The index of the condition that caused the rejection of the
            referral
          type: integer
        effectIndex:
          description: The index of the effect that caused the rejection of the referral
          type: integer
        details:
          description: More details about the failure
          type: string
      required:
      - rejectionReason
      - value
      type: object
    CouponCreatedEffectProps:
      description: The properties specific to the "couponCreated" effect. This gets
        triggered whenever a validated rule contained a "create coupon" effect, and
        a coupon was created for a customer. See "createdCoupons" on the response
        for all details of this coupon.
      properties:
        value:
          description: The coupon code that was created
          type: string
        profileId:
          description: The integration identifier of the customer for whom this coupon
            was created
          type: string
      required:
      - profileId
      - value
      type: object
    ReferralCreatedEffectProps:
      description: The properties specific to the "referralCreated" effect. This gets
        triggered whenever a validated rule contained a "create referral" effect,
        and a referral code was created for a customer. See "createdReferrals" on
        the response for all details of this referral code.
      properties:
        value:
          description: The referral code that was created
          type: string
      required:
      - value
      type: object
    SetDiscountEffectProps:
      description: The properties specific to the "setDiscount" effect. This gets
        triggered whenever a validated rule contained a "set discount" effect. This
        is a discount that should be applied on the scope of defined with it.
      properties:
        name:
          description: The name/description of this discount
          type: string
        value:
          description: The total monetary value of the discount
          type: number
        scope:
          description: The scope which the discount was applied on, can be one of
            (cartItems,additionalCosts,sessionTotal)
          type: string
      required:
      - name
      - value
      type: object
    SetDiscountPerItemEffectProps:
      description: The properties specific to the "setDiscountPerItem" effect. This
        gets triggered whenever a validated rule contained a "set per item discount"
        effect. This is a discount that should be applied on a specific item.
      properties:
        name:
          description: The name/description of this discount
          type: string
        value:
          description: The total monetary value of the discount
          type: number
        position:
          description: The index of the item in the cart items list on which this
            discount should be applied
          type: number
        subPosition:
          description: The sub-index of the item in an item stack on which this discount
            should be applied
          type: number
      required:
      - name
      - position
      - value
      type: object
    SetDiscountPerAdditionalCostEffectProps:
      description: The properties specific to the "setDiscountPerAdditionalCost" effect.
        This gets triggered whenever a validated rule contained a "set per additional
        cost discount" effect. This is a discount that should be applied on a specific
        additional cost.
      properties:
        name:
          description: The name/description of this discount
          type: string
        additionalCostId:
          description: The ID of the additional cost
          type: integer
        additionalCost:
          description: The name of the additional cost
          type: string
        value:
          description: The total monetary value of the discount
          type: number
      required:
      - additionalCost
      - additionalCostId
      - name
      - value
      type: object
    TriggerWebhookEffectProps:
      description: The properties specific to the "triggerWebhook" effect. This gets
        triggered whenever a validated rule contained a "trigger webhook" effect.
        This is communicated as an FYI and should usually not require action on your
        side.
      properties:
        webhookId:
          description: The ID of the webhook that was triggered
          type: number
        webhookName:
          description: The name of the webhook that was triggered
          type: string
      required:
      - webhookId
      - webhookName
      type: object
    AddLoyaltyPointsEffectProps:
      description: The properties specific to the "addLoyaltyPoints" effect. This
        gets triggered whenever a validated rule contained an "add loyalty" effect.
        These points are automatically stored and managed inside Talon.One.
      properties:
        name:
          description: The name/description of this loyalty point addition
          type: string
        programId:
          description: The ID of the loyalty program where these points were added
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were added
          type: string
        value:
          description: The amount of points that were added
          type: number
        recipientIntegrationId:
          description: The user for whom these points were added
          type: string
        startDate:
          description: Date after which points will be valid
          format: date-time
          type: string
        expiryDate:
          description: Date after which points will expire
          format: date-time
          type: string
        transactionUUID:
          description: The identifier of this addition in the loyalty ledger
          type: string
      required:
      - name
      - programId
      - recipientIntegrationId
      - subLedgerId
      - transactionUUID
      - value
      type: object
    DeductLoyaltyPointsEffectProps:
      description: The properties specific to the "deductLoyaltyPoints" effect. This
        gets triggered whenever a validated rule contained a condition to only trigger
        when the given number of loyalty points could be deduced. These points are
        automatically stored and managed inside Talon.One.
      properties:
        ruleTitle:
          description: The title of the rule that contained triggered this points
            deduction
          type: string
        programId:
          description: The ID of the loyalty program where these points were added
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were added
          type: string
        value:
          description: The amount of points that were deducted
          type: number
        transactionUUID:
          description: The identifier of this deduction in the loyalty ledger
          type: string
        name:
          description: |
            The name property gets one of the following two values. It can be the loyalty program name or it can represent a reason for the respective deduction of loyalty points. The latter is an optional value defined in a deduction rule.
          type: string
      required:
      - name
      - programId
      - ruleTitle
      - subLedgerId
      - transactionUUID
      - value
      type: object
    AddFreeItemEffectProps:
      description: The properties specific to the "addFreeItem" effect. This gets
        triggered whenever a validated rule contained an "add free item" effect.
      properties:
        sku:
          description: SKU of the item that needs to be added
          type: string
        name:
          description: The name/description of the effect
          type: string
      required:
      - name
      - sku
      type: object
    ShowNotificationEffectProps:
      description: The properties specific to the "showNotification" effect. This
        gets triggered whenever a validated rule contained a "show notification" effect.
      properties:
        notificationType:
          description: The type of notification that should be shown (e.g. error/warning/info)
          type: string
        title:
          description: Title of the notification
          type: string
        body:
          description: Body of the notification
          type: string
      required:
      - body
      - notificationType
      - title
      type: object
    UpdateAttributeEffectProps:
      description: The properties specific to the "updateAttribute" effect. This gets
        triggered whenever a validated rule contained an "update an attribute" effect.
      properties:
        path:
          description: The exact path of the attribute that was updated
          type: string
        value:
          description: The new value of this attribute. Value can be any of the following
            types (time, string, number, location, boolean) or a list of any of those
            types
          type: object
      required:
      - path
      - value
      type: object
    RollbackCouponEffectProps:
      description: The properties specific to the "rollbackCoupon" effect. This gets
        triggered whenever previously closed session is now cancelled and a coupon
        redemption was cancelled on our internal usage limit counters.
      properties:
        value:
          description: The coupon code whose usage has been rolled back
          type: string
      required:
      - value
      type: object
    RollbackReferralEffectProps:
      description: The properties specific to the "rollbackReferral" effect. This
        gets triggered whenever previously closed session is now cancelled and a referral
        redemption was cancelled on our internal usage limit counters.
      properties:
        value:
          description: The referral code whose usage has been rolled back
          type: string
      required:
      - value
      type: object
    RollbackDiscountEffectProps:
      description: The properties specific to the "rollbackDiscount" effect. This
        gets triggered whenever previously closed session is now cancelled and a setDiscount
        effect was cancelled on our internal discount limit counters.
      properties:
        name:
          description: The name of the "setDiscount" effect that was rolled back
          type: string
        value:
          description: The value of the discount that was rolled back
          type: number
      required:
      - name
      - value
      type: object
    RollbackAddedLoyaltyPointsEffectProps:
      description: The properties specific to the "rollbackAddedLoyaltyPoints" effect.
        This gets triggered whenever previously a closed session with an addLoyaltyPoints
        effect is cancelled.
      properties:
        programId:
          description: The ID of the loyalty program where the points were originally
            added
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were originally added
          type: string
        value:
          description: The amount of points that were rolled back
          type: number
        recipientIntegrationId:
          description: The user for whom these points were originally added
          type: string
        transactionUUID:
          description: The identifier of 'deduction' entry added to the ledger as
            the `addLoyaltyPoints` effect is rolled back.
          type: string
      required:
      - programId
      - recipientIntegrationId
      - subLedgerId
      - transactionUUID
      - value
      type: object
    RollbackDeductedLoyaltyPointsEffectProps:
      description: The properties specific to the "rollbackDeductedLoyaltyPoints"
        effect. This effect is triggered whenever a previously closed session is cancelled
        and a deductLoyaltyPoints effect was revoked.
      properties:
        programId:
          description: The ID of the loyalty program where these points were reimbursed
          type: integer
        subLedgerId:
          description: The ID of the subledger within the loyalty program where these
            points were reimbursed
          type: string
        value:
          description: The amount of reimbursed points that were added
          type: number
        recipientIntegrationId:
          description: The user for whom these points were reimbursed
          type: string
        startDate:
          description: Date after which the reimbursed points will be valid
          format: date-time
          type: string
        expiryDate:
          description: Date after which the reimbursed points will expire
          format: date-time
          type: string
        transactionUUID:
          description: The identifier of 'addition' entries added to the ledger as
            the `deductLoyaltyPoints` effect is rolled back
          type: string
      required:
      - programId
      - recipientIntegrationId
      - subLedgerId
      - transactionUUID
      - value
      type: object
    ShowBundleMetadataEffectProps:
      description: The properties specific to the "ShowBundleMetadata" effect. This
        effect contains information that allows you to associate the discounts from
        a rule in a bundle campaign with specific cart items. This way you can distinguish
        from "normal" discounts that were not the result of a product bundle.
      properties:
        description:
          description: Description of the product bundle
          type: string
        bundleAttributes:
          description: The cart item attributes that determined which items are being
            bundled together
          items:
            type: string
          type: array
        itemsIndices:
          description: The indices in the cart items array of the bundled items
          items:
            type: number
          type: array
      required:
      - bundleAttributes
      - description
      - itemsIndices
      type: object
    AwardGiveawayEffectProps:
      description: The properties specific to the "awardGiveaway" effect. This effect
        contains information on the giveaway item, and which profile it was awarded
        to.
      properties:
        poolId:
          description: The ID of the giveaways pool the code was taken from.
          type: integer
        poolName:
          description: The name of the giveaways pool the code was taken from.
          type: string
        recipientIntegrationId:
          description: The integration ID of the profile that was awarded the giveaway.
          type: string
        giveawayId:
          description: The internal ID for the giveaway that was awarded.
          type: integer
        code:
          description: The giveaway code that was awarded.
          type: string
      required:
      - code
      - giveawayId
      - poolId
      - poolName
      - recipientIntegrationId
      type: object
    WillAwardGiveawayEffectProps:
      description: The properties specific to the "awardGiveaway" effect when the
        session is not closed yet. This effect replaces "awardGiveaway" only when
        updating a session with any state other than "closed". This is to ensure no
        giveaway codes are leaked when they are still not guaranteed to be awarded.
      properties:
        poolId:
          description: The ID of the giveaways pool the code will be taken from.
          type: integer
        poolName:
          description: The name of the giveaways pool the code will be taken from.
          type: string
        recipientIntegrationId:
          description: The integration ID of the profile that will be awarded the
            giveaway.
          type: string
      required:
      - poolId
      - poolName
      - recipientIntegrationId
      type: object
    ErrorEffectProps:
      description: Whenever an error occurred during evaluation, we return an error
        effect. This should never happen for rules created in the rule builder.
      properties:
        message:
          description: The error message.
          type: string
      required:
      - message
      type: object
    CustomEffectProps:
      description: Effect containing custom payload.
      properties:
        effectId:
          description: The ID of the custom effect that was triggered
          type: integer
        name:
          description: The type of the custom effect.
          type: string
        payload:
          description: The JSON payload of the custom effect.
          properties: {}
          type: object
          x-arbitraryJSON: true
      required:
      - effectId
      - name
      - payload
      type: object
    IntegrationRequest:
      description: The body of a V2 integration API request (customer session update).
        Next to the customer session details, this contains an optional listing of
        extra properties that should be returned in the response.
      example:
        customerSession:
          couponCodes: XMAS-20-2021
          additionalCosts:
            shipping:
              price: 9
          profileId: URNGV8294NV
          identifiers:
          - 91.11.156.141
          referralCode: NT2K54D9
          attributes:
            ShippingCity: Berlin
          state: open
          cartItems:
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
        responseContent:
        - ""
        - ""
      properties:
        customerSession:
          $ref: '#/components/schemas/NewCustomerSessionV2'
        responseContent:
          description: |
            Optional list of requested information to be present on the response related to the customer session update.

            **Note:** `ruleFailureReasons` is always part of the response when the Application type is `sandbox`.
          items:
            enum:
            - customerSession
            - customerProfile
            - coupons
            - triggeredCampaigns
            - referral
            - loyalty
            - event
            - awardedGiveaways
            - ruleFailureReasons
            example: ""
            type: string
          type: array
      required:
      - customerSession
      type: object
    CustomerProfileIntegrationRequestV2:
      description: ""
      example:
        attributes:
          Language: english
          ShippingCountry: DE
        audiencesChanges:
          deletes:
          - 6
          - 6
          adds:
          - 0
          - 0
        responseContent:
        - customerProfile
        - customerProfile
      properties:
        attributes:
          description: Arbitrary properties associated with this item
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        audiencesChanges:
          $ref: '#/components/schemas/ProfileAudiencesChanges'
        responseContent:
          description: |
            Optional list of requested information to be present on the response related to the customer profile update.

            Currently supported: "customerProfile", "triggeredCampaigns", "loyalty", "event", "awardedGiveaways", "ruleFailureReasons".

            **Note:** `ruleFailureReasons` is always part of the response when the Application type is `sandbox`.
          items:
            enum:
            - customerProfile
            - triggeredCampaigns
            - loyalty
            - event
            - awardedGiveaways
            - ruleFailureReasons
            type: string
          type: array
      type: object
    ProfileAudiencesChanges:
      example:
        deletes:
        - 6
        - 6
        adds:
        - 0
        - 0
      properties:
        adds:
          description: The IDs of the audiences for the customer to join.
          items:
            type: integer
          title: Audiences to join
          type: array
        deletes:
          description: The IDs of the audiences for the customer to leave.
          items:
            type: integer
          title: Audiences to leave
          type: array
      required:
      - adds
      - deletes
      type: object
    AudienceMembership:
      example:
        name: name
        id: 3
      properties:
        id:
          description: The ID of the audience belonging to this entity.
          title: Audience ID
          type: integer
        name:
          description: The Name of the audience belonging to this entity.
          title: Audience Name
          type: string
      required:
      - id
      - name
      type: object
    MultipleCustomerProfileIntegrationRequest:
      example:
        customerProfiles:
        - integrationId: R195412
          attributes:
            Language: english
            ShippingCountry: DE
        - integrationId: R195412
          attributes:
            Language: english
            ShippingCountry: DE
      properties:
        customerProfiles:
          items:
            $ref: '#/components/schemas/MultipleCustomerProfileIntegrationRequestItem'
          type: array
      type: object
    MultipleCustomerProfileIntegrationRequestItem:
      description: ""
      example:
        integrationId: R195412
        attributes:
          Language: english
          ShippingCountry: DE
      properties:
        attributes:
          description: Arbitrary properties associated with this item
          example:
            Language: english
            ShippingCountry: DE
          properties: {}
          type: object
        integrationId:
          description: |
            The custom identifier for this profile, must be unique within the account.

            To get the `integrationId` of the profile from a `sessionId`, use the
            [Update customer session](/integration-api/#operation/updateCustomerSessionV2).
          example: R195412
          type: string
      required:
      - integrationId
      type: object
    MultipleCustomerProfileIntegrationResponseV2:
      example:
        integrationStates:
        - effects:
          - rulesetId: 73
            ruleIndex: 2
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          - rulesetId: 73
            ruleIndex: 2
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          referral:
            code: code
            created: 2000-01-23T04:56:07.000+00:00
            usageLimit: 668355
            campaignId: 8
            usageCounter: 6
            batchId: batchId
            advocateProfileIntegrationId: advocateProfileIntegrationId
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            friendProfileIntegrationId: friendProfileIntegrationId
            attributes: '{}'
            id: 6
            startDate: 2000-01-23T04:56:07.000+00:00
          triggeredCampaigns:
          - createdLoyaltyPointsEffectCount: 8
            discountCount: 7.143538047012306
            description: description
            templateId: 3
            features:
            - coupons
            - coupons
            createdLoyaltyPointsCount: 4.652396432933246
            couponSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 2
            state: enabled
            limits:
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            activeRulesetId: 6
            updatedBy: updatedBy
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 6
            couponRedemptionCount: 3
            userId: 6
            couponCreationCount: 7
            campaignGroups:
            - 6
            - 6
            tags:
            - tags
            - tags
            - tags
            - tags
            - tags
            awardedGiveawaysCount: 0
            redeemedLoyaltyPointsEffectCount: 3
            discountEffectCount: 0
            createdBy: createdBy
            redeemedLoyaltyPointsCount: 7.740351818741173
            name: name
            referralSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            attributes: '{}'
            lastActivity: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          - createdLoyaltyPointsEffectCount: 8
            discountCount: 7.143538047012306
            description: description
            templateId: 3
            features:
            - coupons
            - coupons
            createdLoyaltyPointsCount: 4.652396432933246
            couponSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 2
            state: enabled
            limits:
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            activeRulesetId: 6
            updatedBy: updatedBy
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 6
            couponRedemptionCount: 3
            userId: 6
            couponCreationCount: 7
            campaignGroups:
            - 6
            - 6
            tags:
            - tags
            - tags
            - tags
            - tags
            - tags
            awardedGiveawaysCount: 0
            redeemedLoyaltyPointsEffectCount: 3
            discountEffectCount: 0
            createdBy: createdBy
            redeemedLoyaltyPointsCount: 7.740351818741173
            name: name
            referralSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            attributes: '{}'
            lastActivity: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          coupons:
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          customerProfile:
            accountId: 7
            closedSessions: 3
            created: 2000-01-23T04:56:07.000+00:00
            integrationId: URNGV8294NV
            attributes:
              Language: english
              ShippingCountry: DE
            totalSales: 299.99
            lastActivity: 2000-01-23T04:56:07.000+00:00
            id: 6
            loyaltyMemberships:
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 9
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 9
            audienceMemberships:
            - name: name
              id: 3
            - name: name
              id: 3
          customerSession:
            couponCodes: XMAS-20-2021
            created: 2000-01-23T04:56:07.000+00:00
            identifiers:
            - 91.11.156.141
            integrationId: URNGV8294NV
            total: 5.637376656633329
            additionalCosts:
              shipping:
                price: 9
            additionalCostTotal: 2.3021358869347655
            profileId: URNGV8294NV
            referralCode: NT2K54D9
            attributes:
              ShippingCity: Berlin
            state: open
            applicationId: 322
            cartItems:
            - quantity: 1
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              length: 1.4658129805029452
              weight: 1130.0
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: "124102847"
              category: shoes
              height: 0.8008281904610115
            - quantity: 1
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              length: 1.4658129805029452
              weight: 1130.0
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: "124102847"
              category: shoes
              height: 0.8008281904610115
            updated: 2000-01-23T04:56:07.000+00:00
            firstSession: true
            cartItemTotal: 99.99
          loyalty:
            programs:
              key:
                ledger:
                  pendingBalance: 7.457744773683766
                  currentBalance: 6.84685269835264
                  spentBalance: 4.965218492984954
                  tentativeCurrentBalance: 5.025004791520295
                  pointsToNextTier: 9.369310271410669
                  expiredBalance: 1.1730742509559433
                  currentTier:
                    name: name
                    id: 9
                subLedgers:
                  key:
                    pendingBalance: 7.457744773683766
                    currentBalance: 6.84685269835264
                    spentBalance: 4.965218492984954
                    tentativeCurrentBalance: 5.025004791520295
                    pointsToNextTier: 9.369310271410669
                    expiredBalance: 1.1730742509559433
                    currentTier:
                      name: name
                      id: 9
                name: name
                id: 1
                title: title
          awardedGiveaways:
          - code: code
            importId: 1
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          - code: code
            importId: 1
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          event:
            effects:
            - addItemToCart
            created: 2000-01-23T04:56:07.000+00:00
            profileId: URNGV8294NV
            meta:
              campaigns: '{}'
              coupons: '{}'
              referralRejectionReason:
                reason: ReferralNotFound
                campaignId: 1
                referralId: 1
              warnings: '{}'
              couponRejectionReason:
                reason: CouponNotFound
                campaignId: 244
                couponId: 4928
            ledgerEntries:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              accountId: 2
              eventId: 4
              reason: reason
              amount: 100
              created: 2000-01-23T04:56:07.000+00:00
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 7
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              accountId: 2
              eventId: 4
              reason: reason
              amount: 100
              created: 2000-01-23T04:56:07.000+00:00
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 7
            attributes: '{}'
            id: 6
            sessionId: sessionId
            applicationId: 322
            type: type
          createdCoupons:
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          ruleFailureReasons:
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          createdReferrals:
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            usageLimit: 668355
            campaignId: 8
            usageCounter: 6
            batchId: batchId
            advocateProfileIntegrationId: advocateProfileIntegrationId
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            friendProfileIntegrationId: friendProfileIntegrationId
            attributes: '{}'
            id: 6
            startDate: 2000-01-23T04:56:07.000+00:00
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            usageLimit: 668355
            campaignId: 8
            usageCounter: 6
            batchId: batchId
            advocateProfileIntegrationId: advocateProfileIntegrationId
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            friendProfileIntegrationId: friendProfileIntegrationId
            attributes: '{}'
            id: 6
            startDate: 2000-01-23T04:56:07.000+00:00
        - effects:
          - rulesetId: 73
            ruleIndex: 2
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          - rulesetId: 73
            ruleIndex: 2
            campaignId: 244
            ruleName: Give 20% discount
            triggeredByCoupon: 4928
            effectType: rejectCoupon
            props: '{}'
          referral:
            code: code
            created: 2000-01-23T04:56:07.000+00:00
            usageLimit: 668355
            campaignId: 8
            usageCounter: 6
            batchId: batchId
            advocateProfileIntegrationId: advocateProfileIntegrationId
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            friendProfileIntegrationId: friendProfileIntegrationId
            attributes: '{}'
            id: 6
            startDate: 2000-01-23T04:56:07.000+00:00
          triggeredCampaigns:
          - createdLoyaltyPointsEffectCount: 8
            discountCount: 7.143538047012306
            description: description
            templateId: 3
            features:
            - coupons
            - coupons
            createdLoyaltyPointsCount: 4.652396432933246
            couponSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 2
            state: enabled
            limits:
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            activeRulesetId: 6
            updatedBy: updatedBy
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 6
            couponRedemptionCount: 3
            userId: 6
            couponCreationCount: 7
            campaignGroups:
            - 6
            - 6
            tags:
            - tags
            - tags
            - tags
            - tags
            - tags
            awardedGiveawaysCount: 0
            redeemedLoyaltyPointsEffectCount: 3
            discountEffectCount: 0
            createdBy: createdBy
            redeemedLoyaltyPointsCount: 7.740351818741173
            name: name
            referralSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            attributes: '{}'
            lastActivity: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          - createdLoyaltyPointsEffectCount: 8
            discountCount: 7.143538047012306
            description: description
            templateId: 3
            features:
            - coupons
            - coupons
            createdLoyaltyPointsCount: 4.652396432933246
            couponSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            startTime: 2000-01-23T04:56:07.000+00:00
            id: 2
            state: enabled
            limits:
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            - period: daily
              entities:
              - Coupon
              - Coupon
              limit: 0.5944895607614016
              action: action
            activeRulesetId: 6
            updatedBy: updatedBy
            created: 2000-01-23T04:56:07.000+00:00
            referralCreationCount: 6
            couponRedemptionCount: 3
            userId: 6
            couponCreationCount: 7
            campaignGroups:
            - 6
            - 6
            tags:
            - tags
            - tags
            - tags
            - tags
            - tags
            awardedGiveawaysCount: 0
            redeemedLoyaltyPointsEffectCount: 3
            discountEffectCount: 0
            createdBy: createdBy
            redeemedLoyaltyPointsCount: 7.740351818741173
            name: name
            referralSettings:
              couponPattern: couponPattern
              validCharacters:
              - validCharacters
              - validCharacters
            attributes: '{}'
            lastActivity: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            applicationId: 322
            referralRedemptionCount: 3
            updated: 2000-01-23T04:56:07.000+00:00
          coupons:
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          customerProfile:
            accountId: 7
            closedSessions: 3
            created: 2000-01-23T04:56:07.000+00:00
            integrationId: URNGV8294NV
            attributes:
              Language: english
              ShippingCountry: DE
            totalSales: 299.99
            lastActivity: 2000-01-23T04:56:07.000+00:00
            id: 6
            loyaltyMemberships:
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 9
            - joined: 2000-01-23T04:56:07.000+00:00
              loyaltyProgramId: 9
            audienceMemberships:
            - name: name
              id: 3
            - name: name
              id: 3
          customerSession:
            couponCodes: XMAS-20-2021
            created: 2000-01-23T04:56:07.000+00:00
            identifiers:
            - 91.11.156.141
            integrationId: URNGV8294NV
            total: 5.637376656633329
            additionalCosts:
              shipping:
                price: 9
            additionalCostTotal: 2.3021358869347655
            profileId: URNGV8294NV
            referralCode: NT2K54D9
            attributes:
              ShippingCity: Berlin
            state: open
            applicationId: 322
            cartItems:
            - quantity: 1
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              length: 1.4658129805029452
              weight: 1130.0
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: "124102847"
              category: shoes
              height: 0.8008281904610115
            - quantity: 1
              price: 99.99
              name: Air Glide
              width: 6.027456183070403
              length: 1.4658129805029452
              weight: 1130.0
              attributes:
                image: 11.jpeg
                material: leather
              position: 5.962133916683182
              sku: "124102847"
              category: shoes
              height: 0.8008281904610115
            updated: 2000-01-23T04:56:07.000+00:00
            firstSession: true
            cartItemTotal: 99.99
          loyalty:
            programs:
              key:
                ledger:
                  pendingBalance: 7.457744773683766
                  currentBalance: 6.84685269835264
                  spentBalance: 4.965218492984954
                  tentativeCurrentBalance: 5.025004791520295
                  pointsToNextTier: 9.369310271410669
                  expiredBalance: 1.1730742509559433
                  currentTier:
                    name: name
                    id: 9
                subLedgers:
                  key:
                    pendingBalance: 7.457744773683766
                    currentBalance: 6.84685269835264
                    spentBalance: 4.965218492984954
                    tentativeCurrentBalance: 5.025004791520295
                    pointsToNextTier: 9.369310271410669
                    expiredBalance: 1.1730742509559433
                    currentTier:
                      name: name
                      id: 9
                name: name
                id: 1
                title: title
          awardedGiveaways:
          - code: code
            importId: 1
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          - code: code
            importId: 1
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            poolId: 4
            attributes: '{}'
            id: 6
            used: true
            startDate: 2000-01-23T04:56:07.000+00:00
          event:
            effects:
            - addItemToCart
            created: 2000-01-23T04:56:07.000+00:00
            profileId: URNGV8294NV
            meta:
              campaigns: '{}'
              coupons: '{}'
              referralRejectionReason:
                reason: ReferralNotFound
                campaignId: 1
                referralId: 1
              warnings: '{}'
              couponRejectionReason:
                reason: CouponNotFound
                campaignId: 244
                couponId: 4928
            ledgerEntries:
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              accountId: 2
              eventId: 4
              reason: reason
              amount: 100
              created: 2000-01-23T04:56:07.000+00:00
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 7
            - expiryDate: 2000-01-23T04:56:07.000+00:00
              accountId: 2
              eventId: 4
              reason: reason
              amount: 100
              created: 2000-01-23T04:56:07.000+00:00
              profileId: URNGV8294NV
              loyaltyProgramId: 323414846
              id: 6
              referenceId: 7
            attributes: '{}'
            id: 6
            sessionId: sessionId
            applicationId: 322
            type: type
          createdCoupons:
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          - recipientIntegrationId: recipientIntegrationId
            created: 2000-01-23T04:56:07.000+00:00
            campaignId: 211
            usageLimit: 100
            referralId: 326632952
            usageCounter: 10
            batchId: 32535-43255
            discountCounter: 3.5571952270680973
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 1
            reservation: true
            attributes: '{}'
            id: 6
            value: XMAS-20-2021
            discountLimit: 30.0
            startDate: 2000-01-23T04:56:07.000+00:00
            discountRemainder: 6.965117697638846
          ruleFailureReasons:
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          createdReferrals:
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            usageLimit: 668355
            campaignId: 8
            usageCounter: 6
            batchId: batchId
            advocateProfileIntegrationId: advocateProfileIntegrationId
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            friendProfileIntegrationId: friendProfileIntegrationId
            attributes: '{}'
            id: 6
            startDate: 2000-01-23T04:56:07.000+00:00
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            usageLimit: 668355
            campaignId: 8
            usageCounter: 6
            batchId: batchId
            advocateProfileIntegrationId: advocateProfileIntegrationId
            expiryDate: 2000-01-23T04:56:07.000+00:00
            importId: 9
            friendProfileIntegrationId: friendProfileIntegrationId
            attributes: '{}'
            id: 6
            startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        integrationStates:
          items:
            $ref: '#/components/schemas/IntegrationStateV2'
          type: array
      type: object
    CustomerProfileAudienceRequest:
      example:
        data:
        - profileIntegrationId: "3518"
          action: add
          audienceId: 748
        - profileIntegrationId: "3518"
          action: add
          audienceId: 748
      properties:
        data:
          items:
            $ref: '#/components/schemas/CustomerProfileAudienceRequestItem'
          type: array
      type: object
    CustomerProfileAudienceRequestItem:
      example:
        profileIntegrationId: "3518"
        action: add
        audienceId: 748
      properties:
        action:
          enum:
          - add
          - delete
          example: add
          type: string
        profileIntegrationId:
          description: The ID of this audience in the third-party integration.
          example: "3518"
          type: string
        audienceId:
          description: The ID of the audience. You get it via the `id` property when
            [creating an audience](#operation/createAudienceV2).
          example: 748
          type: integer
      required:
      - action
      - audienceId
      - profileIntegrationId
      type: object
    FeedNotification:
      description: A feed notification for CAMA users
      properties:
        title:
          description: Title of the feed notification
          type: string
        created:
          description: Timestamp of the moment this feed notification was created
          format: date-time
          type: string
        updated:
          description: Timestamp of the moment this feed notification was last updated
          format: date-time
          type: string
        articleUrl:
          description: URL to the feed notification in the help center
          type: string
        type:
          description: The type of the feed notification
          enum:
          - feed
          - feature
          - announcement
          - alert
          - test
          type: string
        body:
          description: Body of the feed notification
          type: string
      required:
      - articleUrl
      - body
      - created
      - title
      - type
      - updated
      type: object
    UserFeedNotifications:
      description: notifications to notify CAMA user about
      properties:
        lastUpdate:
          description: Timestamp of the last request for this list
          format: date-time
          type: string
        notifications:
          description: List of all notifications to notify the user about
          items:
            $ref: '#/components/schemas/FeedNotification'
          type: array
      required:
      - lastUpdate
      - notifications
      type: object
    UpdateUserLatestFeedTimestamp:
      description: Updates current user's latest seen notifications timestamp
      properties:
        newLatestFeedTimestamp:
          description: New timestamp to update for the current user
          format: date-time
          type: string
      required:
      - newLatestFeedTimestamp
      type: object
    AccountCampaignStats:
      additionalProperties:
        $ref: '#/components/schemas/ApplicationCampaignStats'
      type: object
    ApplicationCampaignStats:
      description: Provides statistics regarding an application's campaigns
      properties:
        draft:
          description: Number of draft campaigns
          type: integer
        disabled:
          description: Number of disabled campaigns
          type: integer
        scheduled:
          description: Number of scheduled campaigns
          type: integer
        running:
          description: Number of running campaigns
          type: integer
        expired:
          description: Number of expired campaigns
          type: integer
        archived:
          description: Number of archived campaigns
          type: integer
      required:
      - archived
      - disabled
      - draft
      - expired
      - running
      - scheduled
      type: object
    RuleFailureReason:
      description: Details about why a rule failed.
      example:
        rulesetID: 5
        ruleIndex: 4
        campaignID: 7
        referralID: 3
        ruleName: ruleName
        conditionIndex: 0
        effectIndex: 6
        details: details
        couponID: 4928
        referralValue: referralValue
        campaignName: campaignName
        couponValue: couponValue
      properties:
        campaignID:
          description: The ID of the campaign that contains the rule that failed
          type: integer
        campaignName:
          description: The name of the campaign that contains the rule that failed
          type: string
        rulesetID:
          description: The ID of the ruleset that contains the rule that failed
          type: integer
        couponID:
          description: The ID of the coupon that was being evaluated at the time of
            the rule failure
          example: 4928
          type: integer
        couponValue:
          description: The value of the coupon that was being evaluated at the time
            of the rule failure
          type: string
        referralID:
          description: The ID of the referral that was being evaluated at the time
            of the rule failure
          type: integer
        referralValue:
          description: The value of the referral that was being evaluated at the time
            of the rule failure
          type: string
        ruleIndex:
          description: The index of the rule that failed within the ruleset
          type: integer
        ruleName:
          description: The name of the rule that failed within the ruleset
          type: string
        conditionIndex:
          description: The index of the condition that failed
          type: integer
        effectIndex:
          description: The index of the effect that failed
          type: integer
        details:
          description: More details about the failure
          type: string
      required:
      - campaignID
      - campaignName
      - ruleIndex
      - ruleName
      - rulesetID
      type: object
    Giveaway:
      description: ""
      example:
        code: code
        importId: 1
        endDate: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        poolId: 4
        attributes: '{}'
        id: 6
        used: true
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        code:
          description: The code value of this giveaway.
          type: string
        poolId:
          description: The ID of the pool to return giveaway codes from.
          type: integer
        startDate:
          description: Timestamp at which point the giveaway becomes valid.
          format: date-time
          type: string
        endDate:
          description: Timestamp at which point the giveaway becomes invalid.
          format: date-time
          type: string
        attributes:
          description: Arbitrary properties associated with this giveaway.
          properties: {}
          type: object
        used:
          description: Indicates whether this giveaway code was given before.
          type: boolean
        importId:
          description: The ID of the Import which created this giveaway.
          type: integer
      required:
      - code
      - created
      - id
      - poolId
      type: object
    NewGiveawaysPool:
      properties:
        name:
          description: The name of this giveaways pool.
          type: string
        description:
          description: The description of this giveaways pool.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this giveaways pool
            is enabled for
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    GiveawaysPool:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        name:
          description: The name of this giveaways pool.
          type: string
        description:
          description: The description of this giveaways pool.
          type: string
        subscribedApplicationsIds:
          description: A list of the IDs of the applications that this giveaways pool
            is enabled for
          items:
            type: integer
          type: array
        modified:
          description: Timestamp of the most recent update to the giveaways pool.
          format: date-time
          type: string
        createdBy:
          description: ID of the user who created this giveaways pool.
          type: integer
        modifiedBy:
          description: ID of the user who last updated this giveaways pool if available.
          type: integer
      required:
      - accountId
      - created
      - createdBy
      - id
      - name
      type: object
    NewCustomEffect:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        name:
          description: The name of this effect.
          type: string
        title:
          description: The title of this effect.
          type: string
        payload:
          description: The JSON payload of this effect.
          type: string
        description:
          description: The description of this effect.
          type: string
        enabled:
          description: Determines if this effect is active.
          type: boolean
        params:
          description: Array of template argument definitions
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
      required:
      - applicationIds
      - enabled
      - name
      - payload
      - title
      type: object
    UpdateCustomEffect:
      description: ""
      properties:
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        name:
          description: The name of this effect.
          type: string
        title:
          description: The title of this effect.
          type: string
        payload:
          description: The JSON payload of this effect.
          type: string
        description:
          description: The description of this effect.
          type: string
        enabled:
          description: Determines if this effect is active.
          type: boolean
        params:
          description: Array of template argument definitions
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
      required:
      - applicationIds
      - enabled
      - name
      - payload
      - title
      type: object
    CustomEffect:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        applicationIds:
          description: The IDs of the applications that are related to this entity.
          items:
            type: integer
          minItems: 1
          type: array
        name:
          description: The name of this effect.
          type: string
        title:
          description: The title of this effect.
          type: string
        payload:
          description: The JSON payload of this effect.
          type: string
        description:
          description: The description of this effect.
          type: string
        enabled:
          description: Determines if this effect is active.
          type: boolean
        params:
          description: Array of template argument definitions
          items:
            $ref: '#/components/schemas/TemplateArgDef'
          type: array
        modifiedBy:
          description: ID of the user who last updated this effect if available.
          type: integer
        createdBy:
          description: ID of the user who created this effect.
          type: integer
      required:
      - accountId
      - applicationIds
      - created
      - createdBy
      - enabled
      - id
      - modified
      - name
      - payload
      - title
      type: object
    NewCollection:
      properties:
        name:
          description: The name of this collection.
          minLength: 1
          type: string
        description:
          description: A short description of the purpose of this collection.
          type: string
      required:
      - name
      type: object
    UpdateCollection:
      description: ""
      properties:
        name:
          description: The name of this collection.
          minLength: 1
          type: string
        description:
          description: A short description of the purpose of this collection.
          type: string
      required:
      - name
      type: object
    Collection:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        modified:
          description: The exact moment this entity was last modified.
          format: date-time
          type: string
        name:
          description: The name of this collection.
          minLength: 1
          type: string
        description:
          description: A short description of the purpose of this collection.
          type: string
        payload:
          description: Payload contains limited amount of collection items
          items:
            type: string
          type: array
        modifiedBy:
          description: ID of the user who last updated this effect if available.
          type: integer
        createdBy:
          description: ID of the user who created this effect.
          type: integer
      required:
      - accountId
      - applicationId
      - campaignId
      - created
      - createdBy
      - id
      - modified
      - name
      type: object
    NewCouponCreationJob:
      description: ""
      properties:
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        numberOfCoupons:
          description: The number of new coupon codes to generate for the campaign.
            Must be between 20,001 and 5,000,000.
          type: integer
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        attributes:
          description: Arbitrary properties associated with coupons
          properties: {}
          type: object
      required:
      - attributes
      - numberOfCoupons
      - usageLimit
      type: object
    CouponCreationJob:
      description: ""
      properties:
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        created:
          description: The exact moment this entity was created.
          format: date-time
          type: string
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        usageLimit:
          description: |
            The number of times a coupon code can be redeemed. This can be set to 0 for no limit, but any campaign usage limits will still apply.
          example: 100
          maximum: 999999
          minimum: 0
          type: integer
        discountLimit:
          description: |
            The amount of discounts that can be given with this coupon code.
          example: 30.0
          maximum: 999999
          minimum: 0
          type: number
        startDate:
          description: Timestamp at which point the coupon becomes valid.
          format: date-time
          type: string
        expiryDate:
          description: Expiry date of the coupon. Coupon never expires if this is
            omitted, zero, or negative.
          format: date-time
          type: string
        numberOfCoupons:
          description: The number of new coupon codes to generate for the campaign.
            Must be between 20,001 and 5,000,000.
          type: integer
        couponSettings:
          $ref: '#/components/schemas/CodeGeneratorSettings'
        attributes:
          description: Arbitrary properties associated with coupons
          properties: {}
          type: object
        batchId:
          description: The batch ID coupons created by this job will bear
          title: Batch ID
          type: string
        status:
          description: The current status of this request. The value should be either
            'pending', 'completed' or 'failed'
          title: Job Status
          type: string
        createdAmount:
          description: The number of coupon codes that were already created for this
            request
          title: Created Amount
          type: integer
        failCount:
          description: The number of times this job failed
          title: Fail Count
          type: integer
        errors:
          description: An array of individual problems encountered during the request.
          items:
            type: string
          title: Errors
          type: array
        createdBy:
          description: ID of the user who created this effect.
          title: Created By
          type: integer
        communicated:
          description: Whether or not the user that created this job was notified
            of its final state
          type: boolean
        batchExecutionCount:
          description: The number of times an attempt to create a batch of coupons
            was made during the processing of the job
          title: Iterations
          type: integer
      required:
      - accountId
      - applicationId
      - attributes
      - batchExecutionCount
      - batchId
      - campaignId
      - communicated
      - created
      - createdAmount
      - createdBy
      - errors
      - failCount
      - id
      - numberOfCoupons
      - status
      - usageLimit
      type: object
    LimitCounter:
      description: ""
      properties:
        campaignId:
          description: The ID of the campaign that owns this entity.
          example: 211
          title: Campaign ID
          type: integer
        applicationId:
          description: The ID of the application that owns this entity.
          example: 322
          type: integer
        accountId:
          description: The ID of the account that owns this entity.
          example: 3886
          type: integer
        id:
          description: Unique ID for this entity.
          example: 6
          type: integer
        action:
          description: The limitable action of the limit counter.
          example: setDiscount
          type: string
        profileId:
          description: The profile ID for which this limit counter is used.
          type: integer
        profileIntegrationId:
          description: The profile integration ID for which this limit counter is
            used.
          type: string
        couponId:
          description: The coupon ID for which this limit counter is used.
          type: integer
        couponValue:
          description: The coupon value for which this limit counter is used.
          type: string
        referralId:
          description: The referral ID for which this limit counter is used.
          type: integer
        referralValue:
          description: The referral value for which this limit counter is used.
          type: string
        identifier:
          description: The arbitrary identifier for which this limit counter is used.
          type: integer
        period:
          description: The time period for which this limit counter is used.
          example: Y2021M8
          type: string
        limit:
          description: The highest possible value for this limit counter.
          example: 10.0
          type: number
        counter:
          description: The current value for this limit counter.
          example: 5.0
          type: number
      required:
      - accountId
      - action
      - applicationId
      - campaignId
      - counter
      - id
      - limit
      type: object
    inline_response_201:
      example:
        data:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200:
      example:
        data:
        - accountId: 7
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        - accountId: 7
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CustomerProfile'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_1:
      example:
        data:
        - enableFlattenedCartItems: true
          created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          sandbox: true
          description: description
          attributesSettings:
            mandatory:
              campaigns:
              - campaigns
              - campaigns
              coupons:
              - coupons
              - coupons
          caseSensitivity: sensitive
          accountId: 3886
          enableCascadingDiscounts: true
          campaignPriority: universal
          loyaltyPrograms:
          - accountID: 5
            defaultValidity: defaultValidity
            defaultPending: defaultPending
            tiers:
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            allowSubledger: true
            created: 2000-01-23T04:56:07.000+00:00
            timezone: timezone
            name: name
            description: description
            id: 6
            title: title
            subscribedApplications:
            - 1
            - 1
          - accountID: 5
            defaultValidity: defaultValidity
            defaultPending: defaultPending
            tiers:
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            allowSubledger: true
            created: 2000-01-23T04:56:07.000+00:00
            timezone: timezone
            name: name
            description: description
            id: 6
            title: title
            subscribedApplications:
            - 1
            - 1
          name: name
          exclusiveCampaignsStrategy: listOrder
          modified: 2000-01-23T04:56:07.000+00:00
          defaultDiscountScope: sessionTotal
          currency: currency
          attributes: '{}'
          id: 6
          limits:
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
        - enableFlattenedCartItems: true
          created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          sandbox: true
          description: description
          attributesSettings:
            mandatory:
              campaigns:
              - campaigns
              - campaigns
              coupons:
              - coupons
              - coupons
          caseSensitivity: sensitive
          accountId: 3886
          enableCascadingDiscounts: true
          campaignPriority: universal
          loyaltyPrograms:
          - accountID: 5
            defaultValidity: defaultValidity
            defaultPending: defaultPending
            tiers:
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            allowSubledger: true
            created: 2000-01-23T04:56:07.000+00:00
            timezone: timezone
            name: name
            description: description
            id: 6
            title: title
            subscribedApplications:
            - 1
            - 1
          - accountID: 5
            defaultValidity: defaultValidity
            defaultPending: defaultPending
            tiers:
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            - created: 2000-01-23T04:56:07.000+00:00
              name: name
              minPoints: 2.302135886934765E7
              id: 6
              programID: 5
            allowSubledger: true
            created: 2000-01-23T04:56:07.000+00:00
            timezone: timezone
            name: name
            description: description
            id: 6
            title: title
            subscribedApplications:
            - 1
            - 1
          name: name
          exclusiveCampaignsStrategy: listOrder
          modified: 2000-01-23T04:56:07.000+00:00
          defaultDiscountScope: sessionTotal
          currency: currency
          attributes: '{}'
          id: 6
          limits:
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Application'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_2:
      example:
        data:
        - createdLoyaltyPointsEffectCount: 8
          discountCount: 7.143538047012306
          description: description
          templateId: 3
          features:
          - coupons
          - coupons
          createdLoyaltyPointsCount: 4.652396432933246
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          activeRulesetId: 6
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 6
          couponRedemptionCount: 3
          userId: 6
          couponCreationCount: 7
          campaignGroups:
          - 6
          - 6
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          awardedGiveawaysCount: 0
          redeemedLoyaltyPointsEffectCount: 3
          discountEffectCount: 0
          createdBy: createdBy
          redeemedLoyaltyPointsCount: 7.740351818741173
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        - createdLoyaltyPointsEffectCount: 8
          discountCount: 7.143538047012306
          description: description
          templateId: 3
          features:
          - coupons
          - coupons
          createdLoyaltyPointsCount: 4.652396432933246
          couponSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 2
          state: enabled
          limits:
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          - period: daily
            entities:
            - Coupon
            - Coupon
            limit: 0.5944895607614016
            action: action
          activeRulesetId: 6
          updatedBy: updatedBy
          created: 2000-01-23T04:56:07.000+00:00
          referralCreationCount: 6
          couponRedemptionCount: 3
          userId: 6
          couponCreationCount: 7
          campaignGroups:
          - 6
          - 6
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
          awardedGiveawaysCount: 0
          redeemedLoyaltyPointsEffectCount: 3
          discountEffectCount: 0
          createdBy: createdBy
          redeemedLoyaltyPointsCount: 7.740351818741173
          name: name
          referralSettings:
            couponPattern: couponPattern
            validCharacters:
            - validCharacters
            - validCharacters
          attributes: '{}'
          lastActivity: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          applicationId: 322
          referralRedemptionCount: 3
          updated: 2000-01-23T04:56:07.000+00:00
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_3:
      example:
        data:
        - rbVersion: rbVersion
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 1
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          activatedAt: 2000-01-23T04:56:07.000+00:00
          activate: true
          rules:
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            description: description
            title: title
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            description: description
            title: title
          id: 6
          templateId: 5
          userId: 6
        - rbVersion: rbVersion
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 1
          bindings:
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          - expression:
            - '{}'
            - '{}'
            name: name
            type: type
          activatedAt: 2000-01-23T04:56:07.000+00:00
          activate: true
          rules:
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            description: description
            title: title
          - condition:
            - '{}'
            - '{}'
            effects:
            - '{}'
            - '{}'
            bindings:
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            - expression:
              - '{}'
              - '{}'
              name: name
              type: type
            description: description
            title: title
          id: 6
          templateId: 5
          userId: 6
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Ruleset'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_4:
      example:
        data:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_5:
      example:
        data:
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        - recipientIntegrationId: recipientIntegrationId
          created: 2000-01-23T04:56:07.000+00:00
          campaignId: 211
          usageLimit: 100
          referralId: 326632952
          usageCounter: 10
          batchId: 32535-43255
          discountCounter: 3.5571952270680973
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 1
          reservation: true
          attributes: '{}'
          id: 6
          value: XMAS-20-2021
          discountLimit: 30.0
          startDate: 2000-01-23T04:56:07.000+00:00
          discountRemainder: 6.965117697638846
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Coupon'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_6:
      example:
        data:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          usageLimit: 668355
          campaignId: 8
          usageCounter: 6
          batchId: batchId
          advocateProfileIntegrationId: advocateProfileIntegrationId
          expiryDate: 2000-01-23T04:56:07.000+00:00
          importId: 9
          friendProfileIntegrationId: friendProfileIntegrationId
          attributes: '{}'
          id: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Referral'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_7:
      example:
        data:
        - accountID: 5
          defaultValidity: defaultValidity
          defaultPending: defaultPending
          tiers:
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          allowSubledger: true
          created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          name: name
          description: description
          id: 6
          title: title
          subscribedApplications:
          - 1
          - 1
        - accountID: 5
          defaultValidity: defaultValidity
          defaultPending: defaultPending
          tiers:
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          - created: 2000-01-23T04:56:07.000+00:00
            name: name
            minPoints: 2.302135886934765E7
            id: 6
            programID: 5
          allowSubledger: true
          created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          name: name
          description: description
          id: 6
          title: title
          subscribedApplications:
          - 1
          - 1
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_8:
      example:
        data:
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/AccessLogEntry'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_9:
      example:
        data:
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        - method: method
          requestPayload: requestPayload
          responsePayload: responsePayload
          requestUri: requestUri
          time: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          status: 0
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AccessLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_10:
      example:
        data:
        - date: 2000-01-23T04:56:07.000+00:00
          couponRolledbackRedemptions: 1
          totalCouponRolledbackRedemptions: 1
          campaignRefundedDiscounts: 9.301444243932576
          totalDeductedLoyaltyPoints: 9.018348186070783
          couponRedemptions: 7
          totalCampaignDiscountCosts: 7.061401241503109
          referralRedemptions: 6
          totalCampaignRevenue: 1.4658129805029452
          campaignRevenue: 6.027456183070403
          campaignDiscountCosts: 2.3021358869347655
          totalReferralRedemptions: 7
          couponsCreated: 1
          addedLoyaltyPoints: 9.369310271410669
          campaignRefund: 5.962133916683182
          campaignFreeItems: 2
          totalAddedLoyaltyPoints: 6.683562403749608
          totalCampaignFreeItems: 4
          totalCampaignRefundedDiscounts: 3.616076749251911
          totalCampaignRefund: 5.637376656633329
          totalCouponsCreated: 4
          deductedLoyaltyPoints: 8.762042012749001
          totalCouponRedemptions: 1
          referralsCreated: 5
          totalReferralsCreated: 9
        - date: 2000-01-23T04:56:07.000+00:00
          couponRolledbackRedemptions: 1
          totalCouponRolledbackRedemptions: 1
          campaignRefundedDiscounts: 9.301444243932576
          totalDeductedLoyaltyPoints: 9.018348186070783
          couponRedemptions: 7
          totalCampaignDiscountCosts: 7.061401241503109
          referralRedemptions: 6
          totalCampaignRevenue: 1.4658129805029452
          campaignRevenue: 6.027456183070403
          campaignDiscountCosts: 2.3021358869347655
          totalReferralRedemptions: 7
          couponsCreated: 1
          addedLoyaltyPoints: 9.369310271410669
          campaignRefund: 5.962133916683182
          campaignFreeItems: 2
          totalAddedLoyaltyPoints: 6.683562403749608
          totalCampaignFreeItems: 4
          totalCampaignRefundedDiscounts: 3.616076749251911
          totalCampaignRefund: 5.637376656633329
          totalCouponsCreated: 4
          deductedLoyaltyPoints: 8.762042012749001
          totalCouponRedemptions: 1
          referralsCreated: 5
          totalReferralsCreated: 9
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/CampaignAnalytics'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_11:
      example:
        data:
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        hasMore: true
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationCustomer'
          type: array
      required:
      - data
    inline_response_200_12:
      example:
        data:
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        - accountId: 1
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: integrationId
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          advocateIntegrationId: advocateIntegrationId
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationCustomer'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_13:
      example:
        data:
        - accountId: 7
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        - accountId: 7
          closedSessions: 3
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          attributes:
            Language: english
            ShippingCountry: DE
          totalSales: 299.99
          lastActivity: 2000-01-23T04:56:07.000+00:00
          id: 6
          loyaltyMemberships:
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          - joined: 2000-01-23T04:56:07.000+00:00
            loyaltyProgramId: 9
          audienceMemberships:
          - name: name
            id: 3
          - name: name
            id: 3
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/CustomerProfile'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_14:
      example:
        data:
        - couponUseAttempts: 1
          created: 2000-01-23T04:56:07.000+00:00
          totalOrdersNoCoupon: 9
          integrationId: URNGV8294NV
          couponRedemptions: 6
          couponFailedAttempts: 5
          accruedRevenue: 2.3021358869347655
          name: name
          customerId: 0
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 7
          campaignName: campaignName
          accruedDiscounts: 5.637376656633329
        - couponUseAttempts: 1
          created: 2000-01-23T04:56:07.000+00:00
          totalOrdersNoCoupon: 9
          integrationId: URNGV8294NV
          couponRedemptions: 6
          couponFailedAttempts: 5
          accruedRevenue: 2.3021358869347655
          name: name
          customerId: 0
          lastActivity: 2000-01-23T04:56:07.000+00:00
          totalOrders: 7
          campaignName: campaignName
          accruedDiscounts: 5.637376656633329
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/CustomerActivityReport'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_15:
      example:
        data:
        - coupon: coupon
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          profileintegrationid: profileintegrationid
          total: 6.027456183070403
          referral: referral
          discounts:
            key: 0.8008281904610115
          profileId: 138
          attributes: '{}'
          id: 6
          state: open
          applicationId: 322
          cartItems:
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
        - coupon: coupon
          created: 2000-01-23T04:56:07.000+00:00
          integrationId: URNGV8294NV
          profileintegrationid: profileintegrationid
          total: 6.027456183070403
          referral: referral
          discounts:
            key: 0.8008281904610115
          profileId: 138
          attributes: '{}'
          id: 6
          state: open
          applicationId: 322
          cartItems:
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
          - quantity: 1
            price: 99.99
            name: Air Glide
            width: 6.027456183070403
            length: 1.4658129805029452
            weight: 1130.0
            attributes:
              image: 11.jpeg
              material: leather
            position: 5.962133916683182
            sku: "124102847"
            category: shoes
            height: 0.8008281904610115
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationSession'
          type: array
      required:
      - data
    inline_response_200_16:
      example:
        data:
        - effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: 138
          attributes: '{}'
          id: 6
          sessionId: 0
          applicationId: 322
          type: type
          ruleFailureReasons:
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
        - effects:
          - '{}'
          - '{}'
          created: 2000-01-23T04:56:07.000+00:00
          profileId: 138
          attributes: '{}'
          id: 6
          sessionId: 0
          applicationId: 322
          type: type
          ruleFailureReasons:
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
          - rulesetID: 5
            ruleIndex: 4
            campaignID: 7
            referralID: 3
            ruleName: ruleName
            conditionIndex: 0
            effectIndex: 6
            details: details
            couponID: 4928
            referralValue: referralValue
            campaignName: campaignName
            couponValue: couponValue
        hasMore: true
      properties:
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/ApplicationEvent'
          type: array
      required:
      - data
      - hasMore
    inline_response_200_17:
      example:
        data:
        - data
        - data
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            type: string
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_18:
      example:
        data:
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          name: mPTravel
          integration: mparticle
          integrationId: URNGV8294NV
          id: 6
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          name: mPTravel
          integration: mparticle
          integrationId: URNGV8294NV
          id: 6
        hasMore: true
        totalResultSize: 0
      properties:
        hasMore:
          type: boolean
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Audience'
          type: array
      required:
      - data
    inline_response_200_19:
      example:
        data:
        - friendIntegrationId: friendIntegrationId
          code: code
          created: 2000-01-23T04:56:07.000+00:00
          sessionId: sessionId
          advocateIntegrationId: advocateIntegrationId
          applicationId: 322
        - friendIntegrationId: friendIntegrationId
          code: code
          created: 2000-01-23T04:56:07.000+00:00
          sessionId: sessionId
          advocateIntegrationId: advocateIntegrationId
          applicationId: 322
        hasMore: true
        totalResultSize: 0
      properties:
        hasMore:
          type: boolean
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ApplicationReferee'
          type: array
      required:
      - data
      - hasMore
      - totalResultSize
    inline_response_200_20:
      example:
        data:
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          editable: true
          name: name
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          suggestions:
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          id: 6
          eventType: eventType
          title: title
          type: string
          entity: Account
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          editable: true
          name: name
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          suggestions:
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          - suggestions
          id: 6
          eventType: eventType
          title: title
          type: string
          entity: Account
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_21:
      example:
        data:
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          id: 6
          title: title
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          subscribedApplicationsIds:
          - 6
          - 6
          description: description
          id: 6
          title: title
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AccountAdditionalCost'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_22:
      example:
        data:
        - headers:
          - headers
          - headers
          payload: payload
          created: 2000-01-23T04:56:07.000+00:00
          verb: POST
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          title: title
          params:
          - ui: '{}'
            description: description
            type: string
            title: title
          - ui: '{}'
            description: description
            type: string
            title: title
          url: url
          enabled: true
          applicationIds:
          - 6
          - 6
        - headers:
          - headers
          - headers
          payload: payload
          created: 2000-01-23T04:56:07.000+00:00
          verb: POST
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          title: title
          params:
          - ui: '{}'
            description: description
            type: string
            title: title
          - ui: '{}'
            description: description
            type: string
            title: title
          url: url
          enabled: true
          applicationIds:
          - 6
          - 6
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_23:
      example:
        data:
        - webhookId: 6
          campaignId: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          applicationId: 1
        - webhookId: 6
          campaignId: 5
          created: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          applicationId: 1
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WebhookActivationLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_24:
      example:
        data:
        - requestTime: 2000-01-23T04:56:07.000+00:00
          request: request
          webhookId: 6
          response: response
          responseTime: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          id: id
          applicationId: 1
          url: url
          status: 5
        - requestTime: 2000-01-23T04:56:07.000+00:00
          request: request
          webhookId: 6
          response: response
          responseTime: 2000-01-23T04:56:07.000+00:00
          integrationRequestUuid: integrationRequestUuid
          id: id
          applicationId: 1
          url: url
          status: 5
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WebhookLogEntry'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_25:
      example:
        data:
        - schema: '{}'
          handler: handler
          examplePayload: examplePayload
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 6
          mimeType: application/json
          handlerLanguage: talang
          title: title
          version: 1
          applicationIds:
          - 6
          - 6
        - schema: '{}'
          handler: handler
          examplePayload: examplePayload
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 6
          mimeType: application/json
          handlerLanguage: talang
          title: title
          version: 1
          applicationIds:
          - 6
          - 6
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_26:
      example:
        data:
        - created: 2000-01-23T04:56:07.000+00:00
          roles:
          - 6
          - 6
          accountId: 3886
          applicationNotificationSubscriptions: '{}'
          inviteToken: inviteToken
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          state: invited
          latestFeedTimestamp: 2000-01-23T04:56:07.000+00:00
          authMethod: authMethod
          email: john.doe@example.com
          policy: '{}'
        - created: 2000-01-23T04:56:07.000+00:00
          roles:
          - 6
          - 6
          accountId: 3886
          applicationNotificationSubscriptions: '{}'
          inviteToken: inviteToken
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          id: 6
          state: invited
          latestFeedTimestamp: 2000-01-23T04:56:07.000+00:00
          authMethod: authMethod
          email: john.doe@example.com
          policy: '{}'
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_27:
      example:
        data:
        - new: '{}'
          created: 2000-01-23T04:56:07.000+00:00
          old: '{}'
          id: 6
          applicationId: 1
          userId: 6
          entity: entity
        - new: '{}'
          created: 2000-01-23T04:56:07.000+00:00
          old: '{}'
          id: 6
          applicationId: 1
          userId: 6
          entity: entity
        hasMore: true
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        hasMore:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Change'
          type: array
      required:
      - data
    inline_response_200_28:
      example:
        data:
        - filter: '{}'
          accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          id: 6
          userId: 6
          entity: Coupon
        - filter: '{}'
          accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          id: 6
          userId: 6
          entity: Coupon
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Export'
          type: array
      required:
      - data
      - totalResultSize
    inline_response_200_29:
      example:
        data:
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          campaignGroupID: 6
          members:
          - 1
          - 1
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 6
          acl: '{}'
        - accountId: 3886
          created: 2000-01-23T04:56:07.000+00:00
          campaignGroupID: 6
          members:
          - 1
          - 1
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 6
          acl: '{}'
        totalResultSize: 0
      properties:
        totalResultSize:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Role'
          type: array
      required:
      - data
      - totalResultSize
  securitySchemes:
    api_key_v1:
      description: |
        To authenticate in order to use the Integration API, generate an API key in the Campaign Manager
        then prefix it with `ApiKey-v1`.

        To generate an API key:

        1. Log on to the Campaign Manager and open the Application of your choice, or create one.
        1. Click **Settings** > **Developer settings**.
        1. Click **Create API Key** and give it a title and an expiration date, then click **Create API Key**.

        You can now use the API key in the HTTP header, prefixing it with `ApiKey-v1`:

        ```
        Authorization: ApiKey-v1 dbc644d33aa74d582bd9479c59e16f970fe13bf3
        ```

        Or use it inside [an SDK](/docs/dev/sdks/overview), for example, with the JAVA SDK:

        ```
        iApi.getApiClient().setApiKeyPrefix("ApiKey-v1");
        iApi.getApiClient().setApiKey("dbc644d33aa74d582bd9479c59e16f970fe13bf3");
        ```
      in: header
      name: Authorization
      type: apiKey
    manager_auth:
      description: |
        To authenticate in order to use the Management API:

        1. Get a bearer token by calling the [createSession](#operation/createSession) endpoint.
        1. Use the `token` property of the response in the HTTP header of your next queries:
           `Authorization: Bearer $TOKEN`.

        A token is valid for 3 months. In accordance with best pratices, use your generated token
        for all your API requests. Do **not** regenerate a token for each request.
      in: header
      name: Authorization
      type: apiKey
