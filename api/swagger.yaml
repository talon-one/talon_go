---
swagger: "2.0"
info:
  description: "The Talon.One API is used to manage applications and campaigns, as\
    \ well as to\nintegrate with your application. The operations in the _Integration\
    \ API_ section\nare used to integrate with our platform, while the other operations\
    \ are\nused to manage applications and campaigns.\n\n### Where is the API?\n\n\
    The API is available at the same hostname as these docs. For example, if you are\
    \ reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the\
    \ [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`\n\
    \n[updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put\n"
  version: "1.0.0"
  title: "Talon.One API"
tags:
- name: "Integration API"
  description: "The Integration API is how you push data into the Talon.One environment.\
    \ You can create profiles for your customers, sessions to group their activity,\
    \ and custom events to track specific actions that do not fit into the session\
    \ data model.\nYou will need [Authentication][] to make requests to the API.\n\
    [Authentication]: /integration-api/authentication\n"
- name: "Sessions"
  description: "Operations for logging in/out of the Campaign Manager.\n"
- name: "Applications"
- name: "Analytics"
  description: "Analytics are used to retrieve statistical data about the performance\
    \ ofcampaigns within an application.\n"
- name: "Campaigns"
  description: "Campaigns are the primary resource used to control the behaviour of\
    \ the Talon.One Rule Engine. They combine rulesets, coupons, and limits into a\
    \ single unit.\n"
- name: "Coupons"
  description: "Coupons are unique codes belonging to a particular campaign. They\
    \ don't define any behaviour on their own, instead the campaign ruleset can include\
    \ rules that validate coupons and carry out particular effects.\n"
- name: "Customization"
  description: "Talon.One is extremely customizable. These API operations allow you\
    \ to alter the data model and rule builder to better suit Talon.One to the needs\
    \ of your business."
- name: "Campaign Analytics"
  description: "Campaign Analytics are used to retrieve statistical data about the\
    \ performance of a specific campaign.\n"
- name: "Customer Data"
  description: "Customer Data operations are used to retrieve data about customers/sessions/events\
    \ for reporting and debugging in the Campaign Manager.\n"
- name: "Logs"
  description: "The Talon.One API records all incoming and outgoing requests. These\
    \ API operations allow you to query those logs.\n"
- name: "Accounts & Users"
  description: "Operations for updating account information such as billing email\
    \ addresses, inviting users, etc.\n"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- manager_auth: []
paths:
  /v1/customer_profiles/{integrationId}:
    put:
      tags:
      - "integration"
      summary: "Update a Customer Profile"
      description: "Update (or create) a [Customer Profile][]. This profile information\
        \ can then be matched and/or updated by campaign [Rules][].\n\nThe `integrationId`\
        \ may be any identifier that will remain stable for the customer. For example,\
        \ you might use a database ID, an email, or a phone number as the `integrationId`.\
        \ It is vital that this ID **not** change over time, so **don't** use any\
        \ identifier that the customer can update themselves. E.g. if your application\
        \ allows a customer to update their e-mail address, you should instead use\
        \ a database ID.\n\nUpdating a customer profile will return a response with\
        \ the full integration state. This includes the current state of the customer\
        \ profile, the customer session, the event that was recorded, and an array\
        \ of effects that took place.\n\n[Customer Profile]: /Getting-Started/entities#customer-profile\n\
        [Rules]: /Getting-Started/entities#campaigns-rulesets-and-coupons\n"
      operationId: "updateCustomerProfile"
      parameters:
      - name: "integrationId"
        in: "path"
        description: "The custom identifier for this profile, must be unique within\
          \ the account."
        required: true
        type: "string"
        x-exportParamName: "IntegrationId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewCustomerProfile"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/IntegrationState"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/customer_sessions/{customerSessionId}:
    put:
      tags:
      - "integration"
      summary: "Update a Customer Session"
      description: "Update (or create) a [Customer Session][]. For example, the items\
        \ in a customers cart are part of a session.\n\nThe Talon.One platform supports\
        \ multiple simultaneous sessions for the same profile, so if you have multiple\
        \ ways of accessing the same application you have the option of either tracking\
        \ multiple independent sessions or using the same session across all of them.\
        \ You should share sessions when application access points share other state,\
        \ such as the users cart. If two points of access to the application have\
        \ independent state (e.g. a user can have different items in their cart across\
        \ the two) they should use independent customer session ID's.\n\nThe `profileId`\
        \ parameter in the request body should correspond to an `integrationId` for\
        \ a customer profile, to track an anonymous session use the empty string (`\"\
        \"`) as the `profileId`. Note that you do **not** need to create a customer\
        \ profile first: if the specified profile does not yet exist, an empty profile\
        \ will be created automatically.\n\nUpdating a customer profile will return\
        \ a response with the full integration state. This includes the current state\
        \ of the customer profile, the customer session, the event that was recorded,\
        \ and an array of effects that took place.\n\nThe currency for the session\
        \ and the cart items in the session is the same as that of the application\
        \ with which the session is associated.\n\n[Customer Session]: /Getting-Started/entities#customer-session\n"
      operationId: "updateCustomerSession"
      parameters:
      - name: "customerSessionId"
        in: "path"
        description: "The custom identifier for this session, must be unique within\
          \ the account."
        required: true
        type: "string"
        x-exportParamName: "CustomerSessionId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewCustomerSession"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/IntegrationState"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/events:
    post:
      tags:
      - "integration"
      summary: "Track an Event"
      description: "Records an arbitrary event in a customer session. For example,\
        \ an integration might record an event when a user updates their payment information.\n\
        \nThe `sessionId` body parameter is required, an event is always part of a\
        \ session. Much like updating a customer session, if either the profile or\
        \ the session do not exist, a new empty one will be created. Note that if\
        \ the specified session already exists, it must belong to the same `profileId`\
        \ or an error will be returned.\n\nAs with customer sessions, you can use\
        \ an empty string for `profileId` to indicate that this is an anonymous session.\n\
        \nUpdating a customer profile will return a response with the full integration\
        \ state. This includes the current state of the customer profile, the customer\
        \ session, the event that was recorded, and an array of effects that took\
        \ place.\n"
      operationId: "trackEvent"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewEvent"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/IntegrationState"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/referrals:
    post:
      tags:
      - "integration"
      summary: "Create a referral code for an advocate"
      description: "Creates a referral code for an advocate. The code will be valid\
        \ for the referral campaign for which is created, indicated in the `campaignId`\
        \ parameter, and will be associated with the profile specified in the `advocateProfileIntegrationId`\
        \ parameter as the advocate's profile.\n"
      operationId: "createReferral"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewReferral"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Referral"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/customer_data/{integrationId}:
    delete:
      tags:
      - "integration"
      summary: "Delete the personal data of a customer."
      description: "Delete all attributes on the customer profile and on entities\
        \ that reference that customer profile.\n"
      operationId: "deleteCustomerData"
      parameters:
      - name: "integrationId"
        in: "path"
        description: "The custom identifier for this profile, must be unique within\
          \ the account."
        required: true
        type: "string"
        x-exportParamName: "IntegrationId"
      responses:
        204:
          description: "No Content"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/coupon_reservations/{couponValue}:
    post:
      tags:
      - "integration"
      summary: "Create a new coupon reservation"
      description: "Creates a coupon reservation for all passed customer profiles\
        \ on this couponID\n"
      operationId: "createCouponReservation"
      parameters:
      - name: "couponValue"
        in: "path"
        description: "The value of a coupon"
        required: true
        type: "string"
        x-exportParamName: "CouponValue"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CouponReservations"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Coupon"
      security:
      - api_key_v1: []
      - integration_auth: []
    delete:
      tags:
      - "integration"
      summary: "Delete coupon reservations"
      description: "Removes all passed customer profiles reservation from this coupon\n"
      operationId: "deleteCouponReservation"
      parameters:
      - name: "couponValue"
        in: "path"
        description: "The value of a coupon"
        required: true
        type: "string"
        x-exportParamName: "CouponValue"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CouponReservations"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/coupon_reservations/customerprofiles/{couponValue}:
    get:
      tags:
      - "integration"
      summary: "Get the users that have this coupon reserved"
      description: "Returns all users that have this coupon marked as reserved\n"
      operationId: "getReservedCustomers"
      parameters:
      - name: "couponValue"
        in: "path"
        description: "The value of a coupon"
        required: true
        type: "string"
        x-exportParamName: "CouponValue"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/CustomerProfile"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/coupon_reservations/coupons/{integrationId}:
    get:
      tags:
      - "integration"
      summary: "Get all valid reserved coupons"
      description: "Returns all coupons this user is subscribed to that are valid\
        \ and usable\n"
      operationId: "getReservedCoupons"
      parameters:
      - name: "integrationId"
        in: "path"
        description: "The custom identifier for this profile, must be unique within\
          \ the account."
        required: true
        type: "string"
        x-exportParamName: "IntegrationId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
      security:
      - api_key_v1: []
      - integration_auth: []
  /v1/applications:
    get:
      tags:
      - "management"
      summary: "List Applications"
      description: "List all application in the current account."
      operationId: "getApplications"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Application"
  /v1/applications/{applicationId}:
    get:
      tags:
      - "management"
      summary: "Get Application"
      description: "Get the application specified by the ID."
      operationId: "getApplication"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Application"
  /v1/applications/{applicationId}/campaigns:
    get:
      tags:
      - "management"
      summary: "List your Campaigns"
      description: ""
      operationId: "getCampaigns"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignState"
        in: "query"
        description: "Filter results by the state of the campaign."
        required: false
        type: "string"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
        - "draft"
        - "scheduled"
        - "running"
        - "expired"
        x-exportParamName: "CampaignState"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the name of the campaign."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "tags"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the tags of the campaign. When used in conjunction with the \"name\" query\
          \ parameter, a logical OR will be performed to search both tags and name\
          \ for the provided values\n"
        required: false
        type: "string"
        x-exportParamName: "Tags"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the campaign creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the campaign creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Campaign"
    post:
      tags:
      - "management"
      summary: "Create a Campaign"
      description: ""
      operationId: "createCampaign"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewCampaign"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Campaign"
  /v1/applications/{applicationId}/campaign_set:
    get:
      tags:
      - "management"
      summary: "List CampaignSet"
      description: ""
      operationId: "getCampaignSet"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CampaignSet"
    put:
      tags:
      - "management"
      summary: "Update a Campaign Set"
      description: ""
      operationId: "updateCampaignSet"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewCampaignSet"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CampaignSet"
  /v1/applications/{applicationId}/campaigns/{campaignId}:
    get:
      tags:
      - "management"
      summary: "Get a Campaign"
      description: ""
      operationId: "getCampaign"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Campaign"
    put:
      tags:
      - "management"
      summary: "Update a Campaign"
      description: ""
      operationId: "updateCampaign"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdateCampaign"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Campaign"
    delete:
      tags:
      - "management"
      summary: "Delete a Campaign"
      description: ""
      operationId: "deleteCampaign"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      responses:
        204:
          description: "No Content"
  /v1/applications/{applicationId}/campaigns/{campaignId}/copy:
    post:
      tags:
      - "management"
      summary: "Copy the campaign into every specified application"
      description: "Copy the campaign into every specified application."
      operationId: "copyCampaignToApplications"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CampaignCopy"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Campaign"
  /v1/applications/{applicationId}/campaigns_search:
    post:
      tags:
      - "management"
      summary: "Get a list of all campaigns that match the given attributes"
      description: "Gets a list of all the campaigns that exactly match a set of attributes.\n"
      operationId: "getCampaignByAttributes"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignState"
        in: "query"
        description: "Filter results by the state of the campaign."
        required: false
        type: "string"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
        - "draft"
        - "scheduled"
        - "running"
        - "expired"
        x-exportParamName: "CampaignState"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CampaignSearch"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Campaign"
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets:
    get:
      tags:
      - "management"
      summary: "List Campaign Rulesets"
      description: ""
      operationId: "getRulesets"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Ruleset"
    post:
      tags:
      - "management"
      summary: "Create a Ruleset"
      description: ""
      operationId: "createRuleset"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewRuleset"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Ruleset"
  /v1/applications/{applicationId}/campaigns/{campaignId}/rulesets/{rulesetId}:
    get:
      tags:
      - "management"
      summary: "Get a Ruleset"
      description: ""
      operationId: "getRuleset"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "rulesetId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "RulesetId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Ruleset"
    put:
      tags:
      - "management"
      summary: "Update a Ruleset"
      description: ""
      operationId: "updateRuleset"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "rulesetId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "RulesetId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewRuleset"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Ruleset"
    delete:
      tags:
      - "management"
      summary: "Delete a Ruleset"
      description: ""
      operationId: "deleteRuleset"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "rulesetId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "RulesetId"
      responses:
        204:
          description: "No Content"
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons:
    get:
      tags:
      - "management"
      summary: "List Coupons"
      description: ""
      operationId: "getCoupons"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "startsAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartsAfter"
        x-optionalDataType: "Time"
      - name: "startsBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartsBefore"
        x-optionalDataType: "Time"
      - name: "expiresAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "ExpiresAfter"
        x-optionalDataType: "Time"
      - name: "expiresBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "ExpiresBefore"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
    post:
      tags:
      - "management"
      summary: "Create Coupons"
      description: "Create coupons according to some pattern. Up to 20.000 coupons\
        \ can be created without a unique prefix. When a unique prefix is provided,\
        \ up to 200.000 coupns can be created."
      operationId: "createCoupons"
      parameters:
      - name: "silent"
        in: "query"
        description: "If set to 'yes', response will be an empty 204, otherwise a\
          \ list of the coupons generated (to to 1000)."
        required: false
        type: "string"
        x-exportParamName: "Silent"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewCoupons"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
        204:
          description: "No Content"
    put:
      tags:
      - "management"
      summary: "Update a Batch of Coupons"
      description: ""
      operationId: "updateCouponBatch"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdateCouponBatch"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
    delete:
      tags:
      - "management"
      summary: "Delete Coupons"
      description: ""
      operationId: "deleteCoupons"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "startsAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartsAfter"
        x-optionalDataType: "Time"
      - name: "startsBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "StartsBefore"
        x-optionalDataType: "Time"
      - name: "expiresAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "ExpiresAfter"
        x-optionalDataType: "Time"
      - name: "expiresBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "ExpiresBefore"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      responses:
        204:
          description: "No Content"
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/no_total:
    get:
      tags:
      - "management"
      summary: "List Coupons"
      description: ""
      operationId: "getCouponsWithoutTotalCount"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/{couponId}:
    put:
      tags:
      - "management"
      summary: "Update a Coupon"
      description: ""
      operationId: "updateCoupon"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "couponId"
        in: "path"
        description: "The ID of the coupon code to update"
        required: true
        type: "string"
        x-exportParamName: "CouponId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdateCoupon"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Coupon"
    delete:
      tags:
      - "management"
      summary: "Delete one Coupon"
      description: ""
      operationId: "deleteCoupon"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "couponId"
        in: "path"
        description: "The ID of the coupon code to delete"
        required: true
        type: "string"
        x-exportParamName: "CouponId"
      responses:
        204:
          description: "No Content"
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search:
    post:
      tags:
      - "management"
      summary: "Get a list of the coupons that match the given attributes"
      description: "Gets a list of all the coupons that exactly match a set of attributes.\n\
        \nThe match is successful if all the attributes of the request are found in\
        \ a coupon, even if the coupon has more attributes that are not present on\
        \ the request.\n"
      operationId: "getCouponsByAttributes"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CouponSearch"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
  /v1/applications/{applicationId}/coupons_search:
    post:
      tags:
      - "management"
      summary: "Get a list of the coupons that match the given attributes in all active\
        \ campaigns of an application"
      description: "Gets a list of all the coupons with attributes matching the query\
        \ criteria Application wide\n"
      operationId: "getCouponsByAttributesApplicationWide"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      - name: "campaignState"
        in: "query"
        description: "Filter results by the state of the campaign."
        required: false
        type: "string"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
        - "draft"
        - "scheduled"
        - "running"
        - "expired"
        x-exportParamName: "CampaignState"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CouponSearch"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced:
    post:
      tags:
      - "management"
      summary: "Get a list of the coupons that match the given attributes"
      description: "Gets a list of all the coupons with attributes matching the query\
        \ criteria\n"
      operationId: "searchCouponsAdvanced"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AttributeQuery"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
  /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced/no_total:
    post:
      tags:
      - "management"
      summary: "Get a list of the coupons that match the given attributes"
      description: "Gets a list of all the coupons with attributes matching the query\
        \ criteria\n"
      operationId: "searchCouponsAdvancedWithoutTotalCount"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AttributeQuery"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
  /v1/applications/{applicationId}/coupons_search_advanced:
    post:
      tags:
      - "management"
      summary: "Get a list of the coupons that match the given attributes in all active\
        \ campaigns of an application"
      description: "Gets a list of all the coupons with attributes matching the query\
        \ criteria in all active campaigns of an application\n"
      operationId: "searchCouponsAdvancedApplicationWide"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      - name: "campaignState"
        in: "query"
        description: "Filter results by the state of the campaign."
        required: false
        type: "string"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
        - "draft"
        - "scheduled"
        - "running"
        - "expired"
        x-exportParamName: "CampaignState"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AttributeQuery"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
  /v1/applications/{applicationId}/coupons_search_advanced/no_total:
    post:
      tags:
      - "management"
      summary: "Get a list of the coupons that match the given attributes in all active\
        \ campaigns of an application"
      description: "Gets a list of all the coupons with attributes matching the query\
        \ criteria in all active campaigns of an application\n"
      operationId: "searchCouponsAdvancedApplicationWideWithoutTotalCount"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "value"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the coupon code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Value"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the coupon creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches coupons in which the expiry date is set and in the past.\
          \ The second matches coupons in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches coupons in\
          \ which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only coupons where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ coupons where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "referralId"
        in: "query"
        description: "Filter the results by matching them with the Id of a referral,\
          \ that meaning the coupons that had been created as an effect of the usage\
          \ of a referral code."
        required: false
        type: "integer"
        x-exportParamName: "ReferralId"
        x-optionalDataType: "Int32"
      - name: "recipientIntegrationId"
        in: "query"
        description: "Filter results by match with a profile id specified in the coupon's\
          \ RecipientIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "RecipientIntegrationId"
        x-optionalDataType: "String"
      - name: "batchId"
        in: "query"
        description: "Filter results by batches of coupons"
        required: false
        type: "string"
        x-exportParamName: "BatchId"
        x-optionalDataType: "String"
      - name: "exactMatch"
        in: "query"
        description: "Filter results to an exact case-insensitive matching against\
          \ the coupon code"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExactMatch"
        x-optionalDataType: "Bool"
      - name: "campaignState"
        in: "query"
        description: "Filter results by the state of the campaign."
        required: false
        type: "string"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
        - "draft"
        - "scheduled"
        - "running"
        - "expired"
        x-exportParamName: "CampaignState"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AttributeQuery"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Coupon"
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals:
    get:
      tags:
      - "management"
      summary: "List Referrals"
      description: ""
      operationId: "getReferrals"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "code"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the referral code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Code"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the referral creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the referral creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches referrals in which the expiry date is set and in the past.\
          \ The second matches referrals in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches referrals\
          \ in which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only referrals where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ referrals where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "advocate"
        in: "query"
        description: "Filter results by match with a profile id specified in the referral's\
          \ AdvocateProfileIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "Advocate"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Referral"
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/{referralId}:
    delete:
      tags:
      - "management"
      summary: "Delete one Referral"
      description: ""
      operationId: "deleteReferral"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "referralId"
        in: "path"
        description: "The ID of the referral code to delete"
        required: true
        type: "string"
        x-exportParamName: "ReferralId"
      responses:
        204:
          description: "No Content"
  /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/no_total:
    get:
      tags:
      - "management"
      summary: "List Referrals"
      description: ""
      operationId: "getReferralsWithoutTotalCount"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "code"
        in: "query"
        description: "Filter results performing case-insensitive matching against\
          \ the referral code. Both the code and the query are folded to remove all\
          \ non-alpha-numeric characters."
        required: false
        type: "string"
        x-exportParamName: "Code"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the referral creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results comparing the parameter value, expected to be\
          \ an RFC3339 timestamp string, to the referral creation timestamp."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "valid"
        in: "query"
        description: "Either \"expired\", \"validNow\", or \"validFuture\". The first\
          \ option matches referrals in which the expiry date is set and in the past.\
          \ The second matches referrals in which start date is null or in the past\
          \ and expiry date is null or in the future, the third matches referrals\
          \ in which start date is set and in the future.\n"
        required: false
        type: "string"
        enum:
        - "expired"
        - "validNow"
        - "validFuture"
        x-exportParamName: "Valid"
        x-optionalDataType: "String"
      - name: "usable"
        in: "query"
        description: "Either \"true\" or \"false\". If \"true\", only referrals where\
          \ `usageCounter < usageLimit` will be returned, \"false\" will return only\
          \ referrals where `usageCounter >= usageLimit`.\n"
        required: false
        type: "string"
        enum:
        - "true"
        - "false"
        x-exportParamName: "Usable"
        x-optionalDataType: "String"
      - name: "advocate"
        in: "query"
        description: "Filter results by match with a profile id specified in the referral's\
          \ AdvocateProfileIntegrationId field"
        required: false
        type: "string"
        x-exportParamName: "Advocate"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Referral"
  /v1/loyalty_programs:
    get:
      tags:
      - "management"
      summary: "List all loyalty Programs"
      description: ""
      operationId: "getLoyaltyPrograms"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/LoyaltyProgram"
  /v1/loyalty_programs/{programID}:
    get:
      tags:
      - "management"
      summary: "Get a loyalty program"
      description: ""
      operationId: "getLoyaltyProgram"
      parameters:
      - name: "programID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProgramID"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LoyaltyProgram"
  /v1/loyalty_programs/{programID}/profile/{integrationID}:
    get:
      tags:
      - "management"
      summary: "get the Loyalty Ledger for this integrationID"
      description: "Get the Loyalty Ledger for this profile integration ID."
      operationId: "getLoyaltyPoints"
      parameters:
      - name: "programID"
        in: "path"
        description: "The identifier for the application, must be unique within the\
          \ account."
        required: true
        type: "string"
        x-exportParamName: "ProgramID"
      - name: "integrationID"
        in: "path"
        description: "The identifier for the application, must be unique within the\
          \ account."
        required: true
        type: "string"
        x-exportParamName: "IntegrationID"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/LoyaltyLedger"
  /v1/loyalty_programs/{programID}/profile/{integrationID}/add_points:
    put:
      tags:
      - "management"
      summary: "Add points in a certain loyalty program for the specified customer"
      description: ""
      operationId: "addLoyaltyPoints"
      parameters:
      - name: "programID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProgramID"
      - name: "integrationID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IntegrationID"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/LoyaltyPoints"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
  /v1/loyalty_programs/{programID}/profile/{integrationID}/deduct_points:
    put:
      tags:
      - "management"
      summary: "Deduct points in a certain loyalty program for the specified customer"
      description: ""
      operationId: "removeLoyaltyPoints"
      parameters:
      - name: "programID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProgramID"
      - name: "integrationID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IntegrationID"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/LoyaltyPoints"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
  /v1/applications/{applicationId}/health_report:
    get:
      tags:
      - "management"
      summary: "Get report of health of application API"
      description: ""
      operationId: "getApplicationApiHealth"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApplicationApiHealth"
  /v1/applications/{applicationId}/access_logs:
    get:
      tags:
      - "management"
      summary: "Get access logs for application"
      description: ""
      operationId: "getAccessLogs"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "path"
        in: "query"
        description: "Only return results where the request path matches the given\
          \ regular expresssion."
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "method"
        in: "query"
        description: "Only return results where the request method matches the given\
          \ regular expresssion."
        required: false
        type: "string"
        enum:
        - "get"
        - "put"
        - "post"
        - "delete"
        - "patch"
        x-exportParamName: "Method"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter results by HTTP status codes."
        required: false
        type: "string"
        enum:
        - "success"
        - "error"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "rangeStart"
        in: "query"
        description: "Only return results from after this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeStart"
      - name: "rangeEnd"
        in: "query"
        description: "Only return results from before this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeEnd"
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AccessLogEntry"
  /v1/applications/{applicationId}/access_logs/no_total:
    get:
      tags:
      - "management"
      summary: "Get access logs for application"
      description: ""
      operationId: "getAccessLogsWithoutTotalCount"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "path"
        in: "query"
        description: "Only return results where the request path matches the given\
          \ regular expresssion."
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "method"
        in: "query"
        description: "Only return results where the request method matches the given\
          \ regular expresssion."
        required: false
        type: "string"
        enum:
        - "get"
        - "put"
        - "post"
        - "delete"
        - "patch"
        x-exportParamName: "Method"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter results by HTTP status codes."
        required: false
        type: "string"
        enum:
        - "success"
        - "error"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "rangeStart"
        in: "query"
        description: "Only return results from after this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeStart"
      - name: "rangeEnd"
        in: "query"
        description: "Only return results from before this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeEnd"
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AccessLogEntry"
  /v1/access_logs:
    get:
      tags:
      - "management"
      summary: "Get all access logs"
      description: "Fetches the access logs for the entire account. Sensitive requests\
        \ (logins) are _always_ filtered from the logs.\n"
      operationId: "getAllAccessLogs"
      parameters:
      - name: "rangeStart"
        in: "query"
        description: "Only return results from after this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeStart"
      - name: "rangeEnd"
        in: "query"
        description: "Only return results from before this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeEnd"
      - name: "path"
        in: "query"
        description: "Only return results where the request path matches the given\
          \ regular expresssion."
        required: false
        type: "string"
        x-exportParamName: "Path"
        x-optionalDataType: "String"
      - name: "method"
        in: "query"
        description: "Only return results where the request method matches the given\
          \ regular expresssion."
        required: false
        type: "string"
        enum:
        - "get"
        - "put"
        - "post"
        - "delete"
        - "patch"
        x-exportParamName: "Method"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter results by HTTP status codes."
        required: false
        type: "string"
        enum:
        - "success"
        - "error"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AccessLogEntry"
  /v1/applications/{applicationId}/campaigns/{campaignId}/analytics:
    get:
      tags:
      - "management"
      summary: "Get analytics of campaigns"
      description: ""
      operationId: "getCampaignAnalytics"
      parameters:
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "campaignId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CampaignId"
      - name: "rangeStart"
        in: "query"
        description: "Only return results from after this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeStart"
      - name: "rangeEnd"
        in: "query"
        description: "Only return results from before this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeEnd"
      - name: "granularity"
        in: "query"
        description: "The time interval between the results in the returned time-series."
        required: false
        type: "string"
        enum:
        - "1 hour"
        - "1 day"
        - "1 week"
        - "1 month"
        - "1 year"
        x-exportParamName: "Granularity"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/CampaignAnalytics"
  /v1/applications/{applicationId}/customers:
    get:
      tags:
      - "management"
      summary: "List Application Customers"
      description: ""
      operationId: "getApplicationCustomers"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationCustomer"
  /v1/customer_search/no_total:
    post:
      tags:
      - "management"
      summary: "Get a list of the customer profiles that match the given attributes"
      description: "Gets a list of all the customer profiles for the account that\
        \ exactly match a set of attributes.\n\nThe match is successful if all the\
        \ attributes of the request are found in a profile, even if the profile has\
        \ more attributes that are not present on the request.\n\n[Customer Profile]:\
        \ http://help.talon.one/customer/en/portal/articles/2525263-data-model?b_id=14115#customer-profile\n"
      operationId: "getCustomersByAttributes"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ApplicationCustomerSearch"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationCustomer"
  /v1/customers/{customerId}:
    get:
      tags:
      - "management"
      summary: "Get Customer Profile"
      description: ""
      operationId: "getCustomerProfile"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "customerId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CustomerId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApplicationCustomer"
  /v1/customers/no_total:
    get:
      tags:
      - "management"
      summary: "List Customer Profiles"
      description: ""
      operationId: "getCustomerProfiles"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationCustomer"
  /v1/application_customer_search:
    post:
      tags:
      - "management"
      summary: "Get a list of the customer profiles that match the given attributes"
      description: "Gets a list of all the customer profiles for the account that\
        \ exactly match a set of attributes.\n\nThe match is successful if all the\
        \ attributes of the request are found in a profile, even if the profile has\
        \ more attributes that are not present on the request.\n\n[Customer Profile]:\
        \ http://help.talon.one/customer/en/portal/articles/2525263-data-model?b_id=14115#customer-profile\n"
      operationId: "getApplicationCustomersByAttributes"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ApplicationCustomerSearch"
        x-exportParamName: "Body"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationCustomer"
      security:
      - integration_auth: []
      deprecated: true
  /v1/applications/{applicationId}/customers/{customerId}:
    get:
      tags:
      - "management"
      summary: "Get Application Customer"
      description: ""
      operationId: "getApplicationCustomer"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "customerId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CustomerId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApplicationCustomer"
  /v1/applications/{applicationId}/customer_activity_reports:
    get:
      tags:
      - "management"
      summary: "Get Activity Reports for Application Customers"
      description: "Fetch summary reports for all application customers based on a\
        \ time range"
      operationId: "getCustomerActivityReports"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "rangeStart"
        in: "query"
        description: "Only return results from after this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeStart"
      - name: "rangeEnd"
        in: "query"
        description: "Only return results from before this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeEnd"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "name"
        in: "query"
        description: "Only return reports matching the customer name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "integrationId"
        in: "query"
        description: "Only return reports matching the integrationId"
        required: false
        type: "string"
        x-exportParamName: "IntegrationId"
        x-optionalDataType: "String"
      - name: "campaignName"
        in: "query"
        description: "Only return reports matching the campaignName"
        required: false
        type: "string"
        x-exportParamName: "CampaignName"
        x-optionalDataType: "String"
      - name: "advocateName"
        in: "query"
        description: "Only return reports matching the current customer referrer name"
        required: false
        type: "string"
        x-exportParamName: "AdvocateName"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/CustomerActivityReport"
  /v1/applications/{applicationId}/customer_activity_reports/no_total:
    get:
      tags:
      - "management"
      summary: "Get Activity Reports for Application Customers"
      description: "Fetch summary reports for all application customers based on a\
        \ time range. Instead of having the total number of results in the response,\
        \ this endpoint only if there are more results."
      operationId: "getCustomerActivityReportsWithoutTotalCount"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "rangeStart"
        in: "query"
        description: "Only return results from after this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeStart"
      - name: "rangeEnd"
        in: "query"
        description: "Only return results from before this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeEnd"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "name"
        in: "query"
        description: "Only return reports matching the customer name"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "integrationId"
        in: "query"
        description: "Only return reports matching the integrationId"
        required: false
        type: "string"
        x-exportParamName: "IntegrationId"
        x-optionalDataType: "String"
      - name: "campaignName"
        in: "query"
        description: "Only return reports matching the campaignName"
        required: false
        type: "string"
        x-exportParamName: "CampaignName"
        x-optionalDataType: "String"
      - name: "advocateName"
        in: "query"
        description: "Only return reports matching the current customer referrer name"
        required: false
        type: "string"
        x-exportParamName: "AdvocateName"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/CustomerActivityReport"
  /v1/applications/{applicationId}/customer_activity_reports/{customerId}:
    get:
      tags:
      - "management"
      summary: "Get Activity Report for Single Customer"
      description: "Fetch summary report for single application customer based on\
        \ a time range"
      operationId: "getCustomerActivityReport"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "rangeStart"
        in: "query"
        description: "Only return results from after this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeStart"
      - name: "rangeEnd"
        in: "query"
        description: "Only return results from before this timestamp, must be an RFC3339\
          \ timestamp string"
        required: true
        type: "string"
        format: "date-time"
        x-exportParamName: "RangeEnd"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "customerId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CustomerId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CustomerActivityReport"
  /v1/applications/{applicationId}/customers/{customerId}/analytics:
    get:
      tags:
      - "management"
      summary: "Get Analytics Report for a Customer"
      description: "Fetch analytics for single application customer"
      operationId: "getCustomerAnalytics"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "customerId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "CustomerId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CustomerAnalytics"
  /v1/applications/{applicationId}/sessions:
    get:
      tags:
      - "management"
      summary: "List Application Sessions"
      description: ""
      operationId: "getApplicationSessions"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "profile"
        in: "query"
        description: "Profile integration ID filter for sessions. Must be exact match."
        required: false
        type: "string"
        x-exportParamName: "Profile"
        x-optionalDataType: "String"
      - name: "state"
        in: "query"
        description: "Filter by sessions with this state. Must be exact match."
        required: false
        type: "string"
        enum:
        - "open"
        - "closed"
        - "cancelled"
        x-exportParamName: "State"
        x-optionalDataType: "String"
      - name: "coupon"
        in: "query"
        description: "Filter by sessions with this coupon. Must be exact match."
        required: false
        type: "string"
        x-exportParamName: "Coupon"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationSession"
  /v1/applications/{applicationId}/sessions/{sessionId}:
    get:
      tags:
      - "management"
      summary: "Get Application Session"
      description: ""
      operationId: "getApplicationSession"
      parameters:
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      - name: "sessionId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "SessionId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ApplicationSession"
  /v1/applications/{applicationId}/events:
    get:
      tags:
      - "management"
      summary: "List Applications Events"
      description: "Lists all events recorded for an application.\n"
      operationId: "getApplicationEvents"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Comma-separated list of types by which to filter events. Must\
          \ be exact match(es)."
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Only return events created before this date"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Only return events created after this date"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "session"
        in: "query"
        description: "Session integration ID filter for events. Must be exact match."
        required: false
        type: "string"
        x-exportParamName: "Session"
        x-optionalDataType: "String"
      - name: "profile"
        in: "query"
        description: "Profile integration ID filter for events. Must be exact match."
        required: false
        type: "string"
        x-exportParamName: "Profile"
        x-optionalDataType: "String"
      - name: "customerName"
        in: "query"
        description: "Customer name filter for events. Will match substrings case-insensitively."
        required: false
        type: "string"
        minLength: 2
        x-exportParamName: "CustomerName"
        x-optionalDataType: "String"
      - name: "customerEmail"
        in: "query"
        description: "Customer e-mail address filter for events. Will match substrings\
          \ case-insensitively."
        required: false
        type: "string"
        minLength: 2
        x-exportParamName: "CustomerEmail"
        x-optionalDataType: "String"
      - name: "effectsQuery"
        in: "query"
        description: "Effects filter for events. Will perform a full-text search on\
          \ the text content of the events effects, if any."
        required: false
        type: "string"
        x-exportParamName: "EffectsQuery"
        x-optionalDataType: "String"
      - name: "attributesQuery"
        in: "query"
        description: "Attributes filter for events. Will perform a full-text search\
          \ on the text content of the events attributes, both keys and values."
        required: false
        type: "string"
        x-exportParamName: "AttributesQuery"
        x-optionalDataType: "String"
      - name: "ruleQuery"
        in: "query"
        description: "Rule name filter for events"
        required: false
        type: "string"
        x-exportParamName: "RuleQuery"
        x-optionalDataType: "String"
      - name: "campaignQuery"
        in: "query"
        description: "Campaign name filter for events"
        required: false
        type: "string"
        x-exportParamName: "CampaignQuery"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationEvent"
  /v1/applications/{applicationId}/events/no_total:
    get:
      tags:
      - "management"
      summary: "List Applications Events"
      description: "Lists all events recorded for an application. Instead of having\
        \ the total number of results in the response, this endpoint only if there\
        \ are more results.\n"
      operationId: "getApplicationEventsWithoutTotalCount"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "type"
        in: "query"
        description: "Comma-separated list of types by which to filter events. Must\
          \ be exact match(es)."
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Only return events created before this date"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Only return events created after this date"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      - name: "session"
        in: "query"
        description: "Session integration ID filter for events. Must be exact match."
        required: false
        type: "string"
        x-exportParamName: "Session"
        x-optionalDataType: "String"
      - name: "profile"
        in: "query"
        description: "Profile integration ID filter for events. Must be exact match."
        required: false
        type: "string"
        x-exportParamName: "Profile"
        x-optionalDataType: "String"
      - name: "customerName"
        in: "query"
        description: "Customer name filter for events. Will match substrings case-insensitively."
        required: false
        type: "string"
        minLength: 2
        x-exportParamName: "CustomerName"
        x-optionalDataType: "String"
      - name: "customerEmail"
        in: "query"
        description: "Customer e-mail address filter for events. Will match substrings\
          \ case-insensitively."
        required: false
        type: "string"
        minLength: 2
        x-exportParamName: "CustomerEmail"
        x-optionalDataType: "String"
      - name: "effectsQuery"
        in: "query"
        description: "Effects filter for events. Will perform a full-text search on\
          \ the text content of the events effects, if any."
        required: false
        type: "string"
        x-exportParamName: "EffectsQuery"
        x-optionalDataType: "String"
      - name: "attributesQuery"
        in: "query"
        description: "Attributes filter for events. Will perform a full-text search\
          \ on the text content of the events attributes, both keys and values."
        required: false
        type: "string"
        x-exportParamName: "AttributesQuery"
        x-optionalDataType: "String"
      - name: "ruleQuery"
        in: "query"
        description: "Rule name filter for events"
        required: false
        type: "string"
        x-exportParamName: "RuleQuery"
        x-optionalDataType: "String"
      - name: "campaignQuery"
        in: "query"
        description: "Campaign name filter for events"
        required: false
        type: "string"
        x-exportParamName: "CampaignQuery"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "hasMore"
            properties:
              hasMore:
                type: "boolean"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ApplicationEvent"
  /v1/applications/{applicationId}/event_types:
    get:
      tags:
      - "management"
      summary: "List Applications Event Types"
      description: "Get all of the distinct values of the Event `type` property for\
        \ events recorded in the application.\n\nSee also: [Track an event](/integration-api/reference/#trackEvent)\n"
      operationId: "getApplicationEventTypes"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "applicationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ApplicationId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  type: "string"
  /v1/attributes/{attributeId}:
    get:
      tags:
      - "management"
      summary: "Get a custom attribute"
      description: "Returns custom attribute for the account by its id.\n"
      operationId: "getAttribute"
      parameters:
      - name: "attributeId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "AttributeId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Attribute"
  /v1/webhooks:
    get:
      tags:
      - "management"
      summary: "List Webhooks"
      description: ""
      operationId: "getWebhooks"
      parameters:
      - name: "applicationIds"
        in: "query"
        description: "Filter by one or more application ids separated by comma"
        required: false
        type: "string"
        x-exportParamName: "ApplicationIds"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Webhook"
  /v1/webhooks/{webhookId}:
    get:
      tags:
      - "management"
      summary: "Get Webhook"
      description: "Returns an webhook by its id."
      operationId: "getWebhook"
      parameters:
      - name: "webhookId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Webhook"
  /v1/webhook_activation_logs:
    get:
      tags:
      - "management"
      summary: "List Webhook activation Log Entries"
      description: "Webhook activation log entries would be created as soon as an\
        \ integration request triggered an effect with a webhook"
      operationId: "getWebhookActivationLogs"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "integrationRequestUuid"
        in: "query"
        description: "Filter results by integration request UUID."
        required: false
        type: "string"
        x-exportParamName: "IntegrationRequestUuid"
        x-optionalDataType: "String"
      - name: "webhookId"
        in: "query"
        description: "Filter results by Webhook."
        required: false
        type: "number"
        x-exportParamName: "WebhookId"
        x-optionalDataType: "Float32"
      - name: "applicationId"
        in: "query"
        required: false
        type: "number"
        x-exportParamName: "ApplicationId"
        x-optionalDataType: "Float32"
      - name: "campaignId"
        in: "query"
        description: "Filter results by campaign."
        required: false
        type: "number"
        x-exportParamName: "CampaignId"
        x-optionalDataType: "Float32"
      - name: "createdBefore"
        in: "query"
        description: "Only return events created before this date."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results where request and response times to return entries\
          \ after parameter value, expected to be an RFC3339 timestamp string."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/WebhookActivationLogEntry"
  /v1/webhook_logs:
    get:
      tags:
      - "management"
      summary: "List Webhook Log Entries"
      description: ""
      operationId: "getWebhookLogs"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "status"
        in: "query"
        description: "Filter results by HTTP status codes."
        required: false
        type: "string"
        enum:
        - "success"
        - "error"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "webhookId"
        in: "query"
        description: "Filter results by Webhook."
        required: false
        type: "number"
        x-exportParamName: "WebhookId"
        x-optionalDataType: "Float32"
      - name: "applicationId"
        in: "query"
        required: false
        type: "number"
        x-exportParamName: "ApplicationId"
        x-optionalDataType: "Float32"
      - name: "campaignId"
        in: "query"
        description: "Filter results by campaign."
        required: false
        type: "number"
        x-exportParamName: "CampaignId"
        x-optionalDataType: "Float32"
      - name: "requestUuid"
        in: "query"
        description: "Filter results by request UUID."
        required: false
        type: "string"
        x-exportParamName: "RequestUuid"
        x-optionalDataType: "String"
      - name: "createdBefore"
        in: "query"
        description: "Filter results where request and response times to return entries\
          \ before parameter value, expected to be an RFC3339 timestamp string."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedBefore"
        x-optionalDataType: "Time"
      - name: "createdAfter"
        in: "query"
        description: "Filter results where request and response times to return entries\
          \ after parameter value, expected to be an RFC3339 timestamp string."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "CreatedAfter"
        x-optionalDataType: "Time"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/WebhookLogEntry"
  /v1/event_types:
    get:
      tags:
      - "management"
      summary: "List Event Types"
      description: "Fetch all event type definitions for your account. Each event\
        \ type can be\n"
      operationId: "getEventTypes"
      parameters:
      - name: "applicationIds"
        in: "query"
        description: "Filter by one or more application ids separated by comma"
        required: false
        type: "string"
        x-exportParamName: "ApplicationIds"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter results to event types with the given name. This parameter\
          \ implies `includeOldVersions`."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "includeOldVersions"
        in: "query"
        description: "Include all versions of every event type."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeOldVersions"
        x-optionalDataType: "Bool"
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/EventType"
  /v1/refresh_analytics:
    post:
      tags:
      - "management"
      summary: "Trigger refresh on stale analytics."
      description: "Should be used to trigger a manual refresh of analytics."
      operationId: "refreshAnalytics"
      parameters: []
      responses:
        204:
          description: "No Content"
  /v1/users:
    get:
      tags:
      - "management"
      summary: "List Users in your account"
      description: "Retrieve all users in your account.\n"
      operationId: "getUsers"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/User"
  /v1/users/{userId}:
    get:
      tags:
      - "management"
      summary: "Get a single User"
      description: "Retrieves the data (including an invitation code) for a user.\
        \ Non-admin users can only get themselves.\n"
      operationId: "getUser"
      parameters:
      - name: "userId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "UserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
  /v1/changes:
    get:
      tags:
      - "management"
      summary: "Get audit log for an account"
      description: "Get list of changes caused by API calls for an account. Only accessible\
        \ for admins."
      operationId: "getChanges"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "The field by which results should be sorted. Sorting defaults\
          \ to ascending order, prefix the field name with `-` to sort in descending\
          \ order."
        required: false
        type: "string"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Change"
  /v1/password_recovery_emails:
    post:
      tags:
      - "management"
      summary: "Request a password reset"
      description: "Sends an email with a password recovery link to the email of an\
        \ existing account.\n"
      operationId: "createPasswordRecoveryEmail"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewPasswordEmail"
        x-exportParamName: "Body"
      responses:
        204:
          description: "Created"
          schema:
            $ref: "#/definitions/NewPasswordEmail"
  /v1/reset_password:
    post:
      tags:
      - "management"
      summary: "Reset password"
      description: "Consumes the supplied password reset token and updates the password\
        \ for\nthe associated account.\n"
      operationId: "resetPassword"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NewPassword"
        x-exportParamName: "Body"
      responses:
        204:
          description: "Created"
          schema:
            $ref: "#/definitions/NewPassword"
  /v1/accounts/{accountId}:
    get:
      tags:
      - "management"
      summary: "Get Account Details"
      description: "Return the details of your companies Talon.One account.\n"
      operationId: "getAccount"
      parameters:
      - name: "accountId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "AccountId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Account"
  /v1/accounts/{accountId}/analytics:
    get:
      tags:
      - "management"
      summary: "Get Account Analytics"
      description: "Return the analytics of your companies Talon.One account.\n"
      operationId: "getAccountAnalytics"
      parameters:
      - name: "accountId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "AccountId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccountAnalytics"
  /v1/accounts/{accountId}/limits:
    get:
      tags:
      - "management"
      summary: "Get Account Limits"
      description: "Returns a list of all account limits set\n"
      operationId: "getAccountLimits"
      parameters:
      - name: "accountId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "AccountId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccountLimits"
    put:
      tags:
      - "management"
      summary: "Set account limits"
      description: "sets account limits\n"
      operationId: "setAccountLimits"
      parameters:
      - name: "accountId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "AccountId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AccountLimits"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
  /v1/sessions:
    post:
      tags:
      - "management"
      summary: "Create a Session"
      description: ""
      operationId: "createSession"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/LoginParams"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Session"
  /v1/exports:
    get:
      tags:
      - "management"
      summary: "Get Exports"
      description: "Get a list of all past exports\n"
      operationId: "getExports"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "applicationId"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "ApplicationId"
        x-optionalDataType: "Int32"
      - name: "campaignId"
        in: "query"
        required: false
        type: "integer"
        x-exportParamName: "CampaignId"
        x-optionalDataType: "Int32"
      - name: "entity"
        in: "query"
        description: "The name of the entity type that was exported."
        required: false
        type: "string"
        enum:
        - "Coupon"
        - "Effect"
        - "CustomerSession"
        x-exportParamName: "Entity"
        x-optionalDataType: "String"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Export"
  /v1/imports:
    get:
      tags:
      - "management"
      summary: "Get Imports"
      description: "Get a list of all past imports\n"
      operationId: "getImports"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "The number of items to include in this response. When omitted,\
          \ the maximum value of 1000 will be used."
        required: false
        type: "integer"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "skip"
        in: "query"
        description: "Skips the given number of items when paging through large result\
          \ sets."
        required: false
        type: "integer"
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Import"
  /v1/roles:
    get:
      tags:
      - "management"
      summary: "Get all roles."
      operationId: "getAllRoles"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            required:
            - "data"
            - "totalResultSize"
            properties:
              totalResultSize:
                type: "integer"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Role"
  /v1/roles/{roleId}:
    get:
      tags:
      - "management"
      summary: "Get information for the specified role."
      operationId: "getRole"
      parameters:
      - name: "roleId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        x-exportParamName: "RoleId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Role"
securityDefinitions:
  integration_auth:
    description: "Requests are signed using the secret key of an Application."
    type: "apiKey"
    name: "Content-Signature"
    in: "header"
  api_key_v1:
    description: "Ephemeral apikey authorization."
    type: "apiKey"
    name: "Authorization"
    in: "header"
  manager_auth:
    description: "The Management API operations use a simple bearer token to authenticate\
      \ requests. You can obtain a bearer token from your credentials using the [createSession](#createSession)\
      \ operation. This `token` property of the session is used to authenticate Campaign\
      \ Manager requests with an HTTP header like `Authorization: Bearer $TOKEN`.\n"
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  MiscUpdateUserLatestFeature:
    type: "object"
    properties:
      latestFeature:
        type: "string"
  ErrorResponse:
    type: "object"
    required:
    - "message"
    properties:
      message:
        type: "string"
        description: "A message describing the error."
      errors:
        type: "array"
        description: "An array of individual problems encountered during the request."
        items:
          $ref: "#/definitions/APIError"
  APIError:
    type: "object"
    required:
    - "source"
    - "title"
    properties:
      title:
        type: "string"
        description: "Short description of the problem."
      details:
        type: "string"
        description: "Longer description of this specific instance of the problem."
      source:
        $ref: "#/definitions/ErrorSource"
  NewFeatureFlags:
    type: "object"
    properties:
      loyalty:
        type: "boolean"
        description: "Whether the account has access to the loyalty features or not"
      coupons_without_count:
        type: "boolean"
        description: "Whether the account queries coupons with or without total result\
          \ size"
      betaEffects:
        type: "boolean"
        description: "Whether the account can test beta effects or not"
  FeatureFlags:
    type: "object"
    required:
    - "accountId"
    properties:
      accountId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      loyalty:
        type: "boolean"
        description: "Whether the account has access to the loyalty features or not"
      coupons_without_count:
        type: "boolean"
        description: "Whether the account queries coupons with or without total result\
          \ size"
      betaEffects:
        type: "boolean"
        description: "Whether the account can test beta effects or not"
    description: ""
  FeatureFlag:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        description: "The name for the featureflag"
      value:
        type: "string"
        description: "The value for the featureflag"
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was last created."
      modified:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was last modified."
  ErrorSource:
    type: "object"
    properties:
      pointer:
        type: "string"
        description: "Pointer to the path in the payload that caused this error."
      parameter:
        type: "string"
        description: "Query parameter that caused this error."
      line:
        type: "string"
        description: "Line number in uploaded multipart file that caused this error.\
          \ 'N/A' if unknown."
    description: "The source of the current error, exactly one of `pointer`, `parameter`\
      \ or `line` will be defined.\n"
  Entity:
    type: "object"
    required:
    - "created"
    - "id"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
  MutableEntity:
    type: "object"
    required:
    - "modified"
    properties:
      modified:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was last modified."
  AccountEntity:
    type: "object"
    required:
    - "accountId"
    properties:
      accountId:
        type: "integer"
        description: "The ID of the account that owns this entity."
  UserEntity:
    type: "object"
    required:
    - "userId"
    properties:
      userId:
        type: "integer"
        description: "The ID of the account that owns this entity."
  EmailEntity:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
        format: "email"
        description: "The email address associated with your account."
  ApplicationEntity:
    type: "object"
    required:
    - "applicationId"
    properties:
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
  MultiApplicationEntity:
    type: "object"
    required:
    - "applicationIds"
    properties:
      applicationIds:
        type: "array"
        description: "The IDs of the applications that are related to this entity."
        items:
          type: "integer"
  CampaignEntity:
    type: "object"
    required:
    - "campaignId"
    properties:
      campaignId:
        type: "integer"
        description: "The ID of the campaign that owns this entity."
        title: "Campaign ID"
  ApplicationSessionEntity:
    type: "object"
    required:
    - "sessionId"
    properties:
      sessionId:
        type: "integer"
        description: "The globally unique Talon.One ID of the session where this entity\
          \ was created."
  ApplicationCustomerEntity:
    type: "object"
    properties:
      profileId:
        type: "integer"
        description: "The globally unique Talon.One ID of the customer that created\
          \ this entity."
  IntegrationEntity:
    type: "object"
    required:
    - "created"
    - "integrationId"
    properties:
      integrationId:
        type: "string"
        format: "string"
        description: "The ID used for this entity in the application system."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
  IntegrationProfileEntity:
    type: "object"
    properties:
      profileId:
        type: "string"
        description: "ID of the customers profile as used within this Talon.One account.\
          \ May be omitted or set to the empty string if the customer does not yet\
          \ have a known profile ID."
  CouponValue:
    type: "object"
    properties:
      value:
        type: "string"
        description: "The actual coupon code."
        title: "Coupon Code"
        minLength: 4
  CouponConstraints:
    type: "object"
    properties:
      usageLimit:
        type: "integer"
        description: "The number of times a coupon code can be redeemed. This can\
          \ be set to 0 for no limit, but any campaign usage limits will still apply.\n"
        minimum: 0
        maximum: 999999
      startDate:
        type: "string"
        format: "date-time"
        description: "Timestamp at which point the coupon becomes valid."
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the coupon. Coupon never expires if this is omitted,\
          \ zero, or negative."
  CodeGeneratorSettings:
    type: "object"
    required:
    - "couponPattern"
    - "validCharacters"
    properties:
      validCharacters:
        type: "array"
        description: "Set of characters to be used when generating random part of\
          \ code. Defaults to [A-Z, 0-9] (in terms of RegExp)."
        items:
          type: "string"
      couponPattern:
        type: "string"
        description: "The pattern that will be used to generate coupon codes. The\
          \ character `#` acts as a placeholder and will be replaced by a random character\
          \ from the `validCharacters` set.\n"
        minLength: 3
    example:
      couponPattern: "couponPattern"
      validCharacters:
      - "validCharacters"
      - "validCharacters"
  Session:
    type: "object"
    required:
    - "created"
    - "token"
    - "userId"
    properties:
      userId:
        type: "integer"
        description: "The ID of the user of this session"
      token:
        type: "string"
        description: "An opaque session identifier"
      created:
        type: "string"
        format: "date-time"
        description: "Unix timestamp indicating when the session was first created."
    example:
      created: "2000-01-23T04:56:07.000+00:00"
      userId: 0
      token: "token"
  LoginParams:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      email:
        type: "string"
        format: "email"
        description: "The email address associated with your account."
      password:
        type: "string"
        description: "The password for your account."
    description: ""
    example:
      password: "password"
      email: "email"
  NewApplication:
    type: "object"
    required:
    - "currency"
    - "key"
    - "name"
    - "timezone"
    properties:
      name:
        type: "string"
        description: "The name of this application."
        minLength: 1
      description:
        type: "string"
        description: "A longer description of the application."
      key:
        type: "string"
        description: "Hex key for HMAC-signing API calls as coming from this application\
          \ (16 hex digits)"
        minLength: 16
        maxLength: 16
        pattern: "^[a-fA-F0-9]{16}$"
      timezone:
        type: "string"
        description: "A string containing an IANA timezone descriptor."
        minLength: 1
      currency:
        type: "string"
        description: "A string describing a default currency for new customer sessions."
        minLength: 1
      caseSensitivity:
        type: "string"
        description: "A string indicating how should campaigns in this application\
          \ deal with case sensitivity on coupon codes."
        enum:
        - "sensitive"
        - "insensitive-uppercase"
        - "insensitive-lowercase"
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this campaign"
        properties: {}
      limits:
        type: "array"
        description: "Default limits for campaigns created in this application"
        items:
          $ref: "#/definitions/LimitConfig"
  Application:
    type: "object"
    required:
    - "accountId"
    - "created"
    - "currency"
    - "id"
    - "key"
    - "loyaltyPrograms"
    - "modified"
    - "name"
    - "timezone"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      modified:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was last modified."
      accountId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      name:
        type: "string"
        description: "The name of this application."
        minLength: 1
      description:
        type: "string"
        description: "A longer description of the application."
      key:
        type: "string"
        description: "Hex key for HMAC-signing API calls as coming from this application\
          \ (16 hex digits)"
        minLength: 16
        maxLength: 16
        pattern: "^[a-fA-F0-9]{16}$"
      timezone:
        type: "string"
        description: "A string containing an IANA timezone descriptor."
        minLength: 1
      currency:
        type: "string"
        description: "A string describing a default currency for new customer sessions."
        minLength: 1
      caseSensitivity:
        type: "string"
        description: "A string indicating how should campaigns in this application\
          \ deal with case sensitivity on coupon codes."
        enum:
        - "sensitive"
        - "insensitive-uppercase"
        - "insensitive-lowercase"
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this campaign"
        properties: {}
      limits:
        type: "array"
        description: "Default limits for campaigns created in this application"
        items:
          $ref: "#/definitions/LimitConfig"
      loyaltyPrograms:
        type: "array"
        description: "An array containing all the loyalty programs to which this application\
          \ is subscribed"
        items:
          $ref: "#/definitions/LoyaltyProgram"
    description: ""
    example:
      created: "2000-01-23T04:56:07.000+00:00"
      timezone: "timezone"
      description: "description"
      caseSensitivity: "sensitive"
      accountId: 1
      loyaltyPrograms:
      - accountID: 2
        defaultValidity: "defaultValidity"
        allowSubledger: true
        name: "name"
        description: "description"
        id: 5
        title: "title"
        subscribedApplications:
        - 7
        - 7
      - accountID: 2
        defaultValidity: "defaultValidity"
        allowSubledger: true
        name: "name"
        description: "description"
        id: 5
        title: "title"
        subscribedApplications:
        - 7
        - 7
      name: "name"
      modified: "2000-01-23T04:56:07.000+00:00"
      currency: "currency"
      attributes: "{}"
      id: 6
      key: "key"
      limits:
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
  NewCampaign:
    type: "object"
    required:
    - "features"
    - "limits"
    - "name"
    - "state"
    - "tags"
    properties:
      name:
        type: "string"
        description: "A friendly name for this campaign."
        title: "Campaign Name"
        minLength: 1
      description:
        type: "string"
        description: "A detailed description of the campaign."
        title: "Campaign Description"
      startTime:
        type: "string"
        format: "date-time"
        description: "Datetime when the campaign will become active."
      endTime:
        type: "string"
        format: "date-time"
        description: "Datetime when the campaign will become in-active."
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this campaign"
        properties: {}
      state:
        type: "string"
        description: "A disabled or archived campaign is not evaluated for rules or\
          \ coupons.\n"
        default: "enabled"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
      activeRulesetId:
        type: "integer"
        description: "ID of Ruleset this campaign applies on customer session evaluation."
      tags:
        type: "array"
        description: "A list of tags for the campaign."
        items:
          type: "string"
          minLength: 1
          maxLength: 50
        maxItems: 50
      features:
        type: "array"
        description: "A list of features for the campaign."
        items:
          type: "string"
          enum:
          - "coupons"
          - "referrals"
          - "loyalty"
        maxItems: 3
        minItems: 0
      couponSettings:
        $ref: "#/definitions/CodeGeneratorSettings"
      referralSettings:
        $ref: "#/definitions/CodeGeneratorSettings"
      limits:
        type: "array"
        description: "The set of limits that will operate for this campaign"
        items:
          $ref: "#/definitions/LimitConfig"
    example:
      activeRulesetId: 0
      features:
      - "coupons"
      - "coupons"
      - "coupons"
      name: "name"
      referralSettings:
        couponPattern: "couponPattern"
        validCharacters:
        - "validCharacters"
        - "validCharacters"
      description: "description"
      couponSettings:
        couponPattern: "couponPattern"
        validCharacters:
        - "validCharacters"
        - "validCharacters"
      startTime: "2000-01-23T04:56:07.000+00:00"
      attributes: "{}"
      endTime: "2000-01-23T04:56:07.000+00:00"
      state: "enabled"
      limits:
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
      tags:
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
  UpdateCampaign:
    type: "object"
    required:
    - "features"
    - "limits"
    - "name"
    - "tags"
    properties:
      name:
        type: "string"
        description: "A friendly name for this campaign."
        title: "Campaign Name"
        minLength: 1
      description:
        type: "string"
        description: "A detailed description of the campaign."
        title: "Campaign Description"
      startTime:
        type: "string"
        format: "date-time"
        description: "Datetime when the campaign will become active."
      endTime:
        type: "string"
        format: "date-time"
        description: "Datetime when the campaign will become in-active."
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this campaign"
        properties: {}
      state:
        type: "string"
        description: "A disabled or archived campaign is not evaluated for rules or\
          \ coupons.\n"
        default: "enabled"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
      activeRulesetId:
        type: "integer"
        description: "ID of Ruleset this campaign applies on customer session evaluation."
      tags:
        type: "array"
        description: "A list of tags for the campaign."
        items:
          type: "string"
          minLength: 1
          maxLength: 50
        maxItems: 50
      features:
        type: "array"
        description: "A list of features for the campaign."
        items:
          type: "string"
          enum:
          - "coupons"
          - "referrals"
          - "loyalty"
        maxItems: 3
        minItems: 0
      couponSettings:
        $ref: "#/definitions/CodeGeneratorSettings"
      referralSettings:
        $ref: "#/definitions/CodeGeneratorSettings"
      limits:
        type: "array"
        description: "The set of limits that will operate for this campaign"
        items:
          $ref: "#/definitions/LimitConfig"
    example:
      activeRulesetId: 0
      features:
      - "coupons"
      - "coupons"
      - "coupons"
      name: "name"
      referralSettings:
        couponPattern: "couponPattern"
        validCharacters:
        - "validCharacters"
        - "validCharacters"
      description: "description"
      couponSettings:
        couponPattern: "couponPattern"
        validCharacters:
        - "validCharacters"
        - "validCharacters"
      startTime: "2000-01-23T04:56:07.000+00:00"
      attributes: "{}"
      endTime: "2000-01-23T04:56:07.000+00:00"
      state: "enabled"
      limits:
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
      tags:
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
  Campaign:
    type: "object"
    required:
    - "applicationId"
    - "created"
    - "description"
    - "features"
    - "id"
    - "limits"
    - "name"
    - "state"
    - "tags"
    - "userId"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      userId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      name:
        type: "string"
        description: "A friendly name for this campaign."
        title: "Campaign Name"
        minLength: 1
      description:
        type: "string"
        description: "A detailed description of the campaign."
        title: "Campaign Description"
      startTime:
        type: "string"
        format: "date-time"
        description: "Datetime when the campaign will become active."
      endTime:
        type: "string"
        format: "date-time"
        description: "Datetime when the campaign will become in-active."
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this campaign"
        properties: {}
      state:
        type: "string"
        description: "A disabled or archived campaign is not evaluated for rules or\
          \ coupons.\n"
        default: "enabled"
        enum:
        - "enabled"
        - "disabled"
        - "archived"
      activeRulesetId:
        type: "integer"
        description: "ID of Ruleset this campaign applies on customer session evaluation."
      tags:
        type: "array"
        description: "A list of tags for the campaign."
        items:
          type: "string"
          minLength: 1
          maxLength: 50
        maxItems: 50
      features:
        type: "array"
        description: "A list of features for the campaign."
        items:
          type: "string"
          enum:
          - "coupons"
          - "referrals"
          - "loyalty"
        maxItems: 3
        minItems: 0
      couponSettings:
        $ref: "#/definitions/CodeGeneratorSettings"
      referralSettings:
        $ref: "#/definitions/CodeGeneratorSettings"
      limits:
        type: "array"
        description: "The set of limits that will operate for this campaign"
        items:
          $ref: "#/definitions/LimitConfig"
      couponRedemptionCount:
        type: "integer"
        description: "Number of coupons redeemed in the campaign."
      referralRedemptionCount:
        type: "integer"
        description: "Number of referral codes redeemed in the campaign."
      discountCount:
        type: "integer"
        description: "Total amount of discounts redeemed in the campaign."
      lastActivity:
        type: "string"
        format: "date-time"
        description: "Timestamp of the most recent event received by this campaign."
      updated:
        type: "string"
        format: "date-time"
        description: "Timestamp of the most recent update to the campaign or any of\
          \ its elements."
      createdBy:
        type: "string"
        description: "Name of the user who created this campaign if available."
      updatedBy:
        type: "string"
        description: "Name of the user who last updated this campaign if available."
    description: ""
    example:
      activeRulesetId: 5
      updatedBy: "updatedBy"
      created: "2000-01-23T04:56:07.000+00:00"
      discountCount: 9
      description: "description"
      couponRedemptionCount: 2
      userId: 5
      tags:
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      - "tags"
      features:
      - "coupons"
      - "coupons"
      - "coupons"
      createdBy: "createdBy"
      name: "name"
      referralSettings:
        couponPattern: "couponPattern"
        validCharacters:
        - "validCharacters"
        - "validCharacters"
      couponSettings:
        couponPattern: "couponPattern"
        validCharacters:
        - "validCharacters"
        - "validCharacters"
      startTime: "2000-01-23T04:56:07.000+00:00"
      attributes: "{}"
      lastActivity: "2000-01-23T04:56:07.000+00:00"
      id: 6
      endTime: "2000-01-23T04:56:07.000+00:00"
      state: "enabled"
      applicationId: 1
      referralRedemptionCount: 7
      updated: "2000-01-23T04:56:07.000+00:00"
      limits:
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
      - entities:
        - "Coupon"
        - "Coupon"
        limit: 0.59621339166831821554382031536079011857509613037109375
        action: "redeemCoupon"
  NewRuleset:
    type: "object"
    required:
    - "bindings"
    - "rules"
    properties:
      rules:
        type: "array"
        description: "Set of rules to apply."
        items:
          $ref: "#/definitions/Rule"
      bindings:
        type: "array"
        description: "An array that provides objects with variable names (name) and\
          \ talang expressions to whose result they are bound (expression) during\
          \ rule evaluation. The order of the evaluation is decided by the position\
          \ in the array."
        items:
          $ref: "#/definitions/Binding"
      rbVersion:
        type: "string"
        description: "A string indicating which version of the rulebuilder was used\
          \ to create this ruleset."
      activate:
        type: "boolean"
        description: "A boolean indicating whether this newly created ruleset should\
          \ also be activated for the campaign owns it"
    example:
      rbVersion: "rbVersion"
      bindings:
      - expression:
        - "{}"
        - "{}"
        name: "name"
      - expression:
        - "{}"
        - "{}"
        name: "name"
      activate: true
      rules:
      - condition:
        - "{}"
        - "{}"
        effects:
        - "{}"
        - "{}"
        bindings:
        - expression:
          - "{}"
          - "{}"
          name: "name"
        - expression:
          - "{}"
          - "{}"
          name: "name"
        description: "description"
        title: "title"
      - condition:
        - "{}"
        - "{}"
        effects:
        - "{}"
        - "{}"
        bindings:
        - expression:
          - "{}"
          - "{}"
          name: "name"
        - expression:
          - "{}"
          - "{}"
          name: "name"
        description: "description"
        title: "title"
  Ruleset:
    type: "object"
    required:
    - "bindings"
    - "campaignId"
    - "created"
    - "id"
    - "rules"
    - "userId"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      campaignId:
        type: "integer"
        description: "The ID of the campaign that owns this entity."
        title: "Campaign ID"
      userId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      rules:
        type: "array"
        description: "Set of rules to apply."
        items:
          $ref: "#/definitions/Rule"
      bindings:
        type: "array"
        description: "An array that provides objects with variable names (name) and\
          \ talang expressions to whose result they are bound (expression) during\
          \ rule evaluation. The order of the evaluation is decided by the position\
          \ in the array."
        items:
          $ref: "#/definitions/Binding"
      rbVersion:
        type: "string"
        description: "A string indicating which version of the rulebuilder was used\
          \ to create this ruleset."
      activate:
        type: "boolean"
        description: "A boolean indicating whether this newly created ruleset should\
          \ also be activated for the campaign owns it"
      activatedAt:
        type: "string"
        format: "date-time"
        description: "Timestamp indicating when this Ruleset was activated."
    description: ""
    example:
      rbVersion: "rbVersion"
      created: "2000-01-23T04:56:07.000+00:00"
      campaignId: 1
      bindings:
      - expression:
        - "{}"
        - "{}"
        name: "name"
      - expression:
        - "{}"
        - "{}"
        name: "name"
      activatedAt: "2000-01-23T04:56:07.000+00:00"
      activate: true
      rules:
      - condition:
        - "{}"
        - "{}"
        effects:
        - "{}"
        - "{}"
        bindings:
        - expression:
          - "{}"
          - "{}"
          name: "name"
        - expression:
          - "{}"
          - "{}"
          name: "name"
        description: "description"
        title: "title"
      - condition:
        - "{}"
        - "{}"
        effects:
        - "{}"
        - "{}"
        bindings:
        - expression:
          - "{}"
          - "{}"
          name: "name"
        - expression:
          - "{}"
          - "{}"
          name: "name"
        description: "description"
        title: "title"
      id: 6
      userId: 5
  Binding:
    type: "object"
    required:
    - "expression"
    - "name"
    properties:
      name:
        type: "string"
        description: "A descriptive name for the value to be bound."
      expression:
        type: "array"
        description: "A Talang expression that will be evaluated and its result attached\
          \ to the name of the binding."
        items:
          type: "object"
          properties: {}
    example:
      expression:
      - "{}"
      - "{}"
      name: "name"
  Rule:
    type: "object"
    required:
    - "condition"
    - "effects"
    - "title"
    properties:
      title:
        type: "string"
        description: "A short description of the rule."
      description:
        type: "string"
        description: "A longer, more detailed description of the rule."
      bindings:
        type: "array"
        description: "An array that provides objects with variable names (name) and\
          \ talang expressions to whose result they are bound (expression) during\
          \ rule evaluation. The order of the evaluation is decided by the position\
          \ in the array."
        items:
          $ref: "#/definitions/Binding"
      condition:
        type: "array"
        description: "A Talang expression that will be evaluated in the context of\
          \ the given event."
        items:
          type: "object"
          properties: {}
        minItems: 1
      effects:
        type: "array"
        description: "An array of effectful Talang expressions in arrays that will\
          \ be evaluated when a rule matches."
        items:
          type: "object"
          properties: {}
    example:
      condition:
      - "{}"
      - "{}"
      effects:
      - "{}"
      - "{}"
      bindings:
      - expression:
        - "{}"
        - "{}"
        name: "name"
      - expression:
        - "{}"
        - "{}"
        name: "name"
      description: "description"
      title: "title"
  LimitConfig:
    type: "object"
    required:
    - "action"
    - "entities"
    - "limit"
    properties:
      action:
        type: "string"
        description: "The limitable action to which this limit will be applied"
        enum:
        - "redeemCoupon"
        - "redeemReferral"
        - "setDiscount"
        - "createCoupon"
      limit:
        type: "number"
        description: "The value to set for the limit"
        minimum: 0
      entities:
        type: "array"
        description: "The entities that make the address of this limit"
        items:
          type: "string"
          enum:
          - "Coupon"
          - "Referral"
          - "Profile"
          - "Identifier"
    example:
      entities:
      - "Coupon"
      - "Coupon"
      limit: 0.59621339166831821554382031536079011857509613037109375
      action: "redeemCoupon"
  CampaignSet:
    type: "object"
    required:
    - "applicationId"
    - "created"
    - "id"
    - "set"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      set:
        $ref: "#/definitions/CampaignSetBranchNode"
    description: ""
    example:
      set:
        elements:
        - type: "type"
        - type: "type"
        name: "name"
        type: "SET"
        operator: "ALL"
      created: "2000-01-23T04:56:07.000+00:00"
      id: 0
      applicationId: 6
  CampaignSetNode:
    type: "object"
    required:
    - "type"
    properties:
      type:
        type: "string"
    example:
      type: "type"
  CampaignSetBranchNode:
    type: "object"
    required:
    - "elements"
    - "name"
    - "operator"
    - "type"
    properties:
      type:
        type: "string"
        description: "Indicates the node type"
        enum:
        - "SET"
      name:
        type: "string"
        description: "Name of the set"
      operator:
        type: "string"
        description: "How does the set operates on its elements"
        enum:
        - "ALL"
        - "FIRST"
      elements:
        type: "array"
        description: "Child elements of this set"
        items:
          $ref: "#/definitions/CampaignSetNode"
    example:
      elements:
      - type: "type"
      - type: "type"
      name: "name"
      type: "SET"
      operator: "ALL"
  CampaignSetLeafNode:
    type: "object"
    required:
    - "campaignId"
    - "type"
    properties:
      type:
        type: "string"
        description: "Indicates the node type"
        enum:
        - "CAMPAIGN"
      campaignId:
        type: "integer"
        description: "ID of the campaign"
  NewCampaignSet:
    type: "object"
    required:
    - "applicationId"
    - "set"
    properties:
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      set:
        $ref: "#/definitions/CampaignSetBranchNode"
    description: ""
    example:
      set:
        elements:
        - type: "type"
        - type: "type"
        name: "name"
        type: "SET"
        operator: "ALL"
      applicationId: 0
  NewReferral:
    type: "object"
    required:
    - "advocateProfileIntegrationId"
    - "campaignId"
    properties:
      campaignId:
        type: "integer"
        description: "ID of the campaign from which the referral received the referral\
          \ code."
        title: "Referral's Campaign ID"
      advocateProfileIntegrationId:
        type: "string"
        description: "The Integration Id of the Advocate's Profile"
        title: "Advocate's Profile id"
      friendProfileIntegrationId:
        type: "string"
        description: "An optional Integration ID of the Friend's Profile"
        title: "Friend's Profile ID"
      startDate:
        type: "string"
        format: "date-time"
        description: "Timestamp at which point the referral code becomes valid."
        title: "Referral code valid from"
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the referral code. Referral never expires if\
          \ this is omitted, zero, or negative."
        title: "Referral code valid until"
    example:
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      friendProfileIntegrationId: "friendProfileIntegrationId"
      campaignId: 0
      advocateProfileIntegrationId: "advocateProfileIntegrationId"
      startDate: "2000-01-23T04:56:07.000+00:00"
  Referral:
    type: "object"
    required:
    - "advocateProfileIntegrationId"
    - "campaignId"
    - "code"
    - "created"
    - "id"
    - "usageCounter"
    - "usageLimit"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      campaignId:
        type: "integer"
        description: "ID of the campaign from which the referral received the referral\
          \ code."
        title: "Referral's Campaign ID"
      advocateProfileIntegrationId:
        type: "string"
        description: "The Integration Id of the Advocate's Profile"
        title: "Advocate's Profile id"
      friendProfileIntegrationId:
        type: "string"
        description: "An optional Integration ID of the Friend's Profile"
        title: "Friend's Profile ID"
      startDate:
        type: "string"
        format: "date-time"
        description: "Timestamp at which point the referral code becomes valid."
        title: "Referral code valid from"
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the referral code. Referral never expires if\
          \ this is omitted, zero, or negative."
        title: "Referral code valid until"
      code:
        type: "string"
        description: "The actual referral code."
        title: "Referral code"
        minLength: 4
      usageCounter:
        type: "integer"
        description: "The number of times this referral code has been successfully\
          \ used."
        title: "Referral Code Usages"
      usageLimit:
        type: "integer"
        description: "The number of times a referral code can be used. This can be\
          \ set to 0 for no limit, but any campaign usage limits will still apply.\n"
        minimum: 0
    description: ""
    example:
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      code: "code"
      friendProfileIntegrationId: "friendProfileIntegrationId"
      created: "2000-01-23T04:56:07.000+00:00"
      campaignId: 6
      usageLimit: 0
      id: 0
      usageCounter: 1
      advocateProfileIntegrationId: "advocateProfileIntegrationId"
      startDate: "2000-01-23T04:56:07.000+00:00"
  AttributeQuery:
    type: "object"
  CouponSearch:
    type: "object"
    required:
    - "attributes"
    properties:
      attributes:
        type: "object"
        description: "Properties to match against a coupon. All provided attributes\
          \ will be exactly matched against attributes"
        properties: {}
    example:
      attributes: "{}"
  CampaignSearch:
    type: "object"
    required:
    - "attributes"
    properties:
      attributes:
        type: "object"
        description: "Properties to match against a campaign. All provided attributes\
          \ will be exactly matched against campaign attributes"
        properties: {}
    example:
      attributes: "{}"
  CampaignCopy:
    type: "object"
    required:
    - "applicationIds"
    properties:
      name:
        type: "string"
        description: "Name of the copied campaign (Defaults to \"Copy of original\
          \ campaign name\")"
      applicationIds:
        type: "array"
        description: "Application IDs of the applications to which a campaign should\
          \ be copied to"
        items:
          type: "string"
    example:
      name: "name"
      applicationIds:
      - "applicationIds"
      - "applicationIds"
  NewCoupons:
    type: "object"
    required:
    - "couponPattern"
    - "numberOfCoupons"
    - "usageLimit"
    - "validCharacters"
    properties:
      usageLimit:
        type: "integer"
        description: "The number of times a coupon code can be redeemed. This can\
          \ be set to 0 for no limit, but any campaign usage limits will still apply.\n"
        minimum: 0
        maximum: 999999
      startDate:
        type: "string"
        format: "date-time"
        description: "Timestamp at which point the coupon becomes valid."
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the coupon. Coupon never expires if this is omitted,\
          \ zero, or negative."
      validCharacters:
        type: "array"
        description: "Set of characters to be used when generating random part of\
          \ code. Defaults to [A-Z, 0-9] (in terms of RegExp)."
        items:
          type: "string"
      couponPattern:
        type: "string"
        description: "The pattern that will be used to generate coupon codes. The\
          \ character `#` acts as a placeholder and will be replaced by a random character\
          \ from the `validCharacters` set.\n"
        minLength: 3
      numberOfCoupons:
        type: "integer"
        description: "The number of new coupon codes to generate for the campaign.\
          \ Must be at least 1."
      uniquePrefix:
        type: "string"
        description: "A unique prefix to prepend to all generated coupons."
        title: "Coupon code unique prefix"
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        properties: {}
      recipientIntegrationId:
        type: "string"
        description: "The integration ID for this coupon's beneficiary's profile"
        title: "Receiving customer profile integration ID"
    description: ""
    example:
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      recipientIntegrationId: "recipientIntegrationId"
      uniquePrefix: "uniquePrefix"
      couponPattern: "couponPattern"
      validCharacters:
      - "validCharacters"
      - "validCharacters"
      usageLimit: 80082
      numberOfCoupons: 6
      attributes: "{}"
      startDate: "2000-01-23T04:56:07.000+00:00"
  UpdateCoupon:
    type: "object"
    properties:
      usageLimit:
        type: "integer"
        description: "The number of times a coupon code can be redeemed. This can\
          \ be set to 0 for no limit, but any campaign usage limits will still apply.\n"
        minimum: 0
        maximum: 999999
      startDate:
        type: "string"
        format: "date-time"
        description: "Timestamp at which point the coupon becomes valid."
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the coupon. Coupon never expires if this is omitted,\
          \ zero, or negative."
      recipientIntegrationId:
        type: "string"
        description: "The integration ID for this coupon's beneficiary's profile"
        title: "Receiving customer profile integration ID"
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        properties: {}
    description: ""
    example:
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      recipientIntegrationId: "recipientIntegrationId"
      usageLimit: 80082
      attributes: "{}"
      startDate: "2000-01-23T04:56:07.000+00:00"
  UpdateCouponBatch:
    type: "object"
    required:
    - "batchID"
    properties:
      usageLimit:
        type: "integer"
        description: "The number of times a coupon code can be redeemed. This can\
          \ be set to 0 for no limit, but any campaign usage limits will still apply.\n"
        minimum: 0
        maximum: 999999
      startDate:
        type: "string"
        format: "date-time"
        description: "Timestamp at which point the coupon becomes valid."
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the coupon. Coupon never expires if this is omitted,\
          \ zero, or negative."
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        properties: {}
      batchID:
        type: "string"
        description: "The id of the batch the coupon belongs to."
        title: "Batch ID"
    description: ""
    example:
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      usageLimit: 80082
      attributes: "{}"
      batchID: "batchID"
      startDate: "2000-01-23T04:56:07.000+00:00"
  Coupon:
    type: "object"
    required:
    - "campaignId"
    - "created"
    - "id"
    - "usageCounter"
    - "usageLimit"
    - "value"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      campaignId:
        type: "integer"
        description: "The ID of the campaign that owns this entity."
        title: "Campaign ID"
      value:
        type: "string"
        description: "The actual coupon code."
        title: "Coupon Code"
        minLength: 4
      usageLimit:
        type: "integer"
        description: "The number of times a coupon code can be redeemed. This can\
          \ be set to 0 for no limit, but any campaign usage limits will still apply.\n"
        minimum: 0
        maximum: 999999
      startDate:
        type: "string"
        format: "date-time"
        description: "Timestamp at which point the coupon becomes valid."
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the coupon. Coupon never expires if this is omitted,\
          \ zero, or negative."
      usageCounter:
        type: "integer"
        description: "The number of times this coupon has been successfully used."
        title: "Number of coupon usages"
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        title: "Attributes of coupon"
        properties: {}
      referralId:
        type: "integer"
        description: "The integration ID of the referring customer (if any) for whom\
          \ this coupon was created as an effect."
        title: "Advocate ID"
      recipientIntegrationId:
        type: "string"
        description: "The integration ID of a referred customer profile."
        title: "Friend ID"
      importId:
        type: "integer"
        description: "The ID of the Import which created this coupon."
        title: "Import ID"
      reservation:
        type: "boolean"
        description: "This value controls what reservations mean to a coupon. If set\
          \ to true the coupon reservation is used to mark it as a favourite, if set\
          \ to false the coupon reservation is used as a requirement of usage. This\
          \ value defaults to true if not specified."
        title: "reservation status"
      batchId:
        type: "string"
        description: "The id of the batch the coupon belongs to."
        title: "Batch ID"
    description: ""
    example:
      recipientIntegrationId: "recipientIntegrationId"
      created: "2000-01-23T04:56:07.000+00:00"
      campaignId: 6
      usageLimit: 146581
      referralId: 5
      usageCounter: 5
      batchId: "batchId"
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      importId: 2
      reservation: true
      attributes: "{}"
      id: 0
      value: "value"
      startDate: "2000-01-23T04:56:07.000+00:00"
  CampaignAnalytics:
    type: "object"
    required:
    - "campaignDiscountCosts"
    - "campaignFreeItems"
    - "campaignRevenue"
    - "couponRedemptions"
    - "couponsCreated"
    - "date"
    - "referralRedemptions"
    - "referralsCreated"
    - "totalCampaignDiscountCosts"
    - "totalCampaignFreeItems"
    - "totalCampaignRevenue"
    - "totalCouponRedemptions"
    - "totalCouponsCreated"
    - "totalReferralRedemptions"
    - "totalReferralsCreated"
    properties:
      date:
        type: "string"
        format: "date-time"
      campaignRevenue:
        type: "number"
        description: "Amount of revenue in this campaign."
      totalCampaignRevenue:
        type: "number"
        description: "Amount of revenue in this campaign since it began."
      campaignDiscountCosts:
        type: "number"
        description: "Amount of cost caused by discounts given in the campaign."
      totalCampaignDiscountCosts:
        type: "number"
        description: "Amount of cost caused by discounts given in the campaign since\
          \ it began."
      campaignFreeItems:
        type: "integer"
        description: "Amount of free items given in the campaign."
      totalCampaignFreeItems:
        type: "integer"
        description: "Amount of free items given in the campaign since it began."
      couponRedemptions:
        type: "integer"
        description: "Number of coupon redemptions in the campaign (only accepted\
          \ referrals on sessions that were closed are considered)."
      totalCouponRedemptions:
        type: "integer"
        description: "Number of coupon redemptions in the campaign since it began."
      referralRedemptions:
        type: "integer"
        description: "Number of referral redemptions in the campaign."
      totalReferralRedemptions:
        type: "integer"
        description: "Number of referral redemptions in the campaign since it began."
      couponsCreated:
        type: "integer"
        description: "Number of coupons created in the campaign by the rule engine."
      totalCouponsCreated:
        type: "integer"
        description: "Number of coupons created in the campaign by the rule engine\
          \ since it began."
      referralsCreated:
        type: "integer"
        description: "Number of referrals created in the campaign by the rule engine."
      totalReferralsCreated:
        type: "integer"
        description: "Number of referrals created in the campaign by the rule engine\
          \ since it began."
    description: ""
    example:
      date: "2000-01-23T04:56:07.000+00:00"
      campaignFreeItems: 2
      totalCampaignFreeItems: 7
      couponRedemptions: 9
      totalCampaignDiscountCosts: 5.63737665663332876420099637471139430999755859375
      referralRedemptions: 2
      totalCampaignRevenue: 1.46581298050294517310021547018550336360931396484375
      campaignRevenue: 6.02745618307040320615897144307382404804229736328125
      campaignDiscountCosts: 5.962133916683182377482808078639209270477294921875
      totalCouponsCreated: 1
      totalCouponRedemptions: 3
      totalReferralRedemptions: 4
      couponsCreated: 7
      referralsCreated: 1
      totalReferralsCreated: 1
  ApplicationApiHealth:
    type: "object"
    required:
    - "lastUsed"
    - "summary"
    properties:
      summary:
        type: "string"
        description: "One-word summary of the health of the API connection of an application"
        enum:
        - "OK"
        - "WARNING"
        - "ERROR"
        - "CRITICAL"
        - "NONE"
      lastUsed:
        type: "string"
        format: "date-time"
        description: "time of last request relevant to the API health test"
    description: "Report of health of the API connection of an application"
    example:
      summary: "OK"
      lastUsed: "2000-01-23T04:56:07.000+00:00"
  AccessLogEntry:
    type: "object"
    required:
    - "method"
    - "requestPayload"
    - "requestUri"
    - "responsePayload"
    - "status"
    - "time"
    - "uuid"
    properties:
      uuid:
        type: "string"
        description: "UUID reference of request"
      status:
        type: "integer"
        description: "HTTP status code of response"
      method:
        type: "string"
        description: "HTTP method of request"
      requestUri:
        type: "string"
        description: "target URI of request"
      time:
        type: "string"
        format: "date-time"
        description: "timestamp of request"
      requestPayload:
        type: "string"
        description: "payload of request"
      responsePayload:
        type: "string"
        description: "payload of response"
    description: "Log of application accesses"
    example:
      method: "method"
      requestPayload: "requestPayload"
      responsePayload: "responsePayload"
      requestUri: "requestUri"
      time: "2000-01-23T04:56:07.000+00:00"
      uuid: "uuid"
      status: 6
  WebhookLogEntry:
    type: "object"
    required:
    - "id"
    - "integrationRequestUuid"
    - "request"
    - "requestTime"
    - "url"
    - "webhookId"
    properties:
      id:
        type: "string"
        description: "UUID reference of the webhook request"
      integrationRequestUuid:
        type: "string"
        description: "UUID reference of the integration request linked to this webhook\
          \ request"
      webhookId:
        type: "integer"
        description: "ID of the webhook that triggered the request"
      applicationId:
        type: "integer"
        description: "ID of the application that triggered the webhook"
      url:
        type: "string"
        description: "Target url of request"
      request:
        type: "string"
        description: "Request message"
      response:
        type: "string"
        description: "Response message"
      status:
        type: "integer"
        description: "HTTP status code of response"
      requestTime:
        type: "string"
        format: "date-time"
        description: "Timestamp of request"
      responseTime:
        type: "string"
        format: "date-time"
        description: "Timestamp of response"
    description: "Log of webhook api calls"
    example:
      requestTime: "2000-01-23T04:56:07.000+00:00"
      request: "request"
      webhookId: 6
      response: "response"
      responseTime: "2000-01-23T04:56:07.000+00:00"
      integrationRequestUuid: "integrationRequestUuid"
      id: "id"
      applicationId: 1
      url: "url"
      status: 5
  WebhookActivationLogEntry:
    type: "object"
    required:
    - "applicationId"
    - "campaignId"
    - "created"
    - "integrationRequestUuid"
    - "webhookId"
    properties:
      integrationRequestUuid:
        type: "string"
        description: "UUID reference of the integration request that triggered the\
          \ effect with the webhook"
      webhookId:
        type: "integer"
        description: "ID of the webhook that triggered the request"
      applicationId:
        type: "integer"
        description: "ID of the application that triggered the webhook"
      campaignId:
        type: "integer"
        description: "ID of the campaign that triggered the webhook"
      created:
        type: "string"
        format: "date-time"
        description: "Timestamp of request"
    description: "Log of activated webhooks"
    example:
      webhookId: 6
      campaignId: 5
      created: "2000-01-23T04:56:07.000+00:00"
      integrationRequestUuid: "integrationRequestUuid"
      applicationId: 1
  User:
    type: "object"
    required:
    - "accountId"
    - "created"
    - "email"
    - "id"
    - "inviteToken"
    - "modified"
    - "name"
    - "policy"
    - "releaseUpdate"
    - "state"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      modified:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was last modified."
      email:
        type: "string"
        format: "email"
        description: "The email address associated with your account."
      accountId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      inviteToken:
        type: "string"
        description: "Invite token, empty if the user as already accepted their invite."
      state:
        type: "string"
        description: "Current user state."
        enum:
        - "invited"
        - "active"
        - "deactivated"
      name:
        type: "string"
        description: "Full name"
      policy:
        type: "string"
        format: "acl"
        description: "A blob of ACL JSON"
      releaseUpdate:
        type: "boolean"
        description: "Update the user via email"
      latestFeature:
        type: "string"
        description: "Latest feature the user has been notified."
      roles:
        type: "array"
        description: "Contains a list of all roles a user is a memeber of"
        items:
          type: "integer"
    description: ""
    example:
      accountId: 1
      inviteToken: "inviteToken"
      releaseUpdate: true
      created: "2000-01-23T04:56:07.000+00:00"
      roles:
      - 5
      - 5
      name: "name"
      modified: "2000-01-23T04:56:07.000+00:00"
      id: 6
      state: "invited"
      latestFeature: "latestFeature"
      email: "email"
      policy: "policy"
  NewInvitation:
    type: "object"
    required:
    - "acl"
    - "email"
    properties:
      name:
        type: "string"
        description: "Name of the user being invited."
      email:
        type: "string"
        format: "email"
      acl:
        type: "string"
        description: "a blob of acl json"
      roles:
        type: "array"
        description: "An array of roleIDs to assign the new user to"
        items:
          type: "integer"
    description: "Parameters for inviting a new user"
  Change:
    type: "object"
    required:
    - "created"
    - "entity"
    - "id"
    - "userId"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      userId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      entity:
        type: "string"
        description: "API endpoint on which the change was initiated."
      old:
        type: "object"
        description: "Resource before the change occured."
        properties: {}
      new:
        type: "object"
        description: "Resource after the change occured."
        properties: {}
    description: ""
    example:
      new: "{}"
      created: "2000-01-23T04:56:07.000+00:00"
      old: "{}"
      id: 6
      userId: 1
      entity: "entity"
  LoyaltyPoints:
    type: "object"
    required:
    - "points"
    properties:
      points:
        type: "number"
        description: "Amount of loyalty points"
      name:
        type: "string"
        description: "Allows to specify a name for the addition or deduction"
      expiryDuration:
        type: "string"
        description: "Indicates the duration after which the added loyalty points\
          \ should expire. The format is a number followed by one letter indicating\
          \ the unit, like '1h' or '40m' or '30d'."
      subLedgerID:
        type: "string"
        description: "This specifies if we are adding loyalty points to the main ledger\
          \ or a subledger"
    description: "Points to add or deduct"
    example:
      name: "name"
      subLedgerID: "subLedgerID"
      expiryDuration: "expiryDuration"
      points: 0.80082819046101150206595775671303272247314453125
  LoyaltyProgram:
    type: "object"
    required:
    - "accountID"
    - "allowSubledger"
    - "defaultValidity"
    - "description"
    - "id"
    - "name"
    - "subscribedApplications"
    - "title"
    properties:
      id:
        type: "integer"
        description: "The ID of loyalty program."
      accountID:
        type: "integer"
        description: "The ID of the Talon.One account that owns this program."
      name:
        type: "string"
        description: "The internal name for the Loyalty Program."
      title:
        type: "string"
        description: "The display title for the Loyalty Program."
      description:
        type: "string"
        description: "Description of our Loyalty Program."
      subscribedApplications:
        type: "array"
        description: "A list containing the IDs of all applications that are subscribed\
          \ to this Loyalty Program."
        items:
          type: "integer"
      defaultValidity:
        type: "string"
        description: "Indicates the default duration after which new loyalty points\
          \ should expire. The format is a number, followed by one letter indicating\
          \ the unit; like '1h' or '40m' or '30d'."
      allowSubledger:
        type: "boolean"
        description: "Indicates if this program supports subledgers inside the program"
    description: "A Loyalty Program"
    example:
      accountID: 2
      defaultValidity: "defaultValidity"
      allowSubledger: true
      name: "name"
      description: "description"
      id: 5
      title: "title"
      subscribedApplications:
      - 7
      - 7
  NewLoyaltyProgram:
    type: "object"
    required:
    - "allowSubledger"
    - "defaultValidity"
    - "name"
    - "title"
    properties:
      name:
        type: "string"
        description: "The internal name for the Loyalty Program. This is an immutable\
          \ value."
      title:
        type: "string"
        description: "The display title for the Loyalty Program."
      description:
        type: "string"
        description: "Description of our Loyalty Program."
      subscribedApplications:
        type: "array"
        description: "A list containing the IDs of all applications that are subscribed\
          \ to this Loyalty Program."
        items:
          type: "integer"
      defaultValidity:
        type: "string"
        description: "Indicates the default duration after which new loyalty points\
          \ should expire. The format is a number, followed by one letter indicating\
          \ the unit; like '1h' or '40m' or '30d'."
      allowSubledger:
        type: "boolean"
        description: "Indicates if this program supports subledgers inside the program"
    description: "A new loyalty program"
  UpdateLoyaltyProgram:
    type: "object"
    properties:
      title:
        type: "string"
        description: "The display title for the Loyalty Program."
      description:
        type: "string"
        description: "Description of our Loyalty Program."
      subscribedApplications:
        type: "array"
        description: "A list containing the IDs of all applications that are subscribed\
          \ to this Loyalty Program."
        items:
          type: "integer"
      defaultValidity:
        type: "string"
        description: "Indicates the default duration after which new loyalty points\
          \ should expire. The format is a number, followed by one letter indicating\
          \ the unit; like '1h' or '40m' or '30d'."
      allowSubledger:
        type: "boolean"
        description: "Indicates if this program supports subledgers inside the program"
    description: "Update Loyalty Program"
  LoyaltyLedgerEntry:
    type: "object"
    required:
    - "amount"
    - "created"
    - "customerProfileID"
    - "name"
    - "programID"
    - "subLedgerID"
    - "type"
    properties:
      created:
        type: "string"
        format: "date-time"
      programID:
        type: "integer"
      customerProfileID:
        type: "string"
      customerSessionID:
        type: "string"
      eventID:
        type: "integer"
      type:
        type: "string"
        enum:
        - "addition"
        - "subtraction"
      amount:
        type: "number"
      expiryDate:
        type: "string"
        format: "date-time"
      name:
        type: "string"
        description: "A name referencing the condition or effect that added this entry,\
          \ or the specific name provided in an API call."
      subLedgerID:
        type: "string"
        description: "This specifies if we are adding loyalty points to the main ledger\
          \ or a subledger"
    description: "A single row of the ledger, describing one addition or deduction."
    example:
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      eventID: 1
      amount: 5.962133916683182377482808078639209270477294921875
      customerProfileID: "customerProfileID"
      created: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      subLedgerID: "subLedgerID"
      customerSessionID: "customerSessionID"
      type: "addition"
      programID: 6
  LoyaltyLedger:
    type: "object"
    required:
    - "ledger"
    properties:
      ledger:
        description: "The balance of the main ledger in the loyalty program"
        title: "Customer's current loyalty program balance."
        $ref: "#/definitions/LoyaltySubLedger"
      subLedgers:
        type: "object"
        description: "A map containing a list of all loyalty subledger balances"
        additionalProperties:
          $ref: "#/definitions/LoyaltySubLedger"
    description: "Ledger of Balance in Loyalty Program for a Customer"
    example:
      ledger:
        total: 0.80082819046101150206595775671303272247314453125
        expiringPoints:
        - expiryDate: "2000-01-23T04:56:07.000+00:00"
          eventID: 1
          amount: 5.962133916683182377482808078639209270477294921875
          customerProfileID: "customerProfileID"
          created: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          subLedgerID: "subLedgerID"
          customerSessionID: "customerSessionID"
          type: "addition"
          programID: 6
        - expiryDate: "2000-01-23T04:56:07.000+00:00"
          eventID: 1
          amount: 5.962133916683182377482808078639209270477294921875
          customerProfileID: "customerProfileID"
          created: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          subLedgerID: "subLedgerID"
          customerSessionID: "customerSessionID"
          type: "addition"
          programID: 6
        transactions:
        - expiryDate: "2000-01-23T04:56:07.000+00:00"
          eventID: 1
          amount: 5.962133916683182377482808078639209270477294921875
          customerProfileID: "customerProfileID"
          created: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          subLedgerID: "subLedgerID"
          customerSessionID: "customerSessionID"
          type: "addition"
          programID: 6
        - expiryDate: "2000-01-23T04:56:07.000+00:00"
          eventID: 1
          amount: 5.962133916683182377482808078639209270477294921875
          customerProfileID: "customerProfileID"
          created: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          subLedgerID: "subLedgerID"
          customerSessionID: "customerSessionID"
          type: "addition"
          programID: 6
      subLedgers:
        key:
          total: 0.80082819046101150206595775671303272247314453125
          expiringPoints:
          - expiryDate: "2000-01-23T04:56:07.000+00:00"
            eventID: 1
            amount: 5.962133916683182377482808078639209270477294921875
            customerProfileID: "customerProfileID"
            created: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            subLedgerID: "subLedgerID"
            customerSessionID: "customerSessionID"
            type: "addition"
            programID: 6
          - expiryDate: "2000-01-23T04:56:07.000+00:00"
            eventID: 1
            amount: 5.962133916683182377482808078639209270477294921875
            customerProfileID: "customerProfileID"
            created: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            subLedgerID: "subLedgerID"
            customerSessionID: "customerSessionID"
            type: "addition"
            programID: 6
          transactions:
          - expiryDate: "2000-01-23T04:56:07.000+00:00"
            eventID: 1
            amount: 5.962133916683182377482808078639209270477294921875
            customerProfileID: "customerProfileID"
            created: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            subLedgerID: "subLedgerID"
            customerSessionID: "customerSessionID"
            type: "addition"
            programID: 6
          - expiryDate: "2000-01-23T04:56:07.000+00:00"
            eventID: 1
            amount: 5.962133916683182377482808078639209270477294921875
            customerProfileID: "customerProfileID"
            created: "2000-01-23T04:56:07.000+00:00"
            name: "name"
            subLedgerID: "subLedgerID"
            customerSessionID: "customerSessionID"
            type: "addition"
            programID: 6
  LoyaltySubLedger:
    type: "object"
    required:
    - "total"
    properties:
      total:
        type: "number"
        title: "Current Balance"
      transactions:
        type: "array"
        description: "Transactions contains a list of all events that have happened\
          \ such as additions, subtractions and expiries"
        items:
          $ref: "#/definitions/LoyaltyLedgerEntry"
      expiringPoints:
        type: "array"
        description: "ExpiringPoints contains a list of all points that will expiry\
          \ and when"
        items:
          $ref: "#/definitions/LoyaltyLedgerEntry"
    description: "Ledger of Balance in Loyalty Program for a Customer"
    example:
      total: 0.80082819046101150206595775671303272247314453125
      expiringPoints:
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        eventID: 1
        amount: 5.962133916683182377482808078639209270477294921875
        customerProfileID: "customerProfileID"
        created: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        subLedgerID: "subLedgerID"
        customerSessionID: "customerSessionID"
        type: "addition"
        programID: 6
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        eventID: 1
        amount: 5.962133916683182377482808078639209270477294921875
        customerProfileID: "customerProfileID"
        created: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        subLedgerID: "subLedgerID"
        customerSessionID: "customerSessionID"
        type: "addition"
        programID: 6
      transactions:
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        eventID: 1
        amount: 5.962133916683182377482808078639209270477294921875
        customerProfileID: "customerProfileID"
        created: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        subLedgerID: "subLedgerID"
        customerSessionID: "customerSessionID"
        type: "addition"
        programID: 6
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        eventID: 1
        amount: 5.962133916683182377482808078639209270477294921875
        customerProfileID: "customerProfileID"
        created: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        subLedgerID: "subLedgerID"
        customerSessionID: "customerSessionID"
        type: "addition"
        programID: 6
  Loyalty:
    type: "object"
    required:
    - "programs"
    properties:
      programs:
        type: "object"
        description: "A map holding information about the loyalty programs balance"
        title: "Customer's current loyalty program balance."
        additionalProperties:
          $ref: "#/definitions/LoyaltyProgramLedgers"
    description: "Customer specific information about loyalty points."
    example:
      programs:
        key:
          ledger:
            currentBalance: 6.96511769763884558415156789124011993408203125
          subLedgers:
            key:
              currentBalance: 6.96511769763884558415156789124011993408203125
          name: "name"
          title: "title"
  LoyaltyProgramLedgers:
    type: "object"
    required:
    - "ledger"
    - "name"
    - "title"
    properties:
      title:
        type: "string"
        description: "Visable name of loyalty program"
      name:
        type: "string"
        description: "Internal name of loyalty program"
      ledger:
        description: "The balance of the main ledger in the loyalty program"
        title: "Customer's current loyalty program balance."
        $ref: "#/definitions/LoyaltyProgramBalance"
      subLedgers:
        type: "object"
        description: "A map containing a list of all loyalty subledger balances"
        additionalProperties:
          $ref: "#/definitions/LoyaltyProgramBalance"
    description: "Customer specific information about loyalty points."
    example:
      ledger:
        currentBalance: 6.96511769763884558415156789124011993408203125
      subLedgers:
        key:
          currentBalance: 6.96511769763884558415156789124011993408203125
      name: "name"
      title: "title"
  LoyaltyProgramBalance:
    type: "object"
    required:
    - "currentBalance"
    properties:
      currentBalance:
        type: "number"
        title: "Current Balance"
    description: "The balance in a Loyalty Program for some Customer."
    example:
      currentBalance: 6.96511769763884558415156789124011993408203125
  CustomerProfileSearchQuery:
    type: "object"
    properties:
      attributes:
        type: "object"
        description: "Properties to match against a customer profile. All provided\
          \ attributes will be exactly matched against profile attributes"
        properties: {}
      integrationIDs:
        type: "array"
        items:
          type: "string"
      profileIDs:
        type: "array"
        items:
          type: "integer"
  ApplicationCustomerSearch:
    type: "object"
    properties:
      attributes:
        type: "object"
        description: "Properties to match against a customer profile. All provided\
          \ attributes will be exactly matched against profile attributes"
        properties: {}
      integrationIDs:
        type: "array"
        items:
          type: "string"
      profileIDs:
        type: "array"
        items:
          type: "integer"
    example:
      integrationIDs:
      - "integrationIDs"
      - "integrationIDs"
      profileIDs:
      - 0
      - 0
      attributes: "{}"
  NewCustomerProfile:
    type: "object"
    properties:
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        properties: {}
    example:
      attributes: "{}"
  CustomerProfile:
    type: "object"
    required:
    - "accountId"
    - "attributes"
    - "closedSessions"
    - "created"
    - "integrationId"
    - "lastActivity"
    - "totalSales"
    properties:
      integrationId:
        type: "string"
        format: "string"
        description: "The ID used for this entity in the application system."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        properties: {}
      accountId:
        type: "integer"
        description: "The ID of the Talon.One account that owns this profile."
        title: "Profile belongs to Account"
      closedSessions:
        type: "integer"
        description: "The total amount of closed sessions by a customer. A closed\
          \ session is a successful purchase."
        title: "Closed sessions"
      totalSales:
        type: "number"
        description: "Sum of all purchases made by this customer"
        title: "Total Sales"
      loyaltyMemberships:
        type: "array"
        description: "A list of loyalty programs joined by the customer"
        title: "Loyalty programed joined"
        items:
          $ref: "#/definitions/LoyaltyMembership"
      lastActivity:
        type: "string"
        format: "date-time"
        description: "Timestamp of the most recent event received from this customer"
        title: "Last activity of customer"
    description: ""
    example:
      accountId: 1
      closedSessions: 1
      created: "2000-01-23T04:56:07.000+00:00"
      integrationId: "integrationId"
      attributes: "{}"
      totalSales: 6.8468526983526398765889098285697400569915771484375
      lastActivity: "2000-01-23T04:56:07.000+00:00"
      loyaltyMemberships:
      - joined: "2000-01-23T04:56:07.000+00:00"
        loyaltyProgramId: 7
      - joined: "2000-01-23T04:56:07.000+00:00"
        loyaltyProgramId: 7
  NewCustomerSession:
    type: "object"
    properties:
      profileId:
        type: "string"
        description: "ID of the customers profile as used within this Talon.One account.\
          \ May be omitted or set to the empty string if the customer does not yet\
          \ have a known profile ID."
      coupon:
        type: "string"
        description: "Any coupon code entered."
        title: "Coupon entered in session"
      referral:
        type: "string"
        description: "Any referral code entered."
        title: "Referral code entered in session"
      state:
        type: "string"
        description: "Indicates the current state of the session. All sessions must\n\
          start in the \"open\" state, after which valid transitions are...\n\n1.\
          \ open -> closed\n2. open -> cancelled\n3. closed -> cancelled\n"
        title: "Customer's session state"
        default: "open"
        enum:
        - "open"
        - "closed"
        - "cancelled"
      cartItems:
        type: "array"
        description: "Serialized JSON representation."
        title: "Items in customer's cart"
        items:
          $ref: "#/definitions/CartItem"
      identifiers:
        type: "array"
        description: "Identifiers for the customer, this can be used for limits on\
          \ values such as device ID."
        items:
          type: "string"
      total:
        type: "number"
        description: "The total sum of the cart in one session."
        title: "Session Total"
      attributes:
        type: "object"
        description: "A key-value map of the sessions attributes. The potentially\
          \ valid attributes are configured in your accounts developer settings.\n"
        properties: {}
    description: ""
    example:
      total: 0.80082819046101150206595775671303272247314453125
      referral: "referral"
      coupon: "coupon"
      profileId: "profileId"
      identifiers:
      - "identifiers"
      - "identifiers"
      attributes: "{}"
      state: "open"
      cartItems:
      - quantity: 1
        price: 1.46581298050294517310021547018550336360931396484375
        name: "name"
        width: 2.3021358869347654518833223846741020679473876953125
        length: 7.061401241503109105224211816675961017608642578125
        weight: 5.962133916683182377482808078639209270477294921875
        attributes: "{}"
        adjustment:
          pointPayment: 1
          remainingPrice: 0.4145608029883935952142337555414997041225433349609375
          payFromLoyaltyProgram: 3
        position: 9.301444243932575517419536481611430644989013671875
        sku: "sku"
        category: "category"
        height: 5.63737665663332876420099637471139430999755859375
      - quantity: 1
        price: 1.46581298050294517310021547018550336360931396484375
        name: "name"
        width: 2.3021358869347654518833223846741020679473876953125
        length: 7.061401241503109105224211816675961017608642578125
        weight: 5.962133916683182377482808078639209270477294921875
        attributes: "{}"
        adjustment:
          pointPayment: 1
          remainingPrice: 0.4145608029883935952142337555414997041225433349609375
          payFromLoyaltyProgram: 3
        position: 9.301444243932575517419536481611430644989013671875
        sku: "sku"
        category: "category"
        height: 5.63737665663332876420099637471139430999755859375
  CustomerAnalytics:
    type: "object"
    required:
    - "acceptedCoupons"
    - "createdCoupons"
    - "freeItems"
    - "totalDiscountedOrders"
    - "totalDiscounts"
    - "totalOrders"
    - "totalRevenue"
    properties:
      acceptedCoupons:
        type: "integer"
        description: "Total accepted coupons for this customer"
      createdCoupons:
        type: "integer"
        description: "Total created coupons for this customer"
      freeItems:
        type: "integer"
        description: "Total free items given to this customer"
      totalOrders:
        type: "integer"
        description: "Total orders made by this customer"
      totalDiscountedOrders:
        type: "integer"
        description: "Total orders made by this customer that had a discount"
      totalRevenue:
        type: "number"
        description: "Total Revenue across all closed sessions"
      totalDiscounts:
        type: "number"
        description: "The sum of discounts that were given across all closed sessions"
    description: ""
    example:
      freeItems: 1
      acceptedCoupons: 0
      totalDiscounts: 7.061401241503109105224211816675961017608642578125
      totalDiscountedOrders: 5
      totalOrders: 5
      totalRevenue: 2.3021358869347654518833223846741020679473876953125
      createdCoupons: 6
  CustomerActivityReport:
    type: "object"
    required:
    - "accruedDiscounts"
    - "accruedRevenue"
    - "campaignName"
    - "couponFailedAttempts"
    - "couponRedemptions"
    - "couponUseAttempts"
    - "created"
    - "customerId"
    - "integrationId"
    - "name"
    - "totalOrders"
    - "totalOrdersNoCoupon"
    properties:
      integrationId:
        type: "string"
        format: "string"
        description: "The ID used for this entity in the application system."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      name:
        type: "string"
        description: "The name for this customer profile."
      customerId:
        type: "integer"
        description: "The internal Talon.One ID of the customer."
      lastActivity:
        type: "string"
        format: "date-time"
        description: "The last activity of the customer."
      couponRedemptions:
        type: "integer"
        description: "Number of coupon redemptions in all customer campaigns."
      couponUseAttempts:
        type: "integer"
        description: "Number of coupon use attempts in all customer campaigns."
      couponFailedAttempts:
        type: "integer"
        description: "Number of failed coupon use attempts in all customer campaigns."
      accruedDiscounts:
        type: "number"
        description: "Number of accrued discounts in all customer campaigns."
      accruedRevenue:
        type: "number"
        description: "Amount of accrued revenue in all customer campaigns."
      totalOrders:
        type: "integer"
        description: "Number of orders in all customer campaigns."
      totalOrdersNoCoupon:
        type: "integer"
        description: "Number of orders without coupon used in all customer campaigns."
      campaignName:
        type: "string"
        description: "The name of the campaign this customer belongs to."
    description: ""
    example:
      couponUseAttempts: 5
      created: "2000-01-23T04:56:07.000+00:00"
      totalOrdersNoCoupon: 3
      integrationId: "integrationId"
      couponRedemptions: 1
      couponFailedAttempts: 5
      accruedRevenue: 7.061401241503109105224211816675961017608642578125
      name: "name"
      customerId: 6
      lastActivity: "2000-01-23T04:56:07.000+00:00"
      totalOrders: 9
      campaignName: "campaignName"
      accruedDiscounts: 2.3021358869347654518833223846741020679473876953125
  CustomerSession:
    type: "object"
    required:
    - "applicationId"
    - "attributes"
    - "cartItems"
    - "coupon"
    - "created"
    - "discounts"
    - "firstSession"
    - "integrationId"
    - "profileId"
    - "referral"
    - "state"
    - "total"
    properties:
      integrationId:
        type: "string"
        format: "string"
        description: "The ID used for this entity in the application system."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      profileId:
        type: "string"
        description: "ID of the customers profile as used within this Talon.One account.\
          \ May be omitted or set to the empty string if the customer does not yet\
          \ have a known profile ID."
      coupon:
        type: "string"
        description: "Any coupon code entered."
        title: "Coupon entered in session"
      referral:
        type: "string"
        description: "Any referral code entered."
        title: "Referral code entered in session"
      state:
        type: "string"
        description: "Indicates the current state of the session. All sessions must\n\
          start in the \"open\" state, after which valid transitions are...\n\n1.\
          \ open -> closed\n2. open -> cancelled\n3. closed -> cancelled\n"
        title: "Customer's session state"
        default: "open"
        enum:
        - "open"
        - "closed"
        - "cancelled"
      cartItems:
        type: "array"
        description: "Serialized JSON representation."
        title: "Items in customer's cart"
        items:
          $ref: "#/definitions/CartItem"
      identifiers:
        type: "array"
        description: "Identifiers for the customer, this can be used for limits on\
          \ values such as device ID."
        items:
          type: "string"
      total:
        type: "number"
        description: "The total sum of the cart in one session."
        title: "Session Total"
      attributes:
        type: "object"
        description: "A key-value map of the sessions attributes. The potentially\
          \ valid attributes are configured in your accounts developer settings.\n"
        properties: {}
      firstSession:
        type: "boolean"
        description: "Indicates whether this is the first session for the customer's\
          \ profile. Will always be true for anonymous sessions."
        title: "First session ever?"
      discounts:
        type: "object"
        description: "A map of labelled discount values, values will be in the same\
          \ currency as the application associated with the session."
        title: "Customer's current discounts"
        additionalProperties:
          type: "number"
    description: ""
    example:
      coupon: "coupon"
      created: "2000-01-23T04:56:07.000+00:00"
      identifiers:
      - "identifiers"
      - "identifiers"
      integrationId: "integrationId"
      total: 7.3862819483858839220147274318151175975799560546875
      referral: "referral"
      discounts:
        key: 1.231513536777255612975068288506008684635162353515625
      profileId: "profileId"
      attributes: "{}"
      state: "open"
      applicationId: 0
      cartItems:
      - quantity: 1
        price: 1.46581298050294517310021547018550336360931396484375
        name: "name"
        width: 2.3021358869347654518833223846741020679473876953125
        length: 7.061401241503109105224211816675961017608642578125
        weight: 5.962133916683182377482808078639209270477294921875
        attributes: "{}"
        adjustment:
          pointPayment: 1
          remainingPrice: 0.4145608029883935952142337555414997041225433349609375
          payFromLoyaltyProgram: 3
        position: 9.301444243932575517419536481611430644989013671875
        sku: "sku"
        category: "category"
        height: 5.63737665663332876420099637471139430999755859375
      - quantity: 1
        price: 1.46581298050294517310021547018550336360931396484375
        name: "name"
        width: 2.3021358869347654518833223846741020679473876953125
        length: 7.061401241503109105224211816675961017608642578125
        weight: 5.962133916683182377482808078639209270477294921875
        attributes: "{}"
        adjustment:
          pointPayment: 1
          remainingPrice: 0.4145608029883935952142337555414997041225433349609375
          payFromLoyaltyProgram: 3
        position: 9.301444243932575517419536481611430644989013671875
        sku: "sku"
        category: "category"
        height: 5.63737665663332876420099637471139430999755859375
      firstSession: true
  CartItem:
    type: "object"
    required:
    - "name"
    - "price"
    - "quantity"
    - "sku"
    properties:
      name:
        type: "string"
        title: "Name of item"
        minLength: 1
      sku:
        type: "string"
        title: "SKU of item"
        minLength: 1
      quantity:
        type: "integer"
        title: "Quantity of item"
        minimum: 1
      price:
        type: "number"
        title: "Price of item"
      category:
        type: "string"
        title: "Item category"
      weight:
        type: "number"
        description: "Weight of item in mm"
        title: "Weight of item"
      height:
        type: "number"
        description: "Height of item in mm"
        title: "Height of item"
      width:
        type: "number"
        description: "Width of item in mm"
        title: "Width of item"
      length:
        type: "number"
        description: "Length of item in mm"
        title: "Length of item"
      position:
        type: "number"
        description: "Position of the Cart Item in the Cart (calculated internally)"
        title: "Position of Cart Item"
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        title: "Item attributes"
        properties: {}
      adjustment:
        $ref: "#/definitions/CartItemAdjustment"
    example:
      quantity: 1
      price: 1.46581298050294517310021547018550336360931396484375
      name: "name"
      width: 2.3021358869347654518833223846741020679473876953125
      length: 7.061401241503109105224211816675961017608642578125
      weight: 5.962133916683182377482808078639209270477294921875
      attributes: "{}"
      adjustment:
        pointPayment: 1
        remainingPrice: 0.4145608029883935952142337555414997041225433349609375
        payFromLoyaltyProgram: 3
      position: 9.301444243932575517419536481611430644989013671875
      sku: "sku"
      category: "category"
      height: 5.63737665663332876420099637471139430999755859375
  IntegrationEvent:
    type: "object"
    required:
    - "attributes"
    - "type"
    properties:
      profileId:
        type: "string"
        description: "ID of the customers profile as used within this Talon.One account.\
          \ May be omitted or set to the empty string if the customer does not yet\
          \ have a known profile ID."
      type:
        type: "string"
        description: "A string representing the event. Must not be a reserved event\
          \ name."
        title: "Event Type"
        minLength: 1
      attributes:
        type: "object"
        description: "Arbitrary additional JSON data associated with the event."
        properties: {}
    description: ""
  NewEvent:
    type: "object"
    required:
    - "attributes"
    - "sessionId"
    - "type"
    properties:
      profileId:
        type: "string"
        description: "ID of the customers profile as used within this Talon.One account.\
          \ May be omitted or set to the empty string if the customer does not yet\
          \ have a known profile ID."
      type:
        type: "string"
        description: "A string representing the event. Must not be a reserved event\
          \ name."
        title: "Event Type"
        minLength: 1
      attributes:
        type: "object"
        description: "Arbitrary additional JSON data associated with the event."
        properties: {}
      sessionId:
        type: "string"
        description: "The ID of the session that this event occurred in."
        title: "Session ID of Event"
        minLength: 1
    description: ""
    example:
      profileId: "profileId"
      attributes: "{}"
      sessionId: "sessionId"
      type: "type"
  Event:
    type: "object"
    required:
    - "applicationId"
    - "attributes"
    - "created"
    - "effects"
    - "id"
    - "ledgerEntries"
    - "type"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      profileId:
        type: "string"
        description: "ID of the customers profile as used within this Talon.One account.\
          \ May be omitted or set to the empty string if the customer does not yet\
          \ have a known profile ID."
      type:
        type: "string"
        description: "A string representing the event. Must not be a reserved event\
          \ name."
        title: "Event Type"
        minLength: 1
      attributes:
        type: "object"
        description: "Arbitrary additional JSON data associated with the event."
        properties: {}
      sessionId:
        type: "string"
        description: "The ID of the session that this event occurred in."
        title: "Session ID of Event"
      effects:
        type: "array"
        description: "An array of \"effects\" that must be applied in response to\
          \ this event. Example effects include `addItemToCart` or `setDiscount`.\n"
        items:
          type: "object"
          properties: {}
      ledgerEntries:
        type: "array"
        description: "Ledger entries for the event."
        items:
          $ref: "#/definitions/LedgerEntry"
      meta:
        $ref: "#/definitions/Meta"
    description: ""
    example:
      effects:
      - "{}"
      - "{}"
      created: "2000-01-23T04:56:07.000+00:00"
      profileId: "profileId"
      meta:
        campaigns: "{}"
        coupons: "{}"
        warnings: "{}"
        couponRejectionReason:
          reason: "CouponNotFound"
          campaignId: 6
          couponId: 3
      ledgerEntries:
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        accountId: 9
        eventId: 6
        reason: "reason"
        amount: 8
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: "profileId"
        loyaltyProgramId: 9
        id: 5
        referenceId: 9
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        accountId: 9
        eventId: 6
        reason: "reason"
        amount: 8
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: "profileId"
        loyaltyProgramId: 9
        id: 5
        referenceId: 9
      attributes: "{}"
      id: 1
      sessionId: "sessionId"
      applicationId: 4
      type: "type"
  IntegrationState:
    type: "object"
    required:
    - "event"
    - "profile"
    - "session"
    properties:
      session:
        $ref: "#/definitions/CustomerSession"
      profile:
        $ref: "#/definitions/CustomerProfile"
      event:
        $ref: "#/definitions/Event"
      loyalty:
        $ref: "#/definitions/Loyalty"
    description: "Contains all state that might interest application integration plugins.\
      \ This is the response type returned by all of the Integration API operations.\n"
    example:
      session:
        coupon: "coupon"
        created: "2000-01-23T04:56:07.000+00:00"
        identifiers:
        - "identifiers"
        - "identifiers"
        integrationId: "integrationId"
        total: 7.3862819483858839220147274318151175975799560546875
        referral: "referral"
        discounts:
          key: 1.231513536777255612975068288506008684635162353515625
        profileId: "profileId"
        attributes: "{}"
        state: "open"
        applicationId: 0
        cartItems:
        - quantity: 1
          price: 1.46581298050294517310021547018550336360931396484375
          name: "name"
          width: 2.3021358869347654518833223846741020679473876953125
          length: 7.061401241503109105224211816675961017608642578125
          weight: 5.962133916683182377482808078639209270477294921875
          attributes: "{}"
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883935952142337555414997041225433349609375
            payFromLoyaltyProgram: 3
          position: 9.301444243932575517419536481611430644989013671875
          sku: "sku"
          category: "category"
          height: 5.63737665663332876420099637471139430999755859375
        - quantity: 1
          price: 1.46581298050294517310021547018550336360931396484375
          name: "name"
          width: 2.3021358869347654518833223846741020679473876953125
          length: 7.061401241503109105224211816675961017608642578125
          weight: 5.962133916683182377482808078639209270477294921875
          attributes: "{}"
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883935952142337555414997041225433349609375
            payFromLoyaltyProgram: 3
          position: 9.301444243932575517419536481611430644989013671875
          sku: "sku"
          category: "category"
          height: 5.63737665663332876420099637471139430999755859375
        firstSession: true
      profile:
        accountId: 1
        closedSessions: 1
        created: "2000-01-23T04:56:07.000+00:00"
        integrationId: "integrationId"
        attributes: "{}"
        totalSales: 6.8468526983526398765889098285697400569915771484375
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        loyaltyMemberships:
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
      loyalty:
        programs:
          key:
            ledger:
              currentBalance: 6.96511769763884558415156789124011993408203125
            subLedgers:
              key:
                currentBalance: 6.96511769763884558415156789124011993408203125
            name: "name"
            title: "title"
      event:
        effects:
        - "{}"
        - "{}"
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: "profileId"
        meta:
          campaigns: "{}"
          coupons: "{}"
          warnings: "{}"
          couponRejectionReason:
            reason: "CouponNotFound"
            campaignId: 6
            couponId: 3
        ledgerEntries:
        - expiryDate: "2000-01-23T04:56:07.000+00:00"
          accountId: 9
          eventId: 6
          reason: "reason"
          amount: 8
          created: "2000-01-23T04:56:07.000+00:00"
          profileId: "profileId"
          loyaltyProgramId: 9
          id: 5
          referenceId: 9
        - expiryDate: "2000-01-23T04:56:07.000+00:00"
          accountId: 9
          eventId: 6
          reason: "reason"
          amount: 8
          created: "2000-01-23T04:56:07.000+00:00"
          profileId: "profileId"
          loyaltyProgramId: 9
          id: 5
          referenceId: 9
        attributes: "{}"
        id: 1
        sessionId: "sessionId"
        applicationId: 4
        type: "type"
  ApplicationCustomer:
    type: "object"
    required:
    - "accountId"
    - "attributes"
    - "closedSessions"
    - "created"
    - "id"
    - "integrationId"
    - "lastActivity"
    - "totalSales"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created. The exact moment this\
          \ entity was created. The exact moment this entity was created."
      integrationId:
        type: "string"
        format: "string"
        description: "The ID used for this entity in the application system. The ID\
          \ used for this entity in the application system."
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        properties: {}
      accountId:
        type: "integer"
        description: "The ID of the Talon.One account that owns this profile. The\
          \ ID of the Talon.One account that owns this profile."
      closedSessions:
        type: "integer"
        description: "The total amount of closed sessions by a customer. A closed\
          \ session is a successful purchase."
        title: "Closed sessions"
      totalSales:
        type: "number"
        description: "Sum of all purchases made by this customer"
        title: "Total Sales"
      loyaltyMemberships:
        type: "array"
        description: "A list of loyalty programs joined by the customer"
        title: "Loyalty programed joined"
        items:
          $ref: "#/definitions/LoyaltyMembership"
      lastActivity:
        type: "string"
        format: "date-time"
        description: "Timestamp of the most recent event received from this customer"
        title: "Last activity of customer"
    description: ""
    example:
      accountId: 1
      closedSessions: 5
      created: "2000-01-23T04:56:07.000+00:00"
      integrationId: "integrationId"
      attributes: "{}"
      totalSales: 5.63737665663332876420099637471139430999755859375
      lastActivity: "2000-01-23T04:56:07.000+00:00"
      id: 6
      loyaltyMemberships:
      - joined: "2000-01-23T04:56:07.000+00:00"
        loyaltyProgramId: 7
      - joined: "2000-01-23T04:56:07.000+00:00"
        loyaltyProgramId: 7
  ApplicationSession:
    type: "object"
    required:
    - "applicationId"
    - "cartItems"
    - "coupon"
    - "created"
    - "discounts"
    - "id"
    - "integrationId"
    - "referral"
    - "state"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created. The exact moment this\
          \ entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      profileId:
        type: "integer"
        description: "The globally unique Talon.One ID of the customer that created\
          \ this entity."
      integrationId:
        type: "string"
        format: "string"
        description: "The ID used for this entity in the application system."
      coupon:
        type: "string"
        description: "Any coupon code entered."
      referral:
        type: "string"
        description: "Any referal code entered."
      state:
        type: "string"
        description: "Indicating if the customer session is in progress (\"open\"\
          ), \"closed\", or \"cancelled\"."
        enum:
        - "open"
        - "closed"
        - "cancelled"
      cartItems:
        type: "array"
        description: "Serialized JSON representation."
        items:
          $ref: "#/definitions/CartItem"
      discounts:
        type: "object"
        description: "A map of labelled discount values, in the same currency as the\
          \ session."
        additionalProperties:
          type: "number"
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this item"
        properties: {}
    description: ""
    example:
      referral: "referral"
      coupon: "coupon"
      discounts:
        key: 5.63737665663332876420099637471139430999755859375
      created: "2000-01-23T04:56:07.000+00:00"
      profileId: 5
      integrationId: "integrationId"
      attributes: "{}"
      id: 6
      state: "open"
      applicationId: 1
      cartItems:
      - quantity: 1
        price: 1.46581298050294517310021547018550336360931396484375
        name: "name"
        width: 2.3021358869347654518833223846741020679473876953125
        length: 7.061401241503109105224211816675961017608642578125
        weight: 5.962133916683182377482808078639209270477294921875
        attributes: "{}"
        adjustment:
          pointPayment: 1
          remainingPrice: 0.4145608029883935952142337555414997041225433349609375
          payFromLoyaltyProgram: 3
        position: 9.301444243932575517419536481611430644989013671875
        sku: "sku"
        category: "category"
        height: 5.63737665663332876420099637471139430999755859375
      - quantity: 1
        price: 1.46581298050294517310021547018550336360931396484375
        name: "name"
        width: 2.3021358869347654518833223846741020679473876953125
        length: 7.061401241503109105224211816675961017608642578125
        weight: 5.962133916683182377482808078639209270477294921875
        attributes: "{}"
        adjustment:
          pointPayment: 1
          remainingPrice: 0.4145608029883935952142337555414997041225433349609375
          payFromLoyaltyProgram: 3
        position: 9.301444243932575517419536481611430644989013671875
        sku: "sku"
        category: "category"
        height: 5.63737665663332876420099637471139430999755859375
  ApplicationEvent:
    type: "object"
    required:
    - "applicationId"
    - "attributes"
    - "created"
    - "effects"
    - "id"
    - "type"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      profileId:
        type: "integer"
        description: "The globally unique Talon.One ID of the customer that created\
          \ this entity."
      sessionId:
        type: "integer"
        description: "The globally unique Talon.One ID of the session that contains\
          \ this event."
      type:
        type: "string"
        description: "A string representing the event. Must not be a reserved event\
          \ name."
      attributes:
        type: "object"
        description: "Additional JSON serialized data associated with the event."
        properties: {}
      effects:
        type: "array"
        description: "An array containing the effects that were applied as a result\
          \ of this event."
        items:
          type: "object"
          properties: {}
    description: ""
    example:
      effects:
      - "{}"
      - "{}"
      created: "2000-01-23T04:56:07.000+00:00"
      profileId: 5
      attributes: "{}"
      id: 6
      sessionId: 5
      applicationId: 1
      type: "type"
  NewAccount:
    type: "object"
    required:
    - "companyName"
    properties:
      companyName:
        type: "string"
        minLength: 1
  AccountAnalytics:
    type: "object"
    required:
    - "activeCampaigns"
    - "activeCoupons"
    - "activeReferralCodes"
    - "applications"
    - "campaigns"
    - "coupons"
    - "customAttributes"
    - "expiredCoupons"
    - "expiredReferralCodes"
    - "loyaltyPrograms"
    - "referralCodes"
    - "roles"
    - "users"
    - "webhooks"
    properties:
      applications:
        type: "integer"
        description: "Total Number of Applications inside the account"
      activeCampaigns:
        type: "integer"
        description: "Total Number of Active Applications inside the account"
      campaigns:
        type: "integer"
        description: "Total Number of campaigns inside the account"
      coupons:
        type: "integer"
        description: "Total Number of coupons inside the account"
      activeCoupons:
        type: "integer"
        description: "Total Number of active coupons inside the account"
      expiredCoupons:
        type: "integer"
        description: "Total Number of expired coupons inside the account"
      customAttributes:
        type: "integer"
        description: "Total Number of custom attributes inside the account"
      referralCodes:
        type: "integer"
        description: "Total Number of referral codes inside the account"
      activeReferralCodes:
        type: "integer"
        description: "Total Number of active referral codes inside the account"
      expiredReferralCodes:
        type: "integer"
        description: "Total Number of expired referral codes inside the account"
      users:
        type: "integer"
        description: "Total Number of users inside the account"
      roles:
        type: "integer"
        description: "Total Number of roles inside the account"
      webhooks:
        type: "integer"
        description: "Total Number of webhooks inside the account"
      loyaltyPrograms:
        type: "integer"
        description: "Total Number of loyalty programs inside the account"
    example:
      expiredCoupons: 2
      roles: 7
      activeCampaigns: 6
      activeCoupons: 5
      users: 4
      campaigns: 1
      coupons: 5
      expiredReferralCodes: 2
      webhooks: 1
      loyaltyPrograms: 1
      referralCodes: 9
      applications: 0
      customAttributes: 7
      activeReferralCodes: 3
  AccountLimits:
    type: "object"
    required:
    - "activeCampaigns"
    - "apiVolume"
    - "coupons"
    - "liveApplications"
    - "liveLoyaltyPrograms"
    - "promotionTypes"
    - "referralCodes"
    - "sandboxApplications"
    - "sandboxLoyaltyPrograms"
    - "users"
    - "webhooks"
    properties:
      liveApplications:
        type: "integer"
        description: "Total Number of allowed live applications in the account"
      sandboxApplications:
        type: "integer"
        description: "Total Number of allowed sandbox applications in the account"
      activeCampaigns:
        type: "integer"
        description: "Total Number of allowed active campaigns in the account"
      coupons:
        type: "integer"
        description: "Total Number of allowed coupons in the account"
      referralCodes:
        type: "integer"
        description: "Total Number of allowed referral codes in the account"
      liveLoyaltyPrograms:
        type: "integer"
        description: "Total Number of allowed live loyalty programs in the account"
      sandboxLoyaltyPrograms:
        type: "integer"
        description: "Total Number of allowed sandbox loyalty programs in the account"
      webhooks:
        type: "integer"
        description: "Total Number of allowed webhooks in the account"
      users:
        type: "integer"
        description: "Total Number of allowed users in the account"
      apiVolume:
        type: "integer"
        description: "Total allowed api volume"
      promotionTypes:
        type: "array"
        description: "array of rulesets where webhook is used"
        items:
          type: "string"
    example:
      liveApplications: 0
      coupons: 5
      webhooks: 9
      promotionTypes:
      - "promotionTypes"
      - "promotionTypes"
      referralCodes: 5
      sandboxLoyaltyPrograms: 7
      apiVolume: 2
      activeCampaigns: 1
      liveLoyaltyPrograms: 2
      sandboxApplications: 6
      users: 3
  UpdateAccount:
    type: "object"
    required:
    - "billingEmail"
    - "companyName"
    properties:
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this campaign"
        properties: {}
      companyName:
        type: "string"
        description: "Name of your company."
        minLength: 1
      billingEmail:
        type: "string"
        format: "email"
        description: "The billing email address associated with your company account."
  Account:
    type: "object"
    required:
    - "applicationCount"
    - "billingEmail"
    - "campaignsActiveCount"
    - "campaignsInactiveCount"
    - "companyName"
    - "created"
    - "domainName"
    - "id"
    - "modified"
    - "state"
    - "userCount"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      modified:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was last modified."
      companyName:
        type: "string"
        minLength: 1
      domainName:
        type: "string"
        description: "Subdomain Name for yourcompany.talon.one"
      state:
        type: "string"
        description: "State of the account (trial, active, trial_expired)"
        enum:
        - "trial"
        - "active"
        - "trial_expired"
      billingEmail:
        type: "string"
        format: "email"
        description: "The billing email address associated with your company account."
      planName:
        type: "string"
        description: "The name of your booked plan."
      planExpires:
        type: "string"
        format: "date-time"
        description: "The point in time at which your current plan expires."
      applicationLimit:
        type: "integer"
        description: "The maximum number of Applications covered by your plan."
      userLimit:
        type: "integer"
        description: "The maximum number of Campaign Manager Users covered by your\
          \ plan."
      campaignLimit:
        type: "integer"
        description: "The maximum number of Campaigns covered by your plan."
      apiLimit:
        type: "integer"
        description: "The maximum number of Integration API calls covered by your\
          \ plan per billing period."
      applicationCount:
        type: "integer"
        description: "The current number of Applications in your account."
      userCount:
        type: "integer"
        description: "The current number of Campaign Manager Users in your account."
      campaignsActiveCount:
        type: "integer"
        description: "The current number of active Campaigns in your account."
      campaignsInactiveCount:
        type: "integer"
        description: "The current number of inactive Campaigns in your account."
      attributes:
        type: "object"
        description: "Arbitrary properties associated with this campaign"
        properties: {}
    description: ""
    example:
      applicationCount: 2
      planExpires: "2000-01-23T04:56:07.000+00:00"
      created: "2000-01-23T04:56:07.000+00:00"
      campaignsActiveCount: 9
      companyName: "companyName"
      campaignsInactiveCount: 3
      planName: "planName"
      applicationLimit: 6
      userCount: 7
      billingEmail: "billingEmail"
      campaignLimit: 5
      domainName: "domainName"
      apiLimit: 5
      modified: "2000-01-23T04:56:07.000+00:00"
      attributes: "{}"
      id: 0
      state: "trial"
      userLimit: 1
  NewAccountSignUp:
    type: "object"
    required:
    - "companyName"
    - "email"
    - "password"
    properties:
      email:
        type: "string"
        format: "email"
        description: "The email address associated with your account."
      password:
        type: "string"
        description: "The password for your account."
      companyName:
        type: "string"
        minLength: 1
    description: ""
  NewUser:
    type: "object"
    required:
    - "email"
    - "inviteToken"
    - "password"
    properties:
      email:
        type: "string"
        format: "email"
        description: "The email address associated with your account."
      password:
        type: "string"
        description: "The password for your account."
      name:
        type: "string"
        description: "Your name."
      inviteToken:
        type: "string"
        minLength: 1
    description: ""
  UpdateUser:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
        format: "email"
        description: "The email address associated with your account."
      name:
        type: "string"
        description: "Your name."
      password:
        type: "string"
        description: "Your old password."
      newPassword:
        type: "string"
        description: "Your new password."
      policy:
        type: "string"
        description: "a blob of acl json"
      state:
        type: "string"
        description: "New state (\"deactivated\" or \"active\") for the user. Only\
          \ usable by admins for the user."
        enum:
        - "deactivated"
        - "active"
      releaseUpdate:
        type: "boolean"
        description: "Update the user via email"
      latestFeature:
        type: "string"
        description: "The latest feature you've been notified."
      roles:
        type: "array"
        description: "Update"
        items:
          type: "integer"
    description: ""
  NewInviteEmail:
    type: "object"
    required:
    - "email"
    - "token"
    properties:
      email:
        type: "string"
        format: "email"
        minLength: 1
      token:
        type: "string"
        minLength: 1
  NewPasswordEmail:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
        format: "email"
        minLength: 1
    example:
      email: "email"
  NewPassword:
    type: "object"
    required:
    - "password"
    - "resetToken"
    properties:
      password:
        type: "string"
        description: "The new password for your account."
      resetToken:
        type: "string"
        minLength: 1
    example:
      password: "password"
      resetToken: "resetToken"
  Environment:
    type: "object"
    required:
    - "applicationId"
    - "created"
    - "functions"
    - "id"
    - "slots"
    - "templates"
    - "variables"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      slots:
        type: "array"
        description: "The slots defined for this application."
        items:
          $ref: "#/definitions/SlotDef"
      functions:
        type: "array"
        description: "The functions defined for this application."
        items:
          $ref: "#/definitions/FunctionDef"
      templates:
        type: "array"
        description: "The templates defined for this application."
        items:
          $ref: "#/definitions/TemplateDef"
      variables:
        type: "string"
    description: ""
  SlotDef:
    type: "object"
    required:
    - "name"
    - "title"
    - "type"
    - "writable"
    properties:
      name:
        type: "string"
        description: "The dot-separated path to this slot for use in Talang."
      type:
        type: "string"
        description: "The type of this slot, one of string, number, boolean, or list[type]."
      title:
        type: "string"
        description: "Campaigner-friendly name for the slot."
      description:
        type: "string"
        description: "A short description of the slot."
      help:
        type: "string"
        description: "Extended help text for the slot."
      writable:
        type: "boolean"
        description: "Whether or not this slot can be updated by rule effects."
  FuncArgDef:
    type: "object"
    required:
    - "description"
    - "type"
    properties:
      type:
        type: "string"
        description: "The type of value this argument expects."
        minLength: 1
        enum:
        - "string"
        - "boolean"
        - "number"
        - "time"
      description:
        type: "string"
        description: "A campaigner-friendly description of the argument, this will\
          \ also be shown in the rule editor."
  TemplateArgDef:
    type: "object"
    required:
    - "description"
    - "title"
    - "type"
    - "ui"
    properties:
      type:
        type: "string"
        description: "The type of value this argument expects."
        minLength: 1
        enum:
        - "string"
        - "boolean"
        - "number"
        - "time"
      description:
        type: "string"
        description: "A campaigner-friendly description of the argument, this will\
          \ also be shown in the rule editor."
      title:
        type: "string"
        description: "A campaigner friendly name for the argument, this will be shown\
          \ in the rule editor."
        minLength: 1
      ui:
        type: "object"
        description: "Arbitrary metadata that may be used to render an input for this\
          \ argument."
        properties: {}
    description: ""
    example:
      ui: "{}"
      description: "description"
      type: "string"
      title: "title"
  FunctionDef:
    type: "object"
    required:
    - "args"
    - "name"
    - "type"
    properties:
      name:
        type: "string"
        description: "The function name used in Talang."
        minLength: 1
      type:
        type: "string"
        description: "The type of this function argument."
      description:
        type: "string"
        description: "A short description of the function."
      help:
        type: "string"
        description: "Extended help text for the function."
      args:
        type: "array"
        description: "An array of argument definitions."
        items:
          $ref: "#/definitions/FuncArgDef"
  NewTemplateDef:
    type: "object"
    required:
    - "args"
    - "category"
    - "expr"
    - "title"
    properties:
      title:
        type: "string"
        description: "Campaigner-friendly name for the template that will be shown\
          \ in the rule editor."
        minLength: 1
      description:
        type: "string"
        description: "A short description of the template that will be shown in the\
          \ rule editor."
      help:
        type: "string"
        description: "Extended help text for the template."
      category:
        type: "string"
        description: "Used for grouping templates in the rule editor sidebar."
        minLength: 1
      expr:
        type: "array"
        description: "A Talang expression that contains variable bindings referring\
          \ to args."
        items:
          type: "object"
          properties: {}
      args:
        type: "array"
        description: "An array of argument definitions."
        items:
          $ref: "#/definitions/TemplateArgDef"
      expose:
        type: "boolean"
        description: "A flag to control exposure in Rule Builder."
        default: false
  TemplateDef:
    type: "object"
    required:
    - "applicationId"
    - "args"
    - "category"
    - "created"
    - "description"
    - "expr"
    - "help"
    - "id"
    - "name"
    - "title"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationId:
        type: "integer"
        description: "The ID of the application that owns this entity."
      title:
        type: "string"
        description: "Campaigner-friendly name for the template that will be shown\
          \ in the rule editor."
        minLength: 1
      description:
        type: "string"
        description: "A short description of the template that will be shown in the\
          \ rule editor."
      help:
        type: "string"
        description: "Extended help text for the template."
      category:
        type: "string"
        description: "Used for grouping templates in the rule editor sidebar."
        minLength: 1
      expr:
        type: "array"
        description: "A Talang expression that contains variable bindings referring\
          \ to args."
        items:
          type: "object"
          properties: {}
      args:
        type: "array"
        description: "An array of argument definitions."
        items:
          $ref: "#/definitions/TemplateArgDef"
      expose:
        type: "boolean"
        description: "A flag to control exposure in Rule Builder."
        default: false
      name:
        type: "string"
        description: "The template name used in Talang."
        minLength: 1
    description: ""
  NewAttribute:
    type: "object"
    required:
    - "description"
    - "editable"
    - "entity"
    - "name"
    - "suggestions"
    - "title"
    - "type"
    properties:
      entity:
        type: "string"
        description: "The name of the entity that can have this attribute. When creating\
          \ or updating the entities of a given type, you can include an `attributes`\
          \ object with keys corresponding to the `name` of the custom attributes\
          \ for that type."
        enum:
        - "Account"
        - "Application"
        - "Campaign"
        - "CustomerProfile"
        - "CustomerSession"
        - "CartItem"
        - "Coupon"
        - "Event"
      eventType:
        type: "string"
      name:
        type: "string"
        description: "The attribute name that will be used in API requests and Talang.\
          \ E.g. if `name == \"region\"` then you would set the region attribute by\
          \ including an `attributes.region` property in your request payload.\n"
      title:
        type: "string"
        description: "The human-readable name for the attribute that will be shown\
          \ in the Campaign Manager. Like `name`, the combination of entity and title\
          \ must also be unique."
      type:
        type: "string"
        description: "The data type of the attribute, a `time` attribute must be sent\
          \ as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)\
          \ timestamp format."
        enum:
        - "string"
        - "number"
        - "boolean"
        - "time"
        - "(list string)"
        - "(list number)"
        - "(list time)"
        - "location"
        - "(list location)"
      description:
        type: "string"
        description: "A description of this attribute."
      suggestions:
        type: "array"
        description: "A list of suggestions for the attribute."
        items:
          type: "string"
          minLength: 1
        maxItems: 50
      editable:
        type: "boolean"
        description: "Whether or not this attribute can be edited."
    description: ""
  Attribute:
    type: "object"
    required:
    - "accountId"
    - "created"
    - "description"
    - "editable"
    - "entity"
    - "id"
    - "locked"
    - "name"
    - "suggestions"
    - "title"
    - "type"
    - "usedAt"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      accountId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      entity:
        type: "string"
        description: "The name of the entity that can have this attribute. When creating\
          \ or updating the entities of a given type, you can include an `attributes`\
          \ object with keys corresponding to the `name` of the custom attributes\
          \ for that type."
        enum:
        - "Account"
        - "Application"
        - "Campaign"
        - "CustomerProfile"
        - "CustomerSession"
        - "CartItem"
        - "Coupon"
        - "Event"
      eventType:
        type: "string"
      name:
        type: "string"
        description: "The attribute name that will be used in API requests and Talang.\
          \ E.g. if `name == \"region\"` then you would set the region attribute by\
          \ including an `attributes.region` property in your request payload.\n"
      title:
        type: "string"
        description: "The human-readable name for the attribute that will be shown\
          \ in the Campaign Manager. Like `name`, the combination of entity and title\
          \ must also be unique."
      type:
        type: "string"
        description: "The data type of the attribute, a `time` attribute must be sent\
          \ as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)\
          \ timestamp format."
        enum:
        - "string"
        - "number"
        - "boolean"
        - "time"
        - "(list string)"
        - "(list number)"
        - "(list time)"
        - "location"
        - "(list location)"
      description:
        type: "string"
        description: "A description of this attribute."
      suggestions:
        type: "array"
        description: "A list of suggestions for the attribute."
        items:
          type: "string"
          minLength: 1
        maxItems: 50
      editable:
        type: "boolean"
        description: "Whether or not this attribute can be edited."
      locked:
        type: "boolean"
        description: "Indicates whether this attribute is in use. If in use only title\
          \ can be changed and other operations are prohibited."
        default: false
      usedAt:
        type: "array"
        description: "array of rulesets where the attribute is used"
        items:
          type: "string"
    description: ""
    example:
      created: "2000-01-23T04:56:07.000+00:00"
      editable: true
      description: "description"
      eventType: "eventType"
      title: "title"
      type: "string"
      accountId: 6
      name: "name"
      suggestions:
      - "suggestions"
      - "suggestions"
      - "suggestions"
      - "suggestions"
      - "suggestions"
      - "suggestions"
      - "suggestions"
      - "suggestions"
      - "suggestions"
      - "suggestions"
      usedAt:
      - "usedAt"
      - "usedAt"
      id: 0
      locked: false
      entity: "Account"
  NewEventType:
    type: "object"
    required:
    - "applicationIds"
    - "description"
    - "handler"
    - "mimeType"
    - "name"
    - "title"
    - "version"
    properties:
      applicationIds:
        type: "array"
        description: "The IDs of the applications that are related to this entity."
        items:
          type: "integer"
      title:
        type: "string"
        description: "The human-friendly display name for this event type. Use a short,\
          \ past-tense, description of the event."
        minLength: 1
      name:
        type: "string"
        description: "The machine-friendly canonical name for this event type. This\
          \ will be used in URLs, and cannot be changed after an event type has been\
          \ created."
        minLength: 1
      description:
        type: "string"
        description: "An explanation of when the event type is triggered. Write this\
          \ with a campaign manager in mind. For example:\n\n> The \"Payment Accepted\"\
          \ event is triggered after successful processing of a payment by our payment\
          \ gateway.\n"
      mimeType:
        type: "string"
        description: "This defines how the request payload will be parsed before your\
          \ handler code is run."
        enum:
        - "application/json"
        - "application/x-www-form-urlencoded"
        - "none"
      examplePayload:
        type: "string"
        description: "It is often helpful to include an example payload with the event\
          \ type definition for documentation purposes."
      schema:
        type: "object"
        description: "It is strongly recommended to define a JSON schema that will\
          \ be used to perform structural validation of request payloads after parsing.\n"
        properties: {}
      handlerLanguage:
        type: "string"
        description: "The language of the handler code. Currently only `\"talang\"\
          ` is supported."
        enum:
        - "talang"
      handler:
        type: "string"
        description: "Code that will be run after successful parsing & validation\
          \ of the payload for this event.\nThis code _may_ choose to evaluate campaign\
          \ rules.\n"
      version:
        type: "integer"
        description: "The version of this event type. When updating an existing event\
          \ type this must be **exactly** `currentVersion + 1`.\n"
    description: ""
  EventType:
    type: "object"
    required:
    - "applicationIds"
    - "created"
    - "description"
    - "handler"
    - "id"
    - "mimeType"
    - "name"
    - "title"
    - "version"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      applicationIds:
        type: "array"
        description: "The IDs of the applications that are related to this entity."
        items:
          type: "integer"
      title:
        type: "string"
        description: "The human-friendly display name for this event type. Use a short,\
          \ past-tense, description of the event."
        minLength: 1
      name:
        type: "string"
        description: "The machine-friendly canonical name for this event type. This\
          \ will be used in URLs, and cannot be changed after an event type has been\
          \ created."
        minLength: 1
      description:
        type: "string"
        description: "An explanation of when the event type is triggered. Write this\
          \ with a campaign manager in mind. For example:\n\n> The \"Payment Accepted\"\
          \ event is triggered after successful processing of a payment by our payment\
          \ gateway.\n"
      mimeType:
        type: "string"
        description: "This defines how the request payload will be parsed before your\
          \ handler code is run."
        enum:
        - "application/json"
        - "application/x-www-form-urlencoded"
        - "none"
      examplePayload:
        type: "string"
        description: "It is often helpful to include an example payload with the event\
          \ type definition for documentation purposes."
      schema:
        type: "object"
        description: "It is strongly recommended to define a JSON schema that will\
          \ be used to perform structural validation of request payloads after parsing.\n"
        properties: {}
      handlerLanguage:
        type: "string"
        description: "The language of the handler code. Currently only `\"talang\"\
          ` is supported."
        enum:
        - "talang"
      handler:
        type: "string"
        description: "Code that will be run after successful parsing & validation\
          \ of the payload for this event.\nThis code _may_ choose to evaluate campaign\
          \ rules.\n"
      version:
        type: "integer"
        description: "The version of this event type. When updating an existing event\
          \ type this must be **exactly** `currentVersion + 1`.\n"
    description: ""
    example:
      schema: "{}"
      handler: "handler"
      examplePayload: "examplePayload"
      created: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      id: 6
      mimeType: "application/json"
      handlerLanguage: "talang"
      title: "title"
      version: 5
      applicationIds:
      - 1
      - 1
  ImportCoupons:
    type: "object"
    required:
    - "coupons"
    properties:
      coupons:
        type: "string"
  NewWebhook:
    type: "object"
    required:
    - "applicationIds"
    - "enabled"
    - "headers"
    - "params"
    - "title"
    - "url"
    - "verb"
    properties:
      applicationIds:
        type: "array"
        description: "The IDs of the applications that are related to this entity."
        items:
          type: "integer"
      title:
        type: "string"
        description: "Friendly title for this webhook"
      verb:
        type: "string"
        description: "API method for this webhook"
        enum:
        - "POST"
        - "PUT"
        - "GET"
        - "DELETE"
        - "PATCH"
      url:
        type: "string"
        description: "API url (supports templating using parameters) for this webhook"
      headers:
        type: "array"
        description: "List of API HTTP headers for this webhook"
        items:
          type: "string"
          pattern: "^([^:,]*):([^]*|[^,]*)$"
      payload:
        type: "string"
        description: "API payload (supports templating using parameters) for this\
          \ webhook"
      params:
        type: "array"
        description: "Array of template argument definitions"
        items:
          $ref: "#/definitions/TemplateArgDef"
      enabled:
        type: "boolean"
        description: "Enables or disables webhook from showing in rule builder"
    description: ""
  Webhook:
    type: "object"
    required:
    - "applicationIds"
    - "created"
    - "enabled"
    - "headers"
    - "id"
    - "modified"
    - "params"
    - "title"
    - "url"
    - "usedAt"
    - "verb"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      modified:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was last modified."
      applicationIds:
        type: "array"
        description: "The IDs of the applications that are related to this entity.\
          \ The IDs of the applications that are related to this entity."
        items:
          type: "integer"
          description: ""
      title:
        type: "string"
        description: "Friendly title for this webhook"
      verb:
        type: "string"
        description: "API method for this webhook"
        enum:
        - "POST"
        - "PUT"
        - "GET"
        - "DELETE"
        - "PATCH"
      url:
        type: "string"
        description: "API url (supports templating using parameters) for this webhook"
      headers:
        type: "array"
        description: "List of API HTTP headers for this webhook"
        items:
          type: "string"
          pattern: "^([^:,]*):([^]*|[^,]*)$"
      payload:
        type: "string"
        description: "API payload (supports templating using parameters) for this\
          \ webhook"
      params:
        type: "array"
        description: "Array of template argument definitions"
        items:
          $ref: "#/definitions/TemplateArgDef"
      enabled:
        type: "boolean"
        description: "Enables or disables webhook from showing in rule builder"
      usedAt:
        type: "array"
        description: "array of rulesets where webhook is used"
        items:
          type: "string"
    description: ""
    example:
      headers:
      - "headers"
      - "headers"
      payload: "payload"
      created: "2000-01-23T04:56:07.000+00:00"
      verb: "POST"
      modified: "2000-01-23T04:56:07.000+00:00"
      usedAt:
      - "usedAt"
      - "usedAt"
      id: 6
      title: "title"
      params:
      - ui: "{}"
        description: "description"
        type: "string"
        title: "title"
      - ui: "{}"
        description: "description"
        type: "string"
        title: "title"
      url: "url"
      enabled: true
      applicationIds:
      - 1
      - 1
  ManagerConfig:
    type: "object"
    required:
    - "schemaVersion"
    properties:
      schemaVersion:
        type: "integer"
  Export:
    type: "object"
    required:
    - "accountId"
    - "created"
    - "entity"
    - "filter"
    - "id"
    - "userId"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      accountId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      userId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      entity:
        type: "string"
        description: "The name of the entity that was exported."
        enum:
        - "Coupon"
        - "Effect"
        - "CustomerSession"
      filter:
        type: "object"
        description: "Map of keys and values that were used to filter the exported\
          \ rows"
        properties: {}
    description: ""
    example:
      filter: "{}"
      accountId: 1
      created: "2000-01-23T04:56:07.000+00:00"
      id: 6
      userId: 5
      entity: "Coupon"
  NewImport:
    type: "object"
    required:
    - "entity"
    properties:
      entity:
        type: "string"
        description: "The name of the entity that was imported."
        enum:
        - "Coupon"
    description: ""
  Import:
    type: "object"
    required:
    - "accountId"
    - "amount"
    - "created"
    - "entity"
    - "id"
    - "userId"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      accountId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      userId:
        type: "integer"
        description: "The ID of the account that owns this entity."
      entity:
        type: "string"
        description: "The name of the entity that was imported."
        enum:
        - "Coupon"
      amount:
        type: "integer"
        description: "The number of members that imported."
        minimum: 0
    description: ""
    example:
      accountId: 1
      amount: 0
      created: "2000-01-23T04:56:07.000+00:00"
      id: 6
      userId: 5
      entity: "Coupon"
  FeaturesFeed:
    type: "object"
    properties:
      title:
        type: "string"
      pubDate:
        type: "string"
    description: ""
  LibraryAttribute:
    type: "object"
    required:
    - "description"
    - "entity"
    - "name"
    - "presets"
    - "suggestions"
    - "title"
    - "type"
    properties:
      entity:
        type: "string"
        description: "The name of the entity that can have this attribute. When creating\
          \ or updating the entities of a given type, you can include an `attributes`\
          \ object with keys corresponding to the `name` of the custom attributes\
          \ for that type."
        enum:
        - "Application"
        - "Campaign"
        - "CustomerProfile"
        - "CustomerSession"
        - "CartItem"
        - "Coupon"
        - "Event"
      name:
        type: "string"
        description: "The attribute name that will be used in API requests and Talang.\
          \ E.g. if `name == \"region\"` then you would set the region attribute by\
          \ including an `attributes.region` property in your request payload.\n"
      title:
        type: "string"
        description: "The human-readable name for the attribute that will be shown\
          \ in the Campaign Manager. Like `name`, the combination of entity and title\
          \ must also be unique."
      type:
        type: "string"
        description: "The data type of the attribute, a `time` attribute must be sent\
          \ as a string that conforms to the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)\
          \ timestamp format."
        enum:
        - "string"
        - "number"
        - "boolean"
        - "time"
      description:
        type: "string"
        description: "A description of the attribute."
      presets:
        type: "array"
        description: "The presets that indicate to which industry the attribute applies\
          \ to."
        items:
          type: "string"
      suggestions:
        type: "array"
        description: "Short suggestions that are used to group attributes."
        items:
          type: "string"
    description: ""
  Role:
    type: "object"
    required:
    - "accountID"
    - "id"
    properties:
      id:
        type: "integer"
        description: "The ID of the role corresponding to the DB row"
      accountID:
        type: "integer"
        description: "The ID of the Talon.One account that owns this role."
      name:
        type: "string"
        description: "Name of the role"
      description:
        type: "string"
        description: "Description of the role"
      members:
        type: "array"
        description: "A list of userid in this role"
        items:
          type: "integer"
      acl:
        type: "string"
        format: "aclRole"
        description: "Role Policy this should be a stringified blob of json"
    description: ""
    example:
      accountID: 1
      members:
      - 5
      - 5
      name: "name"
      description: "description"
      id: 6
      acl: "acl"
  NewRole:
    type: "object"
    required:
    - "acl"
    - "name"
    - "users"
    properties:
      name:
        type: "string"
        description: "Name of the role"
      description:
        type: "string"
        description: "Description of the role"
      acl:
        type: "string"
        description: "Role Policy this should be a stringified blob of json"
      users:
        type: "array"
        description: "An array of userIDs"
        items:
          type: "integer"
    description: ""
  UpdateRole:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the role"
      description:
        type: "string"
        description: "Description of the role"
      acl:
        type: "string"
        description: "Role Policy this should be a stringified blob of json"
      users:
        type: "array"
        description: "an array of userids"
        items:
          type: "integer"
  RoleAssign:
    type: "object"
    required:
    - "roles"
    - "users"
    properties:
      users:
        type: "array"
        description: "An array of userIDs"
        items:
          type: "integer"
      roles:
        type: "array"
        description: "An array of roleIDs"
        items:
          type: "integer"
    description: ""
  RoleMembership:
    type: "object"
    required:
    - "RoleID"
    - "UserID"
    properties:
      RoleID:
        type: "integer"
        description: "ID of role"
      UserID:
        type: "integer"
        description: "ID of User"
  CouponReservations:
    type: "object"
    required:
    - "integrationIDs"
    properties:
      integrationIDs:
        type: "array"
        description: "List of Integration IDs"
        items:
          type: "string"
    example:
      integrationIDs:
      - "integrationIDs"
      - "integrationIDs"
  LedgerEntry:
    type: "object"
    required:
    - "accountId"
    - "amount"
    - "created"
    - "eventId"
    - "expiryDate"
    - "id"
    - "loyaltyProgramId"
    - "profileId"
    - "reason"
    properties:
      id:
        type: "integer"
        description: "Unique ID for this entity."
      created:
        type: "string"
        format: "date-time"
        description: "The exact moment this entity was created."
      profileId:
        type: "string"
        description: "ID of the customers profile as used within this Talon.One account.\
          \ May be omitted or set to the empty string if the customer does not yet\
          \ have a known profile ID."
      accountId:
        type: "integer"
        description: "The ID of the Talon.One account that owns this profile."
      loyaltyProgramId:
        type: "integer"
        description: "ID of the ledger"
      eventId:
        type: "integer"
        description: "ID of the related event"
      amount:
        type: "integer"
        description: "Amount of loyalty points"
      reason:
        type: "string"
        description: "reason for awarding/deducting points"
      expiryDate:
        type: "string"
        format: "date-time"
        description: "Expiry date of the points"
      referenceId:
        type: "integer"
        description: "The ID of the balancing ledgerEntry"
    description: ""
    example:
      expiryDate: "2000-01-23T04:56:07.000+00:00"
      accountId: 9
      eventId: 6
      reason: "reason"
      amount: 8
      created: "2000-01-23T04:56:07.000+00:00"
      profileId: "profileId"
      loyaltyProgramId: 9
      id: 5
      referenceId: 9
  LoyaltyMembership:
    type: "object"
    required:
    - "loyaltyProgramId"
    properties:
      joined:
        type: "string"
        format: "date-time"
        description: "The moment in which the loyalty program was joined."
        title: "Loyalty program joined at"
      loyaltyProgramId:
        type: "integer"
        description: "The ID of the loyalty program belonging to this entity."
        title: "Loyalty program ID"
    example:
      joined: "2000-01-23T04:56:07.000+00:00"
      loyaltyProgramId: 7
  CartItemAdjustment:
    type: "object"
    required:
    - "payFromLoyaltyProgram"
    - "pointPayment"
    properties:
      payFromLoyaltyProgram:
        type: "integer"
        description: "Loyalty Program to be used for payment"
        title: "Payment from this Loyalty Program"
      pointPayment:
        type: "integer"
        description: "Amount of points to be spend"
        title: "Points to be spend"
        minimum: 1
      remainingPrice:
        type: "number"
        description: "Remaining price in currency after payment in points has been\
          \ made"
        title: "Remaining Price"
        minimum: 0
    example:
      pointPayment: 1
      remainingPrice: 0.4145608029883935952142337555414997041225433349609375
      payFromLoyaltyProgram: 3
  Meta:
    type: "object"
    properties:
      campaigns:
        type: "object"
        description: "Maps each evaluated campaign ID to a key-value list of that\
          \ campaigns attributes. Campaigns without attributes will be omitted."
        properties: {}
      coupons:
        type: "object"
        description: "Maps the coupon value to a key-value list of that coupons attributes."
        properties: {}
      couponRejectionReason:
        $ref: "#/definitions/CouponRejectionReason"
      warnings:
        type: "object"
        properties: {}
    example:
      campaigns: "{}"
      coupons: "{}"
      warnings: "{}"
      couponRejectionReason:
        reason: "CouponNotFound"
        campaignId: 6
        couponId: 3
  CouponRejectionReason:
    type: "object"
    required:
    - "campaignId"
    - "couponId"
    - "reason"
    properties:
      campaignId:
        type: "integer"
      couponId:
        type: "integer"
      reason:
        type: "string"
        enum:
        - "CouponNotFound"
        - "CouponPartOfNotRunningCampaign"
        - "CouponLimitReached"
        - "CampaignLimitReached"
        - "ProfileLimitReached"
        - "CouponRecipientDoesNotMatch"
        - "CouponExpired"
        - "CouponStartDateInFuture"
        - "CouponRejectedByCondition"
    description: "Holds a reference to the campaign, the coupon and the reason for\
      \ which that coupon was rejected. Should only be present when there is a 'rejectCoupon'\
      \ effect."
    example:
      reason: "CouponNotFound"
      campaignId: 6
      couponId: 3
  ApplicationAPIKey:
    type: "object"
    required:
    - "accountID"
    - "applicationID"
    - "created"
    - "createdBy"
    - "expires"
    - "id"
    - "title"
    properties:
      id:
        type: "integer"
        description: "ID of the API Key"
      createdBy:
        type: "integer"
        description: "ID of user who created"
      title:
        type: "string"
        description: "Title for API Key"
      accountID:
        type: "integer"
        description: "ID of account the key is used for"
      applicationID:
        type: "integer"
        description: "ID of application the key is used for"
      created:
        type: "string"
        format: "date-time"
        description: "The date the API key was created"
      expires:
        type: "string"
        format: "date-time"
        description: "The date the API key expired"
  NewApplicationAPIKey:
    type: "object"
    required:
    - "accountID"
    - "applicationID"
    - "created"
    - "createdBy"
    - "expires"
    - "id"
    - "key"
    - "title"
    properties:
      id:
        type: "integer"
        description: "ID of the API Key"
      createdBy:
        type: "integer"
        description: "ID of user who created"
      title:
        type: "string"
        description: "Title for API Key"
      accountID:
        type: "integer"
        description: "ID of account the key is used for"
      applicationID:
        type: "integer"
        description: "ID of application the key is used for"
      created:
        type: "string"
        format: "date-time"
        description: "The date the API key was created"
      expires:
        type: "string"
        format: "date-time"
        description: "The date the API key expired"
      key:
        type: "string"
        description: "Raw API Key"
    description: ""
  CreateApplicationAPIKey:
    type: "object"
    required:
    - "expires"
    - "title"
    properties:
      title:
        type: "string"
        description: "Title for API Key"
      expires:
        type: "string"
        format: "date-time"
        description: "The date the API key expired"
  inline_response_200:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CustomerProfile"
    example:
      data:
      - accountId: 1
        closedSessions: 1
        created: "2000-01-23T04:56:07.000+00:00"
        integrationId: "integrationId"
        attributes: "{}"
        totalSales: 6.8468526983526398765889098285697400569915771484375
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        loyaltyMemberships:
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
      - accountId: 1
        closedSessions: 1
        created: "2000-01-23T04:56:07.000+00:00"
        integrationId: "integrationId"
        attributes: "{}"
        totalSales: 6.8468526983526398765889098285697400569915771484375
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        loyaltyMemberships:
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
      totalResultSize: 0
  inline_response_200_1:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Coupon"
    example:
      data:
      - recipientIntegrationId: "recipientIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 146581
        referralId: 5
        usageCounter: 5
        batchId: "batchId"
        expiryDate: "2000-01-23T04:56:07.000+00:00"
        importId: 2
        reservation: true
        attributes: "{}"
        id: 0
        value: "value"
        startDate: "2000-01-23T04:56:07.000+00:00"
      - recipientIntegrationId: "recipientIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 146581
        referralId: 5
        usageCounter: 5
        batchId: "batchId"
        expiryDate: "2000-01-23T04:56:07.000+00:00"
        importId: 2
        reservation: true
        attributes: "{}"
        id: 0
        value: "value"
        startDate: "2000-01-23T04:56:07.000+00:00"
      totalResultSize: 0
  inline_response_200_2:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Application"
    example:
      data:
      - created: "2000-01-23T04:56:07.000+00:00"
        timezone: "timezone"
        description: "description"
        caseSensitivity: "sensitive"
        accountId: 1
        loyaltyPrograms:
        - accountID: 2
          defaultValidity: "defaultValidity"
          allowSubledger: true
          name: "name"
          description: "description"
          id: 5
          title: "title"
          subscribedApplications:
          - 7
          - 7
        - accountID: 2
          defaultValidity: "defaultValidity"
          allowSubledger: true
          name: "name"
          description: "description"
          id: 5
          title: "title"
          subscribedApplications:
          - 7
          - 7
        name: "name"
        modified: "2000-01-23T04:56:07.000+00:00"
        currency: "currency"
        attributes: "{}"
        id: 6
        key: "key"
        limits:
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
      - created: "2000-01-23T04:56:07.000+00:00"
        timezone: "timezone"
        description: "description"
        caseSensitivity: "sensitive"
        accountId: 1
        loyaltyPrograms:
        - accountID: 2
          defaultValidity: "defaultValidity"
          allowSubledger: true
          name: "name"
          description: "description"
          id: 5
          title: "title"
          subscribedApplications:
          - 7
          - 7
        - accountID: 2
          defaultValidity: "defaultValidity"
          allowSubledger: true
          name: "name"
          description: "description"
          id: 5
          title: "title"
          subscribedApplications:
          - 7
          - 7
        name: "name"
        modified: "2000-01-23T04:56:07.000+00:00"
        currency: "currency"
        attributes: "{}"
        id: 6
        key: "key"
        limits:
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
      totalResultSize: 0
  inline_response_200_3:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Campaign"
    example:
      data:
      - activeRulesetId: 5
        updatedBy: "updatedBy"
        created: "2000-01-23T04:56:07.000+00:00"
        discountCount: 9
        description: "description"
        couponRedemptionCount: 2
        userId: 5
        tags:
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        features:
        - "coupons"
        - "coupons"
        - "coupons"
        createdBy: "createdBy"
        name: "name"
        referralSettings:
          couponPattern: "couponPattern"
          validCharacters:
          - "validCharacters"
          - "validCharacters"
        couponSettings:
          couponPattern: "couponPattern"
          validCharacters:
          - "validCharacters"
          - "validCharacters"
        startTime: "2000-01-23T04:56:07.000+00:00"
        attributes: "{}"
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        id: 6
        endTime: "2000-01-23T04:56:07.000+00:00"
        state: "enabled"
        applicationId: 1
        referralRedemptionCount: 7
        updated: "2000-01-23T04:56:07.000+00:00"
        limits:
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
      - activeRulesetId: 5
        updatedBy: "updatedBy"
        created: "2000-01-23T04:56:07.000+00:00"
        discountCount: 9
        description: "description"
        couponRedemptionCount: 2
        userId: 5
        tags:
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        - "tags"
        features:
        - "coupons"
        - "coupons"
        - "coupons"
        createdBy: "createdBy"
        name: "name"
        referralSettings:
          couponPattern: "couponPattern"
          validCharacters:
          - "validCharacters"
          - "validCharacters"
        couponSettings:
          couponPattern: "couponPattern"
          validCharacters:
          - "validCharacters"
          - "validCharacters"
        startTime: "2000-01-23T04:56:07.000+00:00"
        attributes: "{}"
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        id: 6
        endTime: "2000-01-23T04:56:07.000+00:00"
        state: "enabled"
        applicationId: 1
        referralRedemptionCount: 7
        updated: "2000-01-23T04:56:07.000+00:00"
        limits:
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
        - entities:
          - "Coupon"
          - "Coupon"
          limit: 0.59621339166831821554382031536079011857509613037109375
          action: "redeemCoupon"
      totalResultSize: 0
  inline_response_200_4:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Ruleset"
    example:
      data:
      - rbVersion: "rbVersion"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 1
        bindings:
        - expression:
          - "{}"
          - "{}"
          name: "name"
        - expression:
          - "{}"
          - "{}"
          name: "name"
        activatedAt: "2000-01-23T04:56:07.000+00:00"
        activate: true
        rules:
        - condition:
          - "{}"
          - "{}"
          effects:
          - "{}"
          - "{}"
          bindings:
          - expression:
            - "{}"
            - "{}"
            name: "name"
          - expression:
            - "{}"
            - "{}"
            name: "name"
          description: "description"
          title: "title"
        - condition:
          - "{}"
          - "{}"
          effects:
          - "{}"
          - "{}"
          bindings:
          - expression:
            - "{}"
            - "{}"
            name: "name"
          - expression:
            - "{}"
            - "{}"
            name: "name"
          description: "description"
          title: "title"
        id: 6
        userId: 5
      - rbVersion: "rbVersion"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 1
        bindings:
        - expression:
          - "{}"
          - "{}"
          name: "name"
        - expression:
          - "{}"
          - "{}"
          name: "name"
        activatedAt: "2000-01-23T04:56:07.000+00:00"
        activate: true
        rules:
        - condition:
          - "{}"
          - "{}"
          effects:
          - "{}"
          - "{}"
          bindings:
          - expression:
            - "{}"
            - "{}"
            name: "name"
          - expression:
            - "{}"
            - "{}"
            name: "name"
          description: "description"
          title: "title"
        - condition:
          - "{}"
          - "{}"
          effects:
          - "{}"
          - "{}"
          bindings:
          - expression:
            - "{}"
            - "{}"
            name: "name"
          - expression:
            - "{}"
            - "{}"
            name: "name"
          description: "description"
          title: "title"
        id: 6
        userId: 5
      totalResultSize: 0
  inline_response_200_5:
    required:
    - "data"
    - "hasMore"
    properties:
      hasMore:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Coupon"
    example:
      data:
      - recipientIntegrationId: "recipientIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 146581
        referralId: 5
        usageCounter: 5
        batchId: "batchId"
        expiryDate: "2000-01-23T04:56:07.000+00:00"
        importId: 2
        reservation: true
        attributes: "{}"
        id: 0
        value: "value"
        startDate: "2000-01-23T04:56:07.000+00:00"
      - recipientIntegrationId: "recipientIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 146581
        referralId: 5
        usageCounter: 5
        batchId: "batchId"
        expiryDate: "2000-01-23T04:56:07.000+00:00"
        importId: 2
        reservation: true
        attributes: "{}"
        id: 0
        value: "value"
        startDate: "2000-01-23T04:56:07.000+00:00"
      hasMore: true
  inline_response_200_6:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Referral"
    example:
      data:
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        code: "code"
        friendProfileIntegrationId: "friendProfileIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 0
        id: 0
        usageCounter: 1
        advocateProfileIntegrationId: "advocateProfileIntegrationId"
        startDate: "2000-01-23T04:56:07.000+00:00"
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        code: "code"
        friendProfileIntegrationId: "friendProfileIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 0
        id: 0
        usageCounter: 1
        advocateProfileIntegrationId: "advocateProfileIntegrationId"
        startDate: "2000-01-23T04:56:07.000+00:00"
      totalResultSize: 0
  inline_response_200_7:
    required:
    - "data"
    - "hasMore"
    properties:
      hasMore:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Referral"
    example:
      data:
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        code: "code"
        friendProfileIntegrationId: "friendProfileIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 0
        id: 0
        usageCounter: 1
        advocateProfileIntegrationId: "advocateProfileIntegrationId"
        startDate: "2000-01-23T04:56:07.000+00:00"
      - expiryDate: "2000-01-23T04:56:07.000+00:00"
        code: "code"
        friendProfileIntegrationId: "friendProfileIntegrationId"
        created: "2000-01-23T04:56:07.000+00:00"
        campaignId: 6
        usageLimit: 0
        id: 0
        usageCounter: 1
        advocateProfileIntegrationId: "advocateProfileIntegrationId"
        startDate: "2000-01-23T04:56:07.000+00:00"
      hasMore: true
  inline_response_200_8:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/LoyaltyProgram"
    example:
      data:
      - accountID: 2
        defaultValidity: "defaultValidity"
        allowSubledger: true
        name: "name"
        description: "description"
        id: 5
        title: "title"
        subscribedApplications:
        - 7
        - 7
      - accountID: 2
        defaultValidity: "defaultValidity"
        allowSubledger: true
        name: "name"
        description: "description"
        id: 5
        title: "title"
        subscribedApplications:
        - 7
        - 7
      totalResultSize: 0
  inline_response_200_9:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/AccessLogEntry"
    example:
      data:
      - method: "method"
        requestPayload: "requestPayload"
        responsePayload: "responsePayload"
        requestUri: "requestUri"
        time: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        status: 6
      - method: "method"
        requestPayload: "requestPayload"
        responsePayload: "responsePayload"
        requestUri: "requestUri"
        time: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        status: 6
      totalResultSize: 0
  inline_response_200_10:
    required:
    - "data"
    - "hasMore"
    properties:
      hasMore:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/AccessLogEntry"
    example:
      data:
      - method: "method"
        requestPayload: "requestPayload"
        responsePayload: "responsePayload"
        requestUri: "requestUri"
        time: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        status: 6
      - method: "method"
        requestPayload: "requestPayload"
        responsePayload: "responsePayload"
        requestUri: "requestUri"
        time: "2000-01-23T04:56:07.000+00:00"
        uuid: "uuid"
        status: 6
      hasMore: true
  inline_response_200_11:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CampaignAnalytics"
    example:
      data:
      - date: "2000-01-23T04:56:07.000+00:00"
        campaignFreeItems: 2
        totalCampaignFreeItems: 7
        couponRedemptions: 9
        totalCampaignDiscountCosts: 5.63737665663332876420099637471139430999755859375
        referralRedemptions: 2
        totalCampaignRevenue: 1.46581298050294517310021547018550336360931396484375
        campaignRevenue: 6.02745618307040320615897144307382404804229736328125
        campaignDiscountCosts: 5.962133916683182377482808078639209270477294921875
        totalCouponsCreated: 1
        totalCouponRedemptions: 3
        totalReferralRedemptions: 4
        couponsCreated: 7
        referralsCreated: 1
        totalReferralsCreated: 1
      - date: "2000-01-23T04:56:07.000+00:00"
        campaignFreeItems: 2
        totalCampaignFreeItems: 7
        couponRedemptions: 9
        totalCampaignDiscountCosts: 5.63737665663332876420099637471139430999755859375
        referralRedemptions: 2
        totalCampaignRevenue: 1.46581298050294517310021547018550336360931396484375
        campaignRevenue: 6.02745618307040320615897144307382404804229736328125
        campaignDiscountCosts: 5.962133916683182377482808078639209270477294921875
        totalCouponsCreated: 1
        totalCouponRedemptions: 3
        totalReferralRedemptions: 4
        couponsCreated: 7
        referralsCreated: 1
        totalReferralsCreated: 1
      totalResultSize: 0
  inline_response_200_12:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ApplicationCustomer"
    example:
      data:
      - accountId: 1
        closedSessions: 5
        created: "2000-01-23T04:56:07.000+00:00"
        integrationId: "integrationId"
        attributes: "{}"
        totalSales: 5.63737665663332876420099637471139430999755859375
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        id: 6
        loyaltyMemberships:
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
      - accountId: 1
        closedSessions: 5
        created: "2000-01-23T04:56:07.000+00:00"
        integrationId: "integrationId"
        attributes: "{}"
        totalSales: 5.63737665663332876420099637471139430999755859375
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        id: 6
        loyaltyMemberships:
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
      totalResultSize: 0
  inline_response_200_13:
    required:
    - "data"
    - "hasMore"
    properties:
      hasMore:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ApplicationCustomer"
    example:
      data:
      - accountId: 1
        closedSessions: 5
        created: "2000-01-23T04:56:07.000+00:00"
        integrationId: "integrationId"
        attributes: "{}"
        totalSales: 5.63737665663332876420099637471139430999755859375
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        id: 6
        loyaltyMemberships:
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
      - accountId: 1
        closedSessions: 5
        created: "2000-01-23T04:56:07.000+00:00"
        integrationId: "integrationId"
        attributes: "{}"
        totalSales: 5.63737665663332876420099637471139430999755859375
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        id: 6
        loyaltyMemberships:
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
        - joined: "2000-01-23T04:56:07.000+00:00"
          loyaltyProgramId: 7
      hasMore: true
  inline_response_200_14:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CustomerActivityReport"
    example:
      data:
      - couponUseAttempts: 5
        created: "2000-01-23T04:56:07.000+00:00"
        totalOrdersNoCoupon: 3
        integrationId: "integrationId"
        couponRedemptions: 1
        couponFailedAttempts: 5
        accruedRevenue: 7.061401241503109105224211816675961017608642578125
        name: "name"
        customerId: 6
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        totalOrders: 9
        campaignName: "campaignName"
        accruedDiscounts: 2.3021358869347654518833223846741020679473876953125
      - couponUseAttempts: 5
        created: "2000-01-23T04:56:07.000+00:00"
        totalOrdersNoCoupon: 3
        integrationId: "integrationId"
        couponRedemptions: 1
        couponFailedAttempts: 5
        accruedRevenue: 7.061401241503109105224211816675961017608642578125
        name: "name"
        customerId: 6
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        totalOrders: 9
        campaignName: "campaignName"
        accruedDiscounts: 2.3021358869347654518833223846741020679473876953125
      totalResultSize: 0
  inline_response_200_15:
    required:
    - "data"
    - "hasMore"
    properties:
      hasMore:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/CustomerActivityReport"
    example:
      data:
      - couponUseAttempts: 5
        created: "2000-01-23T04:56:07.000+00:00"
        totalOrdersNoCoupon: 3
        integrationId: "integrationId"
        couponRedemptions: 1
        couponFailedAttempts: 5
        accruedRevenue: 7.061401241503109105224211816675961017608642578125
        name: "name"
        customerId: 6
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        totalOrders: 9
        campaignName: "campaignName"
        accruedDiscounts: 2.3021358869347654518833223846741020679473876953125
      - couponUseAttempts: 5
        created: "2000-01-23T04:56:07.000+00:00"
        totalOrdersNoCoupon: 3
        integrationId: "integrationId"
        couponRedemptions: 1
        couponFailedAttempts: 5
        accruedRevenue: 7.061401241503109105224211816675961017608642578125
        name: "name"
        customerId: 6
        lastActivity: "2000-01-23T04:56:07.000+00:00"
        totalOrders: 9
        campaignName: "campaignName"
        accruedDiscounts: 2.3021358869347654518833223846741020679473876953125
      hasMore: true
  inline_response_200_16:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ApplicationSession"
    example:
      data:
      - referral: "referral"
        coupon: "coupon"
        discounts:
          key: 5.63737665663332876420099637471139430999755859375
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: 5
        integrationId: "integrationId"
        attributes: "{}"
        id: 6
        state: "open"
        applicationId: 1
        cartItems:
        - quantity: 1
          price: 1.46581298050294517310021547018550336360931396484375
          name: "name"
          width: 2.3021358869347654518833223846741020679473876953125
          length: 7.061401241503109105224211816675961017608642578125
          weight: 5.962133916683182377482808078639209270477294921875
          attributes: "{}"
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883935952142337555414997041225433349609375
            payFromLoyaltyProgram: 3
          position: 9.301444243932575517419536481611430644989013671875
          sku: "sku"
          category: "category"
          height: 5.63737665663332876420099637471139430999755859375
        - quantity: 1
          price: 1.46581298050294517310021547018550336360931396484375
          name: "name"
          width: 2.3021358869347654518833223846741020679473876953125
          length: 7.061401241503109105224211816675961017608642578125
          weight: 5.962133916683182377482808078639209270477294921875
          attributes: "{}"
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883935952142337555414997041225433349609375
            payFromLoyaltyProgram: 3
          position: 9.301444243932575517419536481611430644989013671875
          sku: "sku"
          category: "category"
          height: 5.63737665663332876420099637471139430999755859375
      - referral: "referral"
        coupon: "coupon"
        discounts:
          key: 5.63737665663332876420099637471139430999755859375
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: 5
        integrationId: "integrationId"
        attributes: "{}"
        id: 6
        state: "open"
        applicationId: 1
        cartItems:
        - quantity: 1
          price: 1.46581298050294517310021547018550336360931396484375
          name: "name"
          width: 2.3021358869347654518833223846741020679473876953125
          length: 7.061401241503109105224211816675961017608642578125
          weight: 5.962133916683182377482808078639209270477294921875
          attributes: "{}"
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883935952142337555414997041225433349609375
            payFromLoyaltyProgram: 3
          position: 9.301444243932575517419536481611430644989013671875
          sku: "sku"
          category: "category"
          height: 5.63737665663332876420099637471139430999755859375
        - quantity: 1
          price: 1.46581298050294517310021547018550336360931396484375
          name: "name"
          width: 2.3021358869347654518833223846741020679473876953125
          length: 7.061401241503109105224211816675961017608642578125
          weight: 5.962133916683182377482808078639209270477294921875
          attributes: "{}"
          adjustment:
            pointPayment: 1
            remainingPrice: 0.4145608029883935952142337555414997041225433349609375
            payFromLoyaltyProgram: 3
          position: 9.301444243932575517419536481611430644989013671875
          sku: "sku"
          category: "category"
          height: 5.63737665663332876420099637471139430999755859375
      totalResultSize: 0
  inline_response_200_17:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ApplicationEvent"
    example:
      data:
      - effects:
        - "{}"
        - "{}"
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: 5
        attributes: "{}"
        id: 6
        sessionId: 5
        applicationId: 1
        type: "type"
      - effects:
        - "{}"
        - "{}"
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: 5
        attributes: "{}"
        id: 6
        sessionId: 5
        applicationId: 1
        type: "type"
      totalResultSize: 0
  inline_response_200_18:
    required:
    - "data"
    - "hasMore"
    properties:
      hasMore:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/ApplicationEvent"
    example:
      data:
      - effects:
        - "{}"
        - "{}"
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: 5
        attributes: "{}"
        id: 6
        sessionId: 5
        applicationId: 1
        type: "type"
      - effects:
        - "{}"
        - "{}"
        created: "2000-01-23T04:56:07.000+00:00"
        profileId: 5
        attributes: "{}"
        id: 6
        sessionId: 5
        applicationId: 1
        type: "type"
      hasMore: true
  inline_response_200_19:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          type: "string"
    example:
      data:
      - "data"
      - "data"
      totalResultSize: 0
  inline_response_200_20:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Webhook"
    example:
      data:
      - headers:
        - "headers"
        - "headers"
        payload: "payload"
        created: "2000-01-23T04:56:07.000+00:00"
        verb: "POST"
        modified: "2000-01-23T04:56:07.000+00:00"
        usedAt:
        - "usedAt"
        - "usedAt"
        id: 6
        title: "title"
        params:
        - ui: "{}"
          description: "description"
          type: "string"
          title: "title"
        - ui: "{}"
          description: "description"
          type: "string"
          title: "title"
        url: "url"
        enabled: true
        applicationIds:
        - 1
        - 1
      - headers:
        - "headers"
        - "headers"
        payload: "payload"
        created: "2000-01-23T04:56:07.000+00:00"
        verb: "POST"
        modified: "2000-01-23T04:56:07.000+00:00"
        usedAt:
        - "usedAt"
        - "usedAt"
        id: 6
        title: "title"
        params:
        - ui: "{}"
          description: "description"
          type: "string"
          title: "title"
        - ui: "{}"
          description: "description"
          type: "string"
          title: "title"
        url: "url"
        enabled: true
        applicationIds:
        - 1
        - 1
      totalResultSize: 0
  inline_response_200_21:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/WebhookActivationLogEntry"
    example:
      data:
      - webhookId: 6
        campaignId: 5
        created: "2000-01-23T04:56:07.000+00:00"
        integrationRequestUuid: "integrationRequestUuid"
        applicationId: 1
      - webhookId: 6
        campaignId: 5
        created: "2000-01-23T04:56:07.000+00:00"
        integrationRequestUuid: "integrationRequestUuid"
        applicationId: 1
      totalResultSize: 0
  inline_response_200_22:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/WebhookLogEntry"
    example:
      data:
      - requestTime: "2000-01-23T04:56:07.000+00:00"
        request: "request"
        webhookId: 6
        response: "response"
        responseTime: "2000-01-23T04:56:07.000+00:00"
        integrationRequestUuid: "integrationRequestUuid"
        id: "id"
        applicationId: 1
        url: "url"
        status: 5
      - requestTime: "2000-01-23T04:56:07.000+00:00"
        request: "request"
        webhookId: 6
        response: "response"
        responseTime: "2000-01-23T04:56:07.000+00:00"
        integrationRequestUuid: "integrationRequestUuid"
        id: "id"
        applicationId: 1
        url: "url"
        status: 5
      totalResultSize: 0
  inline_response_200_23:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/EventType"
    example:
      data:
      - schema: "{}"
        handler: "handler"
        examplePayload: "examplePayload"
        created: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        description: "description"
        id: 6
        mimeType: "application/json"
        handlerLanguage: "talang"
        title: "title"
        version: 5
        applicationIds:
        - 1
        - 1
      - schema: "{}"
        handler: "handler"
        examplePayload: "examplePayload"
        created: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        description: "description"
        id: 6
        mimeType: "application/json"
        handlerLanguage: "talang"
        title: "title"
        version: 5
        applicationIds:
        - 1
        - 1
      totalResultSize: 0
  inline_response_200_24:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/User"
    example:
      data:
      - accountId: 1
        inviteToken: "inviteToken"
        releaseUpdate: true
        created: "2000-01-23T04:56:07.000+00:00"
        roles:
        - 5
        - 5
        name: "name"
        modified: "2000-01-23T04:56:07.000+00:00"
        id: 6
        state: "invited"
        latestFeature: "latestFeature"
        email: "email"
        policy: "policy"
      - accountId: 1
        inviteToken: "inviteToken"
        releaseUpdate: true
        created: "2000-01-23T04:56:07.000+00:00"
        roles:
        - 5
        - 5
        name: "name"
        modified: "2000-01-23T04:56:07.000+00:00"
        id: 6
        state: "invited"
        latestFeature: "latestFeature"
        email: "email"
        policy: "policy"
      totalResultSize: 0
  inline_response_200_25:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Change"
    example:
      data:
      - new: "{}"
        created: "2000-01-23T04:56:07.000+00:00"
        old: "{}"
        id: 6
        userId: 1
        entity: "entity"
      - new: "{}"
        created: "2000-01-23T04:56:07.000+00:00"
        old: "{}"
        id: 6
        userId: 1
        entity: "entity"
      totalResultSize: 0
  inline_response_200_26:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Export"
    example:
      data:
      - filter: "{}"
        accountId: 1
        created: "2000-01-23T04:56:07.000+00:00"
        id: 6
        userId: 5
        entity: "Coupon"
      - filter: "{}"
        accountId: 1
        created: "2000-01-23T04:56:07.000+00:00"
        id: 6
        userId: 5
        entity: "Coupon"
      totalResultSize: 0
  inline_response_200_27:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Import"
    example:
      data:
      - accountId: 1
        amount: 0
        created: "2000-01-23T04:56:07.000+00:00"
        id: 6
        userId: 5
        entity: "Coupon"
      - accountId: 1
        amount: 0
        created: "2000-01-23T04:56:07.000+00:00"
        id: 6
        userId: 5
        entity: "Coupon"
      totalResultSize: 0
  inline_response_200_28:
    required:
    - "data"
    - "totalResultSize"
    properties:
      totalResultSize:
        type: "integer"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Role"
    example:
      data:
      - accountID: 1
        members:
        - 5
        - 5
        name: "name"
        description: "description"
        id: 6
        acl: "acl"
      - accountID: 1
        members:
        - 5
        - 5
        name: "name"
        description: "description"
        id: 6
        acl: "acl"
      totalResultSize: 0
