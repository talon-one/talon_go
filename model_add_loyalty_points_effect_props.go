/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`
 *
 * API version:
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// AddLoyaltyPointsEffectProps The properties specific to the \"addLoyaltyPoints\" effect. This gets triggered whenever a validated rule contained an \"add loyalty\" effect. These points are automatically stored and managed inside Talon.One.
type AddLoyaltyPointsEffectProps struct {
	// The name / description of this loyalty point addition.
	Name string `json:"name"`
	// The ID of the loyalty program where these points were added.
	ProgramId int32 `json:"programId"`
	// The ID of the subledger within the loyalty program where these points were added.
	SubLedgerId string `json:"subLedgerId"`
	// The amount of points that were added.
	Value float32 `json:"value"`
	// The original amount of loyalty points to be awarded.
	DesiredValue *float32 `json:"desiredValue,omitempty"`
	// The user for whom these points were added.
	RecipientIntegrationId string `json:"recipientIntegrationId"`
	// Date after which points will be valid.
	StartDate *time.Time `json:"startDate,omitempty"`
	// Date after which points will expire.
	ExpiryDate *time.Time `json:"expiryDate,omitempty"`
	// The identifier of this addition in the loyalty ledger.
	TransactionUUID string `json:"transactionUUID"`
	// The index of the item in the cart items list on which the loyal points addition should be applied.
	CartItemPosition *float32 `json:"cartItemPosition,omitempty"`
	// The sub position is triggered when application flattening is enabled. It indicates to which item the loyalty points addition applies, for cart items with `quantity` > 1.
	CartItemSubPosition *float32 `json:"cartItemSubPosition,omitempty"`
	// The alphanumeric identifier of the loyalty card.
	CardIdentifier *string `json:"cardIdentifier,omitempty"`
	// The position of the bundle in a list of item bundles created from the same bundle definition.
	BundleIndex *int32 `json:"bundleIndex,omitempty"`
	// The name of the bundle definition.
	BundleName *string `json:"bundleName,omitempty"`
}

// GetName returns the Name field value
func (o *AddLoyaltyPointsEffectProps) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *AddLoyaltyPointsEffectProps) SetName(v string) {
	o.Name = v
}

// GetProgramId returns the ProgramId field value
func (o *AddLoyaltyPointsEffectProps) GetProgramId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProgramId
}

// SetProgramId sets field value
func (o *AddLoyaltyPointsEffectProps) SetProgramId(v int32) {
	o.ProgramId = v
}

// GetSubLedgerId returns the SubLedgerId field value
func (o *AddLoyaltyPointsEffectProps) GetSubLedgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubLedgerId
}

// SetSubLedgerId sets field value
func (o *AddLoyaltyPointsEffectProps) SetSubLedgerId(v string) {
	o.SubLedgerId = v
}

// GetValue returns the Value field value
func (o *AddLoyaltyPointsEffectProps) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// SetValue sets field value
func (o *AddLoyaltyPointsEffectProps) SetValue(v float32) {
	o.Value = v
}

// GetDesiredValue returns the DesiredValue field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetDesiredValue() float32 {
	if o == nil || o.DesiredValue == nil {
		var ret float32
		return ret
	}
	return *o.DesiredValue
}

// GetDesiredValueOk returns a tuple with the DesiredValue field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetDesiredValueOk() (float32, bool) {
	if o == nil || o.DesiredValue == nil {
		var ret float32
		return ret, false
	}
	return *o.DesiredValue, true
}

// HasDesiredValue returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasDesiredValue() bool {
	if o != nil && o.DesiredValue != nil {
		return true
	}

	return false
}

// SetDesiredValue gets a reference to the given float32 and assigns it to the DesiredValue field.
func (o *AddLoyaltyPointsEffectProps) SetDesiredValue(v float32) {
	o.DesiredValue = &v
}

// GetRecipientIntegrationId returns the RecipientIntegrationId field value
func (o *AddLoyaltyPointsEffectProps) GetRecipientIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientIntegrationId
}

// SetRecipientIntegrationId sets field value
func (o *AddLoyaltyPointsEffectProps) SetRecipientIntegrationId(v string) {
	o.RecipientIntegrationId = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetStartDateOk() (time.Time, bool) {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret, false
	}
	return *o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *AddLoyaltyPointsEffectProps) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetExpiryDate() time.Time {
	if o == nil || o.ExpiryDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetExpiryDateOk() (time.Time, bool) {
	if o == nil || o.ExpiryDate == nil {
		var ret time.Time
		return ret, false
	}
	return *o.ExpiryDate, true
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate != nil {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given time.Time and assigns it to the ExpiryDate field.
func (o *AddLoyaltyPointsEffectProps) SetExpiryDate(v time.Time) {
	o.ExpiryDate = &v
}

// GetTransactionUUID returns the TransactionUUID field value
func (o *AddLoyaltyPointsEffectProps) GetTransactionUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionUUID
}

// SetTransactionUUID sets field value
func (o *AddLoyaltyPointsEffectProps) SetTransactionUUID(v string) {
	o.TransactionUUID = v
}

// GetCartItemPosition returns the CartItemPosition field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetCartItemPosition() float32 {
	if o == nil || o.CartItemPosition == nil {
		var ret float32
		return ret
	}
	return *o.CartItemPosition
}

// GetCartItemPositionOk returns a tuple with the CartItemPosition field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetCartItemPositionOk() (float32, bool) {
	if o == nil || o.CartItemPosition == nil {
		var ret float32
		return ret, false
	}
	return *o.CartItemPosition, true
}

// HasCartItemPosition returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasCartItemPosition() bool {
	if o != nil && o.CartItemPosition != nil {
		return true
	}

	return false
}

// SetCartItemPosition gets a reference to the given float32 and assigns it to the CartItemPosition field.
func (o *AddLoyaltyPointsEffectProps) SetCartItemPosition(v float32) {
	o.CartItemPosition = &v
}

// GetCartItemSubPosition returns the CartItemSubPosition field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetCartItemSubPosition() float32 {
	if o == nil || o.CartItemSubPosition == nil {
		var ret float32
		return ret
	}
	return *o.CartItemSubPosition
}

// GetCartItemSubPositionOk returns a tuple with the CartItemSubPosition field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetCartItemSubPositionOk() (float32, bool) {
	if o == nil || o.CartItemSubPosition == nil {
		var ret float32
		return ret, false
	}
	return *o.CartItemSubPosition, true
}

// HasCartItemSubPosition returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasCartItemSubPosition() bool {
	if o != nil && o.CartItemSubPosition != nil {
		return true
	}

	return false
}

// SetCartItemSubPosition gets a reference to the given float32 and assigns it to the CartItemSubPosition field.
func (o *AddLoyaltyPointsEffectProps) SetCartItemSubPosition(v float32) {
	o.CartItemSubPosition = &v
}

// GetCardIdentifier returns the CardIdentifier field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetCardIdentifier() string {
	if o == nil || o.CardIdentifier == nil {
		var ret string
		return ret
	}
	return *o.CardIdentifier
}

// GetCardIdentifierOk returns a tuple with the CardIdentifier field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetCardIdentifierOk() (string, bool) {
	if o == nil || o.CardIdentifier == nil {
		var ret string
		return ret, false
	}
	return *o.CardIdentifier, true
}

// HasCardIdentifier returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasCardIdentifier() bool {
	if o != nil && o.CardIdentifier != nil {
		return true
	}

	return false
}

// SetCardIdentifier gets a reference to the given string and assigns it to the CardIdentifier field.
func (o *AddLoyaltyPointsEffectProps) SetCardIdentifier(v string) {
	o.CardIdentifier = &v
}

// GetBundleIndex returns the BundleIndex field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetBundleIndex() int32 {
	if o == nil || o.BundleIndex == nil {
		var ret int32
		return ret
	}
	return *o.BundleIndex
}

// GetBundleIndexOk returns a tuple with the BundleIndex field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetBundleIndexOk() (int32, bool) {
	if o == nil || o.BundleIndex == nil {
		var ret int32
		return ret, false
	}
	return *o.BundleIndex, true
}

// HasBundleIndex returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasBundleIndex() bool {
	if o != nil && o.BundleIndex != nil {
		return true
	}

	return false
}

// SetBundleIndex gets a reference to the given int32 and assigns it to the BundleIndex field.
func (o *AddLoyaltyPointsEffectProps) SetBundleIndex(v int32) {
	o.BundleIndex = &v
}

// GetBundleName returns the BundleName field value if set, zero value otherwise.
func (o *AddLoyaltyPointsEffectProps) GetBundleName() string {
	if o == nil || o.BundleName == nil {
		var ret string
		return ret
	}
	return *o.BundleName
}

// GetBundleNameOk returns a tuple with the BundleName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *AddLoyaltyPointsEffectProps) GetBundleNameOk() (string, bool) {
	if o == nil || o.BundleName == nil {
		var ret string
		return ret, false
	}
	return *o.BundleName, true
}

// HasBundleName returns a boolean if a field has been set.
func (o *AddLoyaltyPointsEffectProps) HasBundleName() bool {
	if o != nil && o.BundleName != nil {
		return true
	}

	return false
}

// SetBundleName gets a reference to the given string and assigns it to the BundleName field.
func (o *AddLoyaltyPointsEffectProps) SetBundleName(v string) {
	o.BundleName = &v
}

type NullableAddLoyaltyPointsEffectProps struct {
	Value        AddLoyaltyPointsEffectProps
	ExplicitNull bool
}

func (v NullableAddLoyaltyPointsEffectProps) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableAddLoyaltyPointsEffectProps) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
