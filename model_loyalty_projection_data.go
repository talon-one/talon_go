/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// LoyaltyProjectionData struct for LoyaltyProjectionData
type LoyaltyProjectionData struct {
	// Specific date of projection.
	Date time.Time `json:"date"`
	// Points that will be expired by the specified date.
	ExpiringPoints float32 `json:"expiringPoints"`
	// Points that will be active by the specified date.
	ActivatingPoints float32 `json:"activatingPoints"`
	// Current balance plus projected active points, minus expiring points.
	ProjectedBalance float32 `json:"projectedBalance"`
}

// GetDate returns the Date field value
func (o *LoyaltyProjectionData) GetDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Date
}

// SetDate sets field value
func (o *LoyaltyProjectionData) SetDate(v time.Time) {
	o.Date = v
}

// GetExpiringPoints returns the ExpiringPoints field value
func (o *LoyaltyProjectionData) GetExpiringPoints() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExpiringPoints
}

// SetExpiringPoints sets field value
func (o *LoyaltyProjectionData) SetExpiringPoints(v float32) {
	o.ExpiringPoints = v
}

// GetActivatingPoints returns the ActivatingPoints field value
func (o *LoyaltyProjectionData) GetActivatingPoints() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ActivatingPoints
}

// SetActivatingPoints sets field value
func (o *LoyaltyProjectionData) SetActivatingPoints(v float32) {
	o.ActivatingPoints = v
}

// GetProjectedBalance returns the ProjectedBalance field value
func (o *LoyaltyProjectionData) GetProjectedBalance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProjectedBalance
}

// SetProjectedBalance sets field value
func (o *LoyaltyProjectionData) SetProjectedBalance(v float32) {
	o.ProjectedBalance = v
}

type NullableLoyaltyProjectionData struct {
	Value        LoyaltyProjectionData
	ExplicitNull bool
}

func (v NullableLoyaltyProjectionData) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLoyaltyProjectionData) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
