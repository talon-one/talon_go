/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
	"time"
)

// Account
type Account struct {
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
	// The exact moment this entity was created.
	Created time.Time `json:"created"`
	// The exact moment this entity was last modified.
	Modified    time.Time `json:"modified"`
	CompanyName string    `json:"companyName"`
	// Subdomain Name for yourcompany.talon.one.
	DomainName string `json:"domainName"`
	// State of the account (active, deactivated).
	State string `json:"state"`
	// The billing email address associated with your company account.
	BillingEmail string `json:"billingEmail"`
	// The name of your booked plan.
	PlanName *string `json:"planName,omitempty"`
	// The point in time at which your current plan expires.
	PlanExpires *time.Time `json:"planExpires,omitempty"`
	// The maximum number of Applications covered by your plan.
	ApplicationLimit *int32 `json:"applicationLimit,omitempty"`
	// The maximum number of Campaign Manager Users covered by your plan.
	UserLimit *int32 `json:"userLimit,omitempty"`
	// The maximum number of Campaigns covered by your plan.
	CampaignLimit *int32 `json:"campaignLimit,omitempty"`
	// The maximum number of Integration API calls covered by your plan per billing period.
	ApiLimit *int32 `json:"apiLimit,omitempty"`
	// The current number of Applications in your account.
	ApplicationCount int32 `json:"applicationCount"`
	// The current number of Campaign Manager Users in your account.
	UserCount int32 `json:"userCount"`
	// The current number of active Campaigns in your account.
	CampaignsActiveCount int32 `json:"campaignsActiveCount"`
	// The current number of inactive Campaigns in your account.
	CampaignsInactiveCount int32 `json:"campaignsInactiveCount"`
	// Arbitrary properties associated with this campaign.
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
}

// GetId returns the Id field value
func (o *Account) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *Account) SetId(v int32) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *Account) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// SetCreated sets field value
func (o *Account) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *Account) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// SetModified sets field value
func (o *Account) SetModified(v time.Time) {
	o.Modified = v
}

// GetCompanyName returns the CompanyName field value
func (o *Account) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// SetCompanyName sets field value
func (o *Account) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetDomainName returns the DomainName field value
func (o *Account) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// SetDomainName sets field value
func (o *Account) SetDomainName(v string) {
	o.DomainName = v
}

// GetState returns the State field value
func (o *Account) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// SetState sets field value
func (o *Account) SetState(v string) {
	o.State = v
}

// GetBillingEmail returns the BillingEmail field value
func (o *Account) GetBillingEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingEmail
}

// SetBillingEmail sets field value
func (o *Account) SetBillingEmail(v string) {
	o.BillingEmail = v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *Account) GetPlanName() string {
	if o == nil || o.PlanName == nil {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetPlanNameOk() (string, bool) {
	if o == nil || o.PlanName == nil {
		var ret string
		return ret, false
	}
	return *o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *Account) HasPlanName() bool {
	if o != nil && o.PlanName != nil {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *Account) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlanExpires returns the PlanExpires field value if set, zero value otherwise.
func (o *Account) GetPlanExpires() time.Time {
	if o == nil || o.PlanExpires == nil {
		var ret time.Time
		return ret
	}
	return *o.PlanExpires
}

// GetPlanExpiresOk returns a tuple with the PlanExpires field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetPlanExpiresOk() (time.Time, bool) {
	if o == nil || o.PlanExpires == nil {
		var ret time.Time
		return ret, false
	}
	return *o.PlanExpires, true
}

// HasPlanExpires returns a boolean if a field has been set.
func (o *Account) HasPlanExpires() bool {
	if o != nil && o.PlanExpires != nil {
		return true
	}

	return false
}

// SetPlanExpires gets a reference to the given time.Time and assigns it to the PlanExpires field.
func (o *Account) SetPlanExpires(v time.Time) {
	o.PlanExpires = &v
}

// GetApplicationLimit returns the ApplicationLimit field value if set, zero value otherwise.
func (o *Account) GetApplicationLimit() int32 {
	if o == nil || o.ApplicationLimit == nil {
		var ret int32
		return ret
	}
	return *o.ApplicationLimit
}

// GetApplicationLimitOk returns a tuple with the ApplicationLimit field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetApplicationLimitOk() (int32, bool) {
	if o == nil || o.ApplicationLimit == nil {
		var ret int32
		return ret, false
	}
	return *o.ApplicationLimit, true
}

// HasApplicationLimit returns a boolean if a field has been set.
func (o *Account) HasApplicationLimit() bool {
	if o != nil && o.ApplicationLimit != nil {
		return true
	}

	return false
}

// SetApplicationLimit gets a reference to the given int32 and assigns it to the ApplicationLimit field.
func (o *Account) SetApplicationLimit(v int32) {
	o.ApplicationLimit = &v
}

// GetUserLimit returns the UserLimit field value if set, zero value otherwise.
func (o *Account) GetUserLimit() int32 {
	if o == nil || o.UserLimit == nil {
		var ret int32
		return ret
	}
	return *o.UserLimit
}

// GetUserLimitOk returns a tuple with the UserLimit field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetUserLimitOk() (int32, bool) {
	if o == nil || o.UserLimit == nil {
		var ret int32
		return ret, false
	}
	return *o.UserLimit, true
}

// HasUserLimit returns a boolean if a field has been set.
func (o *Account) HasUserLimit() bool {
	if o != nil && o.UserLimit != nil {
		return true
	}

	return false
}

// SetUserLimit gets a reference to the given int32 and assigns it to the UserLimit field.
func (o *Account) SetUserLimit(v int32) {
	o.UserLimit = &v
}

// GetCampaignLimit returns the CampaignLimit field value if set, zero value otherwise.
func (o *Account) GetCampaignLimit() int32 {
	if o == nil || o.CampaignLimit == nil {
		var ret int32
		return ret
	}
	return *o.CampaignLimit
}

// GetCampaignLimitOk returns a tuple with the CampaignLimit field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCampaignLimitOk() (int32, bool) {
	if o == nil || o.CampaignLimit == nil {
		var ret int32
		return ret, false
	}
	return *o.CampaignLimit, true
}

// HasCampaignLimit returns a boolean if a field has been set.
func (o *Account) HasCampaignLimit() bool {
	if o != nil && o.CampaignLimit != nil {
		return true
	}

	return false
}

// SetCampaignLimit gets a reference to the given int32 and assigns it to the CampaignLimit field.
func (o *Account) SetCampaignLimit(v int32) {
	o.CampaignLimit = &v
}

// GetApiLimit returns the ApiLimit field value if set, zero value otherwise.
func (o *Account) GetApiLimit() int32 {
	if o == nil || o.ApiLimit == nil {
		var ret int32
		return ret
	}
	return *o.ApiLimit
}

// GetApiLimitOk returns a tuple with the ApiLimit field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetApiLimitOk() (int32, bool) {
	if o == nil || o.ApiLimit == nil {
		var ret int32
		return ret, false
	}
	return *o.ApiLimit, true
}

// HasApiLimit returns a boolean if a field has been set.
func (o *Account) HasApiLimit() bool {
	if o != nil && o.ApiLimit != nil {
		return true
	}

	return false
}

// SetApiLimit gets a reference to the given int32 and assigns it to the ApiLimit field.
func (o *Account) SetApiLimit(v int32) {
	o.ApiLimit = &v
}

// GetApplicationCount returns the ApplicationCount field value
func (o *Account) GetApplicationCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationCount
}

// SetApplicationCount sets field value
func (o *Account) SetApplicationCount(v int32) {
	o.ApplicationCount = v
}

// GetUserCount returns the UserCount field value
func (o *Account) GetUserCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserCount
}

// SetUserCount sets field value
func (o *Account) SetUserCount(v int32) {
	o.UserCount = v
}

// GetCampaignsActiveCount returns the CampaignsActiveCount field value
func (o *Account) GetCampaignsActiveCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CampaignsActiveCount
}

// SetCampaignsActiveCount sets field value
func (o *Account) SetCampaignsActiveCount(v int32) {
	o.CampaignsActiveCount = v
}

// GetCampaignsInactiveCount returns the CampaignsInactiveCount field value
func (o *Account) GetCampaignsInactiveCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CampaignsInactiveCount
}

// SetCampaignsInactiveCount sets field value
func (o *Account) SetCampaignsInactiveCount(v int32) {
	o.CampaignsInactiveCount = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Account) GetAttributes() map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Account) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *Account) SetAttributes(v map[string]interface{}) {
	o.Attributes = &v
}

type NullableAccount struct {
	Value        Account
	ExplicitNull bool
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
