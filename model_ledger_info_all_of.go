/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// LedgerInfoAllOf struct for LedgerInfoAllOf
type LedgerInfoAllOf struct {
	CurrentTier *Tier `json:"currentTier,omitempty"`
	// Points required to move up a tier.
	PointsToNextTier *float32 `json:"pointsToNextTier,omitempty"`
}

// GetCurrentTier returns the CurrentTier field value if set, zero value otherwise.
func (o *LedgerInfoAllOf) GetCurrentTier() Tier {
	if o == nil || o.CurrentTier == nil {
		var ret Tier
		return ret
	}
	return *o.CurrentTier
}

// GetCurrentTierOk returns a tuple with the CurrentTier field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LedgerInfoAllOf) GetCurrentTierOk() (Tier, bool) {
	if o == nil || o.CurrentTier == nil {
		var ret Tier
		return ret, false
	}
	return *o.CurrentTier, true
}

// HasCurrentTier returns a boolean if a field has been set.
func (o *LedgerInfoAllOf) HasCurrentTier() bool {
	if o != nil && o.CurrentTier != nil {
		return true
	}

	return false
}

// SetCurrentTier gets a reference to the given Tier and assigns it to the CurrentTier field.
func (o *LedgerInfoAllOf) SetCurrentTier(v Tier) {
	o.CurrentTier = &v
}

// GetPointsToNextTier returns the PointsToNextTier field value if set, zero value otherwise.
func (o *LedgerInfoAllOf) GetPointsToNextTier() float32 {
	if o == nil || o.PointsToNextTier == nil {
		var ret float32
		return ret
	}
	return *o.PointsToNextTier
}

// GetPointsToNextTierOk returns a tuple with the PointsToNextTier field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *LedgerInfoAllOf) GetPointsToNextTierOk() (float32, bool) {
	if o == nil || o.PointsToNextTier == nil {
		var ret float32
		return ret, false
	}
	return *o.PointsToNextTier, true
}

// HasPointsToNextTier returns a boolean if a field has been set.
func (o *LedgerInfoAllOf) HasPointsToNextTier() bool {
	if o != nil && o.PointsToNextTier != nil {
		return true
	}

	return false
}

// SetPointsToNextTier gets a reference to the given float32 and assigns it to the PointsToNextTier field.
func (o *LedgerInfoAllOf) SetPointsToNextTier(v float32) {
	o.PointsToNextTier = &v
}

type NullableLedgerInfoAllOf struct {
	Value LedgerInfoAllOf
	ExplicitNull bool
}

func (v NullableLedgerInfoAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableLedgerInfoAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
