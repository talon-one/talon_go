/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CatalogAction Definition of all the properties that are needed for a single catalog sync action.
type CatalogAction struct {
	// The type of sync action.
	Type    string                 `json:"type"`
	Payload map[string]interface{} `json:"payload"`
}

// GetType returns the Type field value
func (o *CatalogAction) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// SetType sets field value
func (o *CatalogAction) SetType(v string) {
	o.Type = v
}

// GetPayload returns the Payload field value
func (o *CatalogAction) GetPayload() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Payload
}

// SetPayload sets field value
func (o *CatalogAction) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

type NullableCatalogAction struct {
	Value        CatalogAction
	ExplicitNull bool
}

func (v NullableCatalogAction) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCatalogAction) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
