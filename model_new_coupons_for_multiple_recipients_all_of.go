/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// NewCouponsForMultipleRecipientsAllOf struct for NewCouponsForMultipleRecipientsAllOf
type NewCouponsForMultipleRecipientsAllOf struct {
	// Arbitrary properties associated with this item.
	Attributes *map[string]map[string]interface{} `json:"attributes,omitempty"`
	// The integration IDs for recipients.
	RecipientsIntegrationIds []string `json:"recipientsIntegrationIds"`
	// List of characters used to generate the random parts of a code. By default, the list of characters is equivalent to the `[A-Z, 0-9]` regular expression. 
	ValidCharacters *[]string `json:"validCharacters,omitempty"`
	// The pattern used to generate coupon codes. The character `#` is a placeholder and is replaced by a random character from the `validCharacters` set. 
	CouponPattern *string `json:"couponPattern,omitempty"`
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *NewCouponsForMultipleRecipientsAllOf) GetAttributes() map[string]map[string]interface{} {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCouponsForMultipleRecipientsAllOf) GetAttributesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Attributes == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *NewCouponsForMultipleRecipientsAllOf) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]map[string]interface{} and assigns it to the Attributes field.
func (o *NewCouponsForMultipleRecipientsAllOf) SetAttributes(v map[string]map[string]interface{}) {
	o.Attributes = &v
}

// GetRecipientsIntegrationIds returns the RecipientsIntegrationIds field value
func (o *NewCouponsForMultipleRecipientsAllOf) GetRecipientsIntegrationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecipientsIntegrationIds
}

// SetRecipientsIntegrationIds sets field value
func (o *NewCouponsForMultipleRecipientsAllOf) SetRecipientsIntegrationIds(v []string) {
	o.RecipientsIntegrationIds = v
}

// GetValidCharacters returns the ValidCharacters field value if set, zero value otherwise.
func (o *NewCouponsForMultipleRecipientsAllOf) GetValidCharacters() []string {
	if o == nil || o.ValidCharacters == nil {
		var ret []string
		return ret
	}
	return *o.ValidCharacters
}

// GetValidCharactersOk returns a tuple with the ValidCharacters field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCouponsForMultipleRecipientsAllOf) GetValidCharactersOk() ([]string, bool) {
	if o == nil || o.ValidCharacters == nil {
		var ret []string
		return ret, false
	}
	return *o.ValidCharacters, true
}

// HasValidCharacters returns a boolean if a field has been set.
func (o *NewCouponsForMultipleRecipientsAllOf) HasValidCharacters() bool {
	if o != nil && o.ValidCharacters != nil {
		return true
	}

	return false
}

// SetValidCharacters gets a reference to the given []string and assigns it to the ValidCharacters field.
func (o *NewCouponsForMultipleRecipientsAllOf) SetValidCharacters(v []string) {
	o.ValidCharacters = &v
}

// GetCouponPattern returns the CouponPattern field value if set, zero value otherwise.
func (o *NewCouponsForMultipleRecipientsAllOf) GetCouponPattern() string {
	if o == nil || o.CouponPattern == nil {
		var ret string
		return ret
	}
	return *o.CouponPattern
}

// GetCouponPatternOk returns a tuple with the CouponPattern field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewCouponsForMultipleRecipientsAllOf) GetCouponPatternOk() (string, bool) {
	if o == nil || o.CouponPattern == nil {
		var ret string
		return ret, false
	}
	return *o.CouponPattern, true
}

// HasCouponPattern returns a boolean if a field has been set.
func (o *NewCouponsForMultipleRecipientsAllOf) HasCouponPattern() bool {
	if o != nil && o.CouponPattern != nil {
		return true
	}

	return false
}

// SetCouponPattern gets a reference to the given string and assigns it to the CouponPattern field.
func (o *NewCouponsForMultipleRecipientsAllOf) SetCouponPattern(v string) {
	o.CouponPattern = &v
}

type NullableNewCouponsForMultipleRecipientsAllOf struct {
	Value NewCouponsForMultipleRecipientsAllOf
	ExplicitNull bool
}

func (v NullableNewCouponsForMultipleRecipientsAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableNewCouponsForMultipleRecipientsAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
