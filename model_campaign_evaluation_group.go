/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CampaignEvaluationGroup struct for CampaignEvaluationGroup
type CampaignEvaluationGroup struct {
	// The ID of the application that owns this entity.
	ApplicationId int32 `json:"applicationId"`
	// The name of the campaign evaluation group.
	Name string `json:"name"`
	// The ID of the parent group that contains the campaign evaluation group.
	ParentId int32 `json:"parentId"`
	// A description of the campaign evaluation group.
	Description *string `json:"description,omitempty"`
	// The mode by which campaigns in the campaign evaluation group are evaluated.
	EvaluationMode string `json:"evaluationMode"`
	// The evaluation scope of the campaign evaluation group.
	EvaluationScope string `json:"evaluationScope"`
	// An indicator of whether the campaign evaluation group is locked for modification.
	Locked bool `json:"locked"`
	// Unique ID for this entity. Not to be confused with the Integration ID, which is set by your integration layer and used in most endpoints.
	Id int32 `json:"id"`
}

// GetApplicationId returns the ApplicationId field value
func (o *CampaignEvaluationGroup) GetApplicationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApplicationId
}

// SetApplicationId sets field value
func (o *CampaignEvaluationGroup) SetApplicationId(v int32) {
	o.ApplicationId = v
}

// GetName returns the Name field value
func (o *CampaignEvaluationGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *CampaignEvaluationGroup) SetName(v string) {
	o.Name = v
}

// GetParentId returns the ParentId field value
func (o *CampaignEvaluationGroup) GetParentId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ParentId
}

// SetParentId sets field value
func (o *CampaignEvaluationGroup) SetParentId(v int32) {
	o.ParentId = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CampaignEvaluationGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CampaignEvaluationGroup) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CampaignEvaluationGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CampaignEvaluationGroup) SetDescription(v string) {
	o.Description = &v
}

// GetEvaluationMode returns the EvaluationMode field value
func (o *CampaignEvaluationGroup) GetEvaluationMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EvaluationMode
}

// SetEvaluationMode sets field value
func (o *CampaignEvaluationGroup) SetEvaluationMode(v string) {
	o.EvaluationMode = v
}

// GetEvaluationScope returns the EvaluationScope field value
func (o *CampaignEvaluationGroup) GetEvaluationScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EvaluationScope
}

// SetEvaluationScope sets field value
func (o *CampaignEvaluationGroup) SetEvaluationScope(v string) {
	o.EvaluationScope = v
}

// GetLocked returns the Locked field value
func (o *CampaignEvaluationGroup) GetLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Locked
}

// SetLocked sets field value
func (o *CampaignEvaluationGroup) SetLocked(v bool) {
	o.Locked = v
}

// GetId returns the Id field value
func (o *CampaignEvaluationGroup) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// SetId sets field value
func (o *CampaignEvaluationGroup) SetId(v int32) {
	o.Id = v
}

type NullableCampaignEvaluationGroup struct {
	Value CampaignEvaluationGroup
	ExplicitNull bool
}

func (v NullableCampaignEvaluationGroup) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCampaignEvaluationGroup) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
