/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// ReferralAllOf struct for ReferralAllOf
type ReferralAllOf struct {
	// The referral code.
	Code string `json:"code"`
	// The number of times this referral code has been successfully used.
	UsageCounter int32 `json:"usageCounter"`
	// The ID of the batch the referrals belong to.
	BatchId *string `json:"batchId,omitempty"`
}

// GetCode returns the Code field value
func (o *ReferralAllOf) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// SetCode sets field value
func (o *ReferralAllOf) SetCode(v string) {
	o.Code = v
}

// GetUsageCounter returns the UsageCounter field value
func (o *ReferralAllOf) GetUsageCounter() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UsageCounter
}

// SetUsageCounter sets field value
func (o *ReferralAllOf) SetUsageCounter(v int32) {
	o.UsageCounter = v
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *ReferralAllOf) GetBatchId() string {
	if o == nil || o.BatchId == nil {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ReferralAllOf) GetBatchIdOk() (string, bool) {
	if o == nil || o.BatchId == nil {
		var ret string
		return ret, false
	}
	return *o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *ReferralAllOf) HasBatchId() bool {
	if o != nil && o.BatchId != nil {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *ReferralAllOf) SetBatchId(v string) {
	o.BatchId = &v
}

type NullableReferralAllOf struct {
	Value ReferralAllOf
	ExplicitNull bool
}

func (v NullableReferralAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableReferralAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
