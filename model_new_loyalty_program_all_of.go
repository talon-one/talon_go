/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// NewLoyaltyProgramAllOf A new loyalty program
type NewLoyaltyProgramAllOf struct {
	// The internal name for the Loyalty Program. This is an immutable value.
	Name string `json:"name"`
	// The tiers in this loyalty program.
	Tiers *[]NewLoyaltyTier `json:"tiers,omitempty"`
	// A string containing an IANA timezone descriptor.
	Timezone string `json:"timezone"`
	// Defines the type of loyalty program: - `true`: the program is a card-based. - `false`: the program is profile-based. 
	CardBased bool `json:"cardBased"`
}

// GetName returns the Name field value
func (o *NewLoyaltyProgramAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *NewLoyaltyProgramAllOf) SetName(v string) {
	o.Name = v
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *NewLoyaltyProgramAllOf) GetTiers() []NewLoyaltyTier {
	if o == nil || o.Tiers == nil {
		var ret []NewLoyaltyTier
		return ret
	}
	return *o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NewLoyaltyProgramAllOf) GetTiersOk() ([]NewLoyaltyTier, bool) {
	if o == nil || o.Tiers == nil {
		var ret []NewLoyaltyTier
		return ret, false
	}
	return *o.Tiers, true
}

// HasTiers returns a boolean if a field has been set.
func (o *NewLoyaltyProgramAllOf) HasTiers() bool {
	if o != nil && o.Tiers != nil {
		return true
	}

	return false
}

// SetTiers gets a reference to the given []NewLoyaltyTier and assigns it to the Tiers field.
func (o *NewLoyaltyProgramAllOf) SetTiers(v []NewLoyaltyTier) {
	o.Tiers = &v
}

// GetTimezone returns the Timezone field value
func (o *NewLoyaltyProgramAllOf) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// SetTimezone sets field value
func (o *NewLoyaltyProgramAllOf) SetTimezone(v string) {
	o.Timezone = v
}

// GetCardBased returns the CardBased field value
func (o *NewLoyaltyProgramAllOf) GetCardBased() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CardBased
}

// SetCardBased sets field value
func (o *NewLoyaltyProgramAllOf) SetCardBased(v bool) {
	o.CardBased = v
}

type NullableNewLoyaltyProgramAllOf struct {
	Value NewLoyaltyProgramAllOf
	ExplicitNull bool
}

func (v NullableNewLoyaltyProgramAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableNewLoyaltyProgramAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
