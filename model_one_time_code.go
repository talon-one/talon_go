/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// OneTimeCode struct for OneTimeCode
type OneTimeCode struct {
	// The ID of the user.
	UserId int32 `json:"userId"`
	// The ID of the account.
	AccountId int32 `json:"accountId"`
	// The two-factor authentication token created during sign-in. This token is used to ensure that the correct user is trying to sign in with a given one-time security code.
	Token string `json:"token"`
	// The one-time security code used for signing in.
	Code *string `json:"code,omitempty"`
}

// GetUserId returns the UserId field value
func (o *OneTimeCode) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// SetUserId sets field value
func (o *OneTimeCode) SetUserId(v int32) {
	o.UserId = v
}

// GetAccountId returns the AccountId field value
func (o *OneTimeCode) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// SetAccountId sets field value
func (o *OneTimeCode) SetAccountId(v int32) {
	o.AccountId = v
}

// GetToken returns the Token field value
func (o *OneTimeCode) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// SetToken sets field value
func (o *OneTimeCode) SetToken(v string) {
	o.Token = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OneTimeCode) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OneTimeCode) GetCodeOk() (string, bool) {
	if o == nil || o.Code == nil {
		var ret string
		return ret, false
	}
	return *o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OneTimeCode) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OneTimeCode) SetCode(v string) {
	o.Code = &v
}

type NullableOneTimeCode struct {
	Value OneTimeCode
	ExplicitNull bool
}

func (v NullableOneTimeCode) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableOneTimeCode) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
