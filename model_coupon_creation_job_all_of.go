/*
 * Talon.One API
 *
 * Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package talon

import (
	"bytes"
	"encoding/json"
)

// CouponCreationJobAllOf struct for CouponCreationJobAllOf
type CouponCreationJobAllOf struct {
	// The batch ID coupons created by this job will bear.
	BatchId string `json:"batchId"`
	// The current status of this request. Possible values: - `pending verification` - `pending` - `completed` - `failed` - `coupon pattern full` 
	Status string `json:"status"`
	// The number of coupon codes that were already created for this request.
	CreatedAmount int32 `json:"createdAmount"`
	// The number of times this job failed.
	FailCount int32 `json:"failCount"`
	// An array of individual problems encountered during the request.
	Errors []string `json:"errors"`
	// ID of the user who created this effect.
	CreatedBy int32 `json:"createdBy"`
	// Whether or not the user that created this job was notified of its final state.
	Communicated bool `json:"communicated"`
	// The number of times an attempt to create a chunk of coupons was made during the processing of the job.
	ChunkExecutionCount int32 `json:"chunkExecutionCount"`
	// The number of coupons that will be created in a single transactions. Coupons will be created in chunks until arriving at the requested amount.
	ChunkSize *int32 `json:"chunkSize,omitempty"`
}

// GetBatchId returns the BatchId field value
func (o *CouponCreationJobAllOf) GetBatchId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BatchId
}

// SetBatchId sets field value
func (o *CouponCreationJobAllOf) SetBatchId(v string) {
	o.BatchId = v
}

// GetStatus returns the Status field value
func (o *CouponCreationJobAllOf) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// SetStatus sets field value
func (o *CouponCreationJobAllOf) SetStatus(v string) {
	o.Status = v
}

// GetCreatedAmount returns the CreatedAmount field value
func (o *CouponCreationJobAllOf) GetCreatedAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAmount
}

// SetCreatedAmount sets field value
func (o *CouponCreationJobAllOf) SetCreatedAmount(v int32) {
	o.CreatedAmount = v
}

// GetFailCount returns the FailCount field value
func (o *CouponCreationJobAllOf) GetFailCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailCount
}

// SetFailCount sets field value
func (o *CouponCreationJobAllOf) SetFailCount(v int32) {
	o.FailCount = v
}

// GetErrors returns the Errors field value
func (o *CouponCreationJobAllOf) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Errors
}

// SetErrors sets field value
func (o *CouponCreationJobAllOf) SetErrors(v []string) {
	o.Errors = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *CouponCreationJobAllOf) GetCreatedBy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedBy
}

// SetCreatedBy sets field value
func (o *CouponCreationJobAllOf) SetCreatedBy(v int32) {
	o.CreatedBy = v
}

// GetCommunicated returns the Communicated field value
func (o *CouponCreationJobAllOf) GetCommunicated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Communicated
}

// SetCommunicated sets field value
func (o *CouponCreationJobAllOf) SetCommunicated(v bool) {
	o.Communicated = v
}

// GetChunkExecutionCount returns the ChunkExecutionCount field value
func (o *CouponCreationJobAllOf) GetChunkExecutionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChunkExecutionCount
}

// SetChunkExecutionCount sets field value
func (o *CouponCreationJobAllOf) SetChunkExecutionCount(v int32) {
	o.ChunkExecutionCount = v
}

// GetChunkSize returns the ChunkSize field value if set, zero value otherwise.
func (o *CouponCreationJobAllOf) GetChunkSize() int32 {
	if o == nil || o.ChunkSize == nil {
		var ret int32
		return ret
	}
	return *o.ChunkSize
}

// GetChunkSizeOk returns a tuple with the ChunkSize field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CouponCreationJobAllOf) GetChunkSizeOk() (int32, bool) {
	if o == nil || o.ChunkSize == nil {
		var ret int32
		return ret, false
	}
	return *o.ChunkSize, true
}

// HasChunkSize returns a boolean if a field has been set.
func (o *CouponCreationJobAllOf) HasChunkSize() bool {
	if o != nil && o.ChunkSize != nil {
		return true
	}

	return false
}

// SetChunkSize gets a reference to the given int32 and assigns it to the ChunkSize field.
func (o *CouponCreationJobAllOf) SetChunkSize(v int32) {
	o.ChunkSize = &v
}

type NullableCouponCreationJobAllOf struct {
	Value CouponCreationJobAllOf
	ExplicitNull bool
}

func (v NullableCouponCreationJobAllOf) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCouponCreationJobAllOf) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
